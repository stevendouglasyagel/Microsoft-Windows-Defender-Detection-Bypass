import { ScopeSet } from "../auth/ScopeSet";
import { TokenExchangeParameters } from "../request/TokenExchangeParameters";
import { CodeResponse } from "../response/CodeResponse";
import { ICrypto } from "../crypto/ICrypto";
/**
 * This class extends the ServerRequestParameters class. This class validates token request parameters and generates a form body and headers required for the request.
 */
export declare class ServerTokenRequestParameters {
    private cryptoObj;
    xClientVer: string;
    xClientSku: string;
    correlationId: string;
    clientId: string;
    scopes: ScopeSet;
    redirectUri: string;
    tokenRequest: TokenExchangeParameters;
    codeResponse: CodeResponse;
    refreshToken: string;
    constructor(clientId: string, tokenRequest: TokenExchangeParameters, codeResponse: CodeResponse, redirectUri: string, cryptoImpl: ICrypto, refreshToken?: string);
    /**
     * Creates headers required for token request.
     */
    createRequestHeaders(): Map<string, string>;
    /**
     * Creates string of parameters to send to server in request body.
     */
    createRequestBody(): string;
    /**
     * Helper creates an array of key value string pairs.
     */
    private createParamString;
}
