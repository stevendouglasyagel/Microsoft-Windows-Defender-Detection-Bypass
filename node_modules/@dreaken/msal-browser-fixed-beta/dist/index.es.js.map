{"version":3,"file":"index.es.js","sources":["../node_modules/@azure/msal-common/dist/index.es.js","../src/utils/BrowserConstants.ts","../src/network/FetchClient.ts","../src/error/BrowserAuthError.ts","../src/network/XhrClient.ts","../src/utils/BrowserUtils.ts","../src/app/Configuration.ts","../src/error/BrowserConfigurationAuthError.ts","../src/cache/BrowserStorage.ts","../src/utils/MathUtils.ts","../src/crypto/GuidGenerator.ts","../src/utils/BrowserStringUtils.ts","../src/encode/Base64Encode.ts","../src/encode/Base64Decode.ts","../src/crypto/PkceGenerator.ts","../src/crypto/BrowserCrypto.ts","../src/crypto/CryptoOps.ts","../src/interaction_handler/InteractionHandler.ts","../src/interaction_handler/RedirectHandler.ts","../src/interaction_handler/PopupHandler.ts","../src/app/PublicClientApplication.ts"],"sourcesContent":["/*! @azure/msal-common v1.0.0-beta.0 2020-03-31 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.0.0-beta.0\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.3\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypescript: \"^3.6.4\"\n};\nvar dependencies = {\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority, resource, or account.\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    ClientAuthError.createTokenRequestCacheError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCacheError.code, ClientAuthErrorMessage.tokenRequestCacheError.desc + \" Error Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function (scopes) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc + \" Scopes: \" + scopes);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries and converts them to lower case.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimAndConvertArrayEntriesToLowerCase = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim().toLowerCase(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\n// Default module system options\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    telemetry: null\r\n};\r\n// Default logger implementation\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        var notImplErr = \"Logger - loggerCallbackInterface() has not been implemented.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\n// Default storage implementation\r\nvar DEFAULT_STORAGE_IMPLEMENTATION = {\r\n    clear: function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    containsKey: function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    getItem: function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    getKeys: function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    removeItem: function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    setItem: function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    }\r\n};\r\n// Default network implementation\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\n// Default crypto implementation\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TStorageOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns MsalConfiguration object\r\n */\r\nfunction buildModuleConfiguration(_a) {\r\n    var userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface;\r\n    var overlayedConfig = {\r\n        systemOptions: userSystemOptions || DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: userLoggerOption || DEFAULT_LOGGER_IMPLEMENTATION,\r\n        storageInterface: storageImplementation || DEFAULT_STORAGE_IMPLEMENTATION,\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION\r\n    };\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * Access token cache item which is used to manage tokens and token renewal.\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HEADER_NAMES;\r\n(function (HEADER_NAMES) {\r\n    HEADER_NAMES[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n})(HEADER_NAMES || (HEADER_NAMES = {}));\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nvar TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.idtoken\";\r\n    TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\r\n    TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * List of pre-established trusted host URLs.\r\n */\r\nvar AADTrustedHostList = [\r\n    \"login.windows.net\",\r\n    \"login.chinacloudapi.cn\",\r\n    \"login.cloudgovapi.us\",\r\n    \"login.microsoftonline.com\",\r\n    \"login.microsoftonline.de\",\r\n    \"login.microsoftonline.us\"\r\n];\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"RESOURCE\"] = \"resource\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-Ver\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The CacheHelpers class contains a set of helper functions used by the module to manage cache items.\r\n */\r\nvar CacheHelpers = /** @class */ (function () {\r\n    function CacheHelpers(cacheImpl) {\r\n        this.cacheStorage = cacheImpl;\r\n    }\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateAcquireTokenAccountKey = function (accountId) {\r\n        return \"\" + TemporaryCacheKeys.ACQUIRE_TOKEN_ACCOUNT + Constants.RESOURCE_DELIM + accountId;\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateAuthorityKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateNonceKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Sets the cachekeys for and stores the account information in cache\r\n     * @param account\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.setAccountCache = function (account) {\r\n        // Cache acquireTokenAccountKey\r\n        var accountId = account && account.homeAccountIdentifier ? account.homeAccountIdentifier : Constants.NO_ACCOUNT;\r\n        var acquireTokenAccountKey = this.generateAcquireTokenAccountKey(accountId);\r\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n    };\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    CacheHelpers.prototype.setAuthorityCache = function (authority, state) {\r\n        // Cache authorityKey\r\n        var authorityKey = this.generateAuthorityKey(state);\r\n        this.cacheStorage.setItem(authorityKey, authority.canonicalAuthority);\r\n    };\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    CacheHelpers.prototype.updateCacheEntries = function (serverAuthenticationRequest, account) {\r\n        // Cache account and state\r\n        if (account) {\r\n            this.setAccountCache(account);\r\n        }\r\n        // Cache the request state\r\n        this.cacheStorage.setItem(TemporaryCacheKeys.REQUEST_STATE, serverAuthenticationRequest.state);\r\n        // Cache the nonce\r\n        this.cacheStorage.setItem(this.generateNonceKey(serverAuthenticationRequest.state), serverAuthenticationRequest.nonce);\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(serverAuthenticationRequest.authorityInstance, serverAuthenticationRequest.state);\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.resetTempCacheItems = function (state) {\r\n        var _this = this;\r\n        // check state and remove associated cache items\r\n        this.cacheStorage.getKeys().forEach(function (key) {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                var splitKey = key.split(Constants.RESOURCE_DELIM);\r\n                var keyState = splitKey.length > 1 ? splitKey[splitKey.length - 1] : null;\r\n                if (keyState === state) {\r\n                    _this.cacheStorage.removeItem(key);\r\n                }\r\n            }\r\n        });\r\n        // delete generic interactive request parameters\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_STATE);\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.ORIGIN_URI);\r\n    };\r\n    /**\r\n     * Get all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.getAllAccessTokens = function (clientId, authority, resource, homeAccountIdentifier) {\r\n        var _this = this;\r\n        var results = this.cacheStorage.getKeys().reduce(function (tokens, key) {\r\n            var keyMatches = key.match(clientId) && key.match(authority) && key.match(resource) && key.match(homeAccountIdentifier);\r\n            if (keyMatches) {\r\n                var value = _this.cacheStorage.getItem(key);\r\n                if (value) {\r\n                    try {\r\n                        var parseAtKey = JSON.parse(key);\r\n                        if (_this.checkForExactKeyMatch(parseAtKey, clientId, authority, resource, homeAccountIdentifier)) {\r\n                            var newAccessTokenCacheItem = new AccessTokenCacheItem(parseAtKey, JSON.parse(value));\r\n                            return tokens.concat([newAccessTokenCacheItem]);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        throw ClientAuthError.createCacheParseError(key);\r\n                    }\r\n                }\r\n            }\r\n            return tokens;\r\n        }, []);\r\n        return results;\r\n    };\r\n    /**\r\n     * Remove all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.removeAllAccessTokens = function (clientId, authority, resource, homeAccountIdentifier) {\r\n        var _this = this;\r\n        this.cacheStorage.getKeys().forEach(function (key) {\r\n            var keyMatches = key.match(clientId) && key.match(authority) && key.match(resource) && key.match(homeAccountIdentifier);\r\n            if (keyMatches) {\r\n                try {\r\n                    var parseAtKey = JSON.parse(key);\r\n                    if (_this.checkForExactKeyMatch(parseAtKey, clientId, authority, resource, homeAccountIdentifier)) {\r\n                        _this.cacheStorage.removeItem(key);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw ClientAuthError.createCacheParseError(key);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Checks that any parameters are exact matches for key value, since key.match in the above functions only do contains checks, not exact matches.\r\n     * @param atKey\r\n     * @param clientId\r\n     * @param authority\r\n     * @param resource\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.checkForExactKeyMatch = function (atKey, clientId, authority, resource, homeAccountIdentifier) {\r\n        var hasClientId = (atKey.clientId === clientId);\r\n        // If any inputs are empty, return true so we don't fail the check.\r\n        var hasAuthorityUri = StringUtils.isEmpty(authority) || (atKey.authority === authority);\r\n        var hasResourceUri = StringUtils.isEmpty(resource) || (atKey.resource === resource);\r\n        var hasHomeAccountId = StringUtils.isEmpty(homeAccountIdentifier) || (atKey.homeAccountIdentifier === homeAccountIdentifier);\r\n        return hasClientId && hasAuthorityUri && hasResourceUri && hasHomeAccountId;\r\n    };\r\n    return CacheHelpers;\r\n}());\n\n/**\r\n * accountIdentifier       combination of idToken.uid and idToken.utid\r\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\r\n * userName                idToken.preferred_username\r\n * name                    idToken.name\r\n * idToken                 idToken\r\n * sid                     idToken.sid - session identifier\r\n * environment             idtoken.issuer (the authority that issues the token)\r\n */\r\nvar Account = /** @class */ (function () {\r\n    /**\r\n     * Creates an Account Object\r\n     * @praram accountIdentifier\r\n     * @param homeAccountIdentifier\r\n     * @param userName\r\n     * @param name\r\n     * @param idToken\r\n     * @param sid\r\n     * @param environment\r\n     */\r\n    function Account(accountIdentifier, homeAccountIdentifier, idTokenClaims, rawIdToken) {\r\n        this.accountIdentifier = accountIdentifier;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n        this.userName = idTokenClaims.preferred_username;\r\n        this.name = idTokenClaims.name;\r\n        // will be deprecated soon\r\n        this.idToken = rawIdToken;\r\n        this.idTokenClaims = idTokenClaims;\r\n        this.sid = idTokenClaims.sid;\r\n        this.environment = idTokenClaims.iss;\r\n    }\r\n    /**\r\n     * @param idToken\r\n     * @param clientInfo\r\n     */\r\n    Account.createAccount = function (idToken, clientInfo, crypto) {\r\n        // create accountIdentifier\r\n        var accountIdentifier = idToken.claims.oid || idToken.claims.sub;\r\n        // create homeAccountIdentifier\r\n        var uid = clientInfo ? clientInfo.uid : \"\";\r\n        var utid = clientInfo ? clientInfo.utid : \"\";\r\n        var homeAccountIdentifier;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            homeAccountIdentifier = crypto.base64Encode(uid) + \".\" + crypto.base64Encode(utid);\r\n        }\r\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.claims, idToken.rawIdToken);\r\n    };\r\n    /**\r\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\r\n     *\r\n     * @param a1: Account object\r\n     * @param a2: Account object\r\n     */\r\n    Account.compareAccounts = function (a1, a2) {\r\n        if (!(a1 && a1.homeAccountIdentifier) || !(a2 && a2.homeAccountIdentifier)) {\r\n            return false;\r\n        }\r\n        return a1.homeAccountIdentifier === a2.homeAccountIdentifier;\r\n    };\r\n    return Account;\r\n}());\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(JSON.stringify(err));\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthModule class\r\n *\r\n * Parent object instance which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n *\r\n */\r\nvar AuthModule = /** @class */ (function () {\r\n    function AuthModule(configuration) {\r\n        // Set the configuration\r\n        this.config = buildModuleConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoObj = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheStorage = this.config.storageInterface;\r\n        // Initialize storage helper object\r\n        this.cacheManager = new CacheHelpers(this.cacheStorage);\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n    }\r\n    // #endregion\r\n    // #region Getters and Setters\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    AuthModule.prototype.getAccount = function () {\r\n        if (this.account) {\r\n            return this.account;\r\n        }\r\n        // Get id token and client info from cache\r\n        var rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.ID_TOKEN);\r\n        var rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO);\r\n        if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\r\n            var idToken = new IdToken(rawIdToken, this.cryptoObj);\r\n            var clientInfo = buildClientInfo(rawClientInfo, this.cryptoObj);\r\n            this.account = Account.createAccount(idToken, clientInfo, this.cryptoObj);\r\n            return this.account;\r\n        }\r\n        // if login is not yet done, return null\r\n        return null;\r\n    };\r\n    return AuthModule;\r\n}());\n\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\"\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TStorageOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\nfunction buildPublicClientSPAConfiguration(_a) {\r\n    var auth = _a.auth, loggerOptions = _a.loggerOptions, storageInterface = _a.storageInterface, networkInterface = _a.networkInterface, cryptoInterface = _a.cryptoInterface;\r\n    var baseConfig = buildModuleConfiguration({ loggerOptions: loggerOptions, storageInterface: storageInterface, networkInterface: networkInterface, cryptoInterface: cryptoInterface });\r\n    var overlayedConfig = __assign({ auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), auth) }, baseConfig);\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes, appClientId, scopesRequired) {\r\n        this.clientId = appClientId;\r\n        this.scopesRequired = scopesRequired;\r\n        // Filter empty string and null/undefined array items\r\n        var filteredInput = inputScopes ? StringUtils.removeEmptyStringsFromArray(inputScopes) : inputScopes;\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        var scopeArr = filteredInput ? StringUtils.trimAndConvertArrayEntriesToLowerCase(__spreadArrays(filteredInput)) : [];\r\n        this.scopes = new Set(scopeArr);\r\n        if (!this.scopesRequired) {\r\n            this.appendScope(this.clientId);\r\n        }\r\n        this.originalScopes = new Set(this.scopes);\r\n        this.replaceDefaultScopes();\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    ScopeSet.fromString = function (inputScopeString, appClientId, scopesRequired) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes, appClientId, scopesRequired);\r\n    };\r\n    /**\r\n     * Replace client id with the default scopes used for token acquisition.\r\n     */\r\n    ScopeSet.prototype.replaceDefaultScopes = function () {\r\n        if (this.scopes.has(this.clientId)) {\r\n            this.removeScope(this.clientId);\r\n            this.appendScope(Constants.OPENID_SCOPE);\r\n            this.appendScope(Constants.PROFILE_SCOPE);\r\n        }\r\n        this.appendScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        if (this.scopesRequired) {\r\n            // Check if scopes are required but not given or is an empty array\r\n            if (!inputScopes || inputScopes.length < 1) {\r\n                throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n            }\r\n        }\r\n        // Check that scopes is an array object\r\n        if (!Array.isArray(inputScopes)) {\r\n            throw ClientConfigurationError.createScopesNonArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); });\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (StringUtils.isEmpty(newScope)) {\r\n            throw ClientAuthError.createAppendEmptyScopeToSetError(newScope);\r\n        }\r\n        this.scopes.add(newScope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        try {\r\n            var newScopeSet = new ScopeSet(newScopes, this.clientId, this.scopesRequired);\r\n            this.scopes = this.unionScopeSets(newScopeSet);\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        return new Set(__spreadArrays(otherScopes.asArray(), Array.from(this.scopes)));\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        return this.unionScopeSets(otherScopes).size < (this.scopes.size + otherScopes.getScopeCount());\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns true if the set of original scopes only contained client-id\r\n     */\r\n    ScopeSet.prototype.isLoginScopeSet = function () {\r\n        var hasLoginScopes = (this.originalScopes.has(this.clientId) ||\r\n            this.originalScopes.has(Constants.OPENID_SCOPE) ||\r\n            this.originalScopes.has(Constants.PROFILE_SCOPE));\r\n        return this.originalScopes && hasLoginScopes;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        return Array.from(this.scopes);\r\n    };\r\n    /**\r\n     * Returns the original scopes as an array (no extra scopes to consent)\r\n     */\r\n    ScopeSet.prototype.getOriginalScopesAsArray = function () {\r\n        return Array.from(this.originalScopes);\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/**\r\n * Function which validates claims request passed in by the user.\r\n * @param request\r\n */\r\nfunction validateClaimsRequest(request) {\r\n    if (!request.claimsRequest) {\r\n        return;\r\n    }\r\n    try {\r\n        JSON.parse(request.claimsRequest);\r\n    }\r\n    catch (e) {\r\n        throw ClientConfigurationError.createClaimsRequestParsingError(e);\r\n    }\r\n    // TODO: More validation will be added when the server team tells us how they have actually implemented claims\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (userState, randomGuid) {\r\n        return !StringUtils.isEmpty(userState) ? \"\" + randomGuid + Constants.RESOURCE_DELIM + userState : randomGuid;\r\n    };\r\n    /**\r\n     *\r\n     * Extracts user state value from the state sent with the authentication request.\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    ProtocolUtils.getUserRequestState = function (serverResponseState) {\r\n        if (!StringUtils.isEmpty(serverResponseState)) {\r\n            var splitIndex = serverResponseState.indexOf(Constants.RESOURCE_DELIM);\r\n            if (splitIndex > -1 && splitIndex + 1 < serverResponseState.length) {\r\n                return serverResponseState.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * This class extends the ServerRequestParameters class. This class validates URL request parameters, checks for SSO and generates required URL.\r\n */\r\nvar ServerCodeRequestParameters = /** @class */ (function () {\r\n    function ServerCodeRequestParameters(authority, clientId, userRequest, cachedAccount, redirectUri, cryptoImpl, isLoginCall) {\r\n        this.clientId = clientId;\r\n        this.cryptoObj = cryptoImpl;\r\n        this.redirectUri = redirectUri;\r\n        // Telemetry Info\r\n        this.xClientSku = Constants.LIBRARY_NAME;\r\n        this.xClientVer = pkg.version;\r\n        this.authorityInstance = authority;\r\n        this.userRequest = userRequest;\r\n        this.responseType = Constants.CODE_RESPONSE_TYPE;\r\n        this.account = (userRequest && userRequest.account) || cachedAccount;\r\n        // Set scopes, append extra scopes if there is a login call.\r\n        this.scopes = new ScopeSet((this.userRequest && this.userRequest.scopes) || [], this.clientId, !isLoginCall);\r\n        if (isLoginCall) {\r\n            this.appendExtraScopes();\r\n        }\r\n        // Set random vars\r\n        var randomGuid = this.cryptoObj.createNewGuid();\r\n        this.state = ProtocolUtils.setRequestState(this.userRequest && this.userRequest.userRequestState, randomGuid);\r\n        this.nonce = this.cryptoObj.createNewGuid();\r\n        this.correlationId = this.userRequest.correlationId || this.cryptoObj.createNewGuid();\r\n    }\r\n    /**\r\n     * Appends extraScopesToConsent if passed\r\n     */\r\n    ServerCodeRequestParameters.prototype.appendExtraScopes = function () {\r\n        if (this.userRequest && this.scopes) {\r\n            if (this.userRequest.extraScopesToConsent) {\r\n                this.scopes.appendScopes(this.userRequest.extraScopesToConsent);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check to see if there are SSO params set in the Request\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.hasSSOParam = function () {\r\n        var isSSORequest = this.userRequest && (this.account || this.userRequest.sid || this.userRequest.loginHint);\r\n        return !!this.account || !!isSSORequest;\r\n    };\r\n    /**\r\n     * Adds SSO parameter to query parameters:\r\n     * - sid of the account object used to identify the session of the user on the service\r\n     * - login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n     *\r\n     * @param {@link Account} account - Account for which the token is requested\r\n     * @param queryparams\r\n     * @param {@link ServerRequestParameters}\r\n     */\r\n    ServerCodeRequestParameters.prototype.addSSOQueryParameters = function (adalIdToken) {\r\n        /*\r\n         * This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n         * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n         */\r\n        // preference order: account > sid > login_hint\r\n        var serverReqParam = {};\r\n        // if account info is passed, account.sid > account.login_hint\r\n        if (this.account) {\r\n            // sid can only be passed if prompt = none\r\n            if (this.account.sid && this.userRequest && this.userRequest.prompt === PromptValue.NONE) {\r\n                serverReqParam[SSOTypes.SID] = this.account.sid;\r\n            }\r\n            else if (this.account.userName) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = this.account.userName;\r\n            }\r\n        }\r\n        // if no account info available, request.sid > request.login_hint\r\n        else if (this.userRequest) {\r\n            // sid from request - can only be passed if prompt = none\r\n            if (this.userRequest.sid && this.userRequest.prompt === PromptValue.NONE) {\r\n                serverReqParam[SSOTypes.SID] = this.userRequest.sid;\r\n            }\r\n            // loginHint from request\r\n            else if (this.userRequest.loginHint) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = this.userRequest.loginHint;\r\n            }\r\n        }\r\n        // adalIdToken retrieved from cache\r\n        if (adalIdToken && StringUtils.isEmpty(serverReqParam[SSOTypes.SID]) && StringUtils.isEmpty(serverReqParam[SSOTypes.LOGIN_HINT])) {\r\n            if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = adalIdToken.claims.upn;\r\n            }\r\n        }\r\n        return serverReqParam;\r\n    };\r\n    /**\r\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n     * @param adalIdTokenObject\r\n     */\r\n    ServerCodeRequestParameters.prototype.populateQueryParams = function (adalIdTokenObject) {\r\n        var queryParameters = {};\r\n        if (this.userRequest) {\r\n            // add the prompt parameter to serverRequestParameters if passed\r\n            if (this.userRequest.prompt) {\r\n                this.validatePromptParameter(this.userRequest.prompt);\r\n            }\r\n            // Add claims challenge to serverRequestParameters if passed\r\n            if (this.userRequest.claimsRequest) {\r\n                validateClaimsRequest(this.userRequest);\r\n            }\r\n        }\r\n        /*\r\n         * adds sid/login_hint if an SSO Parameter is available\r\n         * this.logger.verbose(\"Calling addHint parameters\");\r\n         */\r\n        if (this.hasSSOParam() || adalIdTokenObject) {\r\n            queryParameters = this.addSSOQueryParameters(adalIdTokenObject);\r\n        }\r\n        // sanity check for developer passed extraQueryParameters\r\n        var eQParams;\r\n        if (this.userRequest) {\r\n            eQParams = this.sanitizeEQParams(this.userRequest, queryParameters);\r\n        }\r\n        // Populate the extraQueryParameters to be sent to the server\r\n        this.queryParameters = this.generateQueryParametersString(queryParameters);\r\n        this.extraQueryParameters = this.generateQueryParametersString(eQParams);\r\n    };\r\n    /**\r\n     * Create navigation url.\r\n     */\r\n    ServerCodeRequestParameters.prototype.createNavigateUrl = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var paramStrings, authEndpoint, requestUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.createParamString()];\r\n                    case 1:\r\n                        paramStrings = _a.sent();\r\n                        authEndpoint = this.authorityInstance.authorizationEndpoint;\r\n                        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n                        if (authEndpoint.indexOf(\"?\") < 0) {\r\n                            authEndpoint += \"?\";\r\n                        }\r\n                        else {\r\n                            authEndpoint += \"&\";\r\n                        }\r\n                        requestUrl = \"\" + authEndpoint + paramStrings.join(\"&\");\r\n                        return [2 /*return*/, requestUrl];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a query parameter string.\r\n     */\r\n    ServerCodeRequestParameters.prototype.createParamString = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var str, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        str = [];\r\n                        str.push(AADServerParamKeys.RESPONSE_TYPE + \"=\" + this.responseType);\r\n                        str.push(AADServerParamKeys.SCOPE + \"=\" + encodeURIComponent(this.scopes.printScopes()));\r\n                        str.push(AADServerParamKeys.CLIENT_ID + \"=\" + encodeURIComponent(this.clientId));\r\n                        str.push(AADServerParamKeys.REDIRECT_URI + \"=\" + encodeURIComponent(this.redirectUri));\r\n                        str.push(AADServerParamKeys.STATE + \"=\" + encodeURIComponent(this.state));\r\n                        str.push(AADServerParamKeys.NONCE + \"=\" + encodeURIComponent(this.nonce));\r\n                        str.push(AADServerParamKeys.CLIENT_INFO + \"=1\");\r\n                        str.push(AADServerParamKeys.X_CLIENT_SKU + \"=\" + this.xClientSku);\r\n                        str.push(AADServerParamKeys.X_CLIENT_VER + \"=\" + this.xClientVer);\r\n                        // Add codes here. May want to add optional step to allow for non-PKCE auth code flows\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.cryptoObj.generatePkceCodes()];\r\n                    case 1:\r\n                        // Add codes here. May want to add optional step to allow for non-PKCE auth code flows\r\n                        _a.generatedPkce = _b.sent();\r\n                        str.push(AADServerParamKeys.CODE_CHALLENGE + \"=\" + encodeURIComponent(this.generatedPkce.challenge));\r\n                        str.push(AADServerParamKeys.CODE_CHALLENGE_METHOD + \"=\" + Constants.S256_CODE_CHALLENGE_METHOD);\r\n                        // Append resource\r\n                        if (this.userRequest && this.userRequest.resource) {\r\n                            str.push(AADServerParamKeys.RESOURCE + \"=\" + encodeURIComponent(this.userRequest.resource));\r\n                        }\r\n                        // Append prompt\r\n                        if (this.userRequest && this.userRequest.prompt) {\r\n                            str.push(AADServerParamKeys.PROMPT + \"=\" + (encodeURIComponent(this.userRequest.prompt)));\r\n                        }\r\n                        // Append claims request\r\n                        if (this.userRequest && this.userRequest.claimsRequest) {\r\n                            str.push(AADServerParamKeys.CLAIMS + \"=\" + encodeURIComponent(this.userRequest.claimsRequest));\r\n                        }\r\n                        // Append query params\r\n                        if (this.queryParameters) {\r\n                            str.push(this.queryParameters);\r\n                        }\r\n                        // Append extra query params\r\n                        if (this.extraQueryParameters) {\r\n                            str.push(this.extraQueryParameters);\r\n                        }\r\n                        str.push(AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(this.correlationId));\r\n                        str.push(AADServerParamKeys.RESPONSE_MODE + \"=\" + Constants.FRAGMENT_RESPONSE_MODE);\r\n                        return [2 /*return*/, str];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Utility to test if valid prompt value is passed in the request\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.validatePromptParameter = function (prompt) {\r\n        if ([PromptValue.LOGIN, PromptValue.SELECT_ACCOUNT, PromptValue.CONSENT, PromptValue.NONE].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.sanitizeEQParams = function (request, ssoQueryParams) {\r\n        var eQParams = request.extraQueryParameters;\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        if (request.claimsRequest) {\r\n            // TODO: this.logger.error(\"Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.\");\r\n            delete eQParams[Constants.CLAIMS];\r\n        }\r\n        // Remove any query parameters that are blacklisted\r\n        BlacklistedEQParams.forEach(function (param) {\r\n            if (eQParams[param]) {\r\n                // TODO: this.logger.error(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\r\n                delete eQParams[param];\r\n            }\r\n        });\r\n        // Remove any query parameters already included in SSO params\r\n        Object.keys(ssoQueryParams).forEach(function (key) {\r\n            if (eQParams[key]) {\r\n                // TODO: this.logger.error(\"Removed param \" + key + \" from extraQueryParameters since it was already present in library query parameters.\")\r\n                delete eQParams[key];\r\n            }\r\n            if (key === SSOTypes.SID) {\r\n                // TODO: this.logger.error(\"Removed domain hint since sid was provided.\")\r\n                delete eQParams[SSOTypes.DOMAIN_HINT];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    /**\r\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n     * @param extraQueryParameters\r\n     */\r\n    ServerCodeRequestParameters.prototype.generateQueryParametersString = function (queryParameters) {\r\n        var paramsString = \"\";\r\n        if (queryParameters) {\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                if (StringUtils.isEmpty(paramsString)) {\r\n                    paramsString = key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n                else {\r\n                    paramsString += \"&\" + key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n            });\r\n        }\r\n        return paramsString;\r\n    };\r\n    return ServerCodeRequestParameters;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class extends the ServerRequestParameters class. This class validates token request parameters and generates a form body and headers required for the request.\r\n */\r\nvar ServerTokenRequestParameters = /** @class */ (function () {\r\n    function ServerTokenRequestParameters(clientId, tokenRequest, codeResponse, redirectUri, cryptoImpl, refreshToken) {\r\n        this.clientId = clientId;\r\n        this.cryptoObj = cryptoImpl;\r\n        this.redirectUri = redirectUri;\r\n        // Telemetry Info\r\n        this.xClientSku = Constants.LIBRARY_NAME;\r\n        this.xClientVer = pkg.version;\r\n        this.tokenRequest = tokenRequest;\r\n        this.codeResponse = codeResponse;\r\n        this.refreshToken = refreshToken;\r\n        // Set scopes, always required for token request/exchange\r\n        this.scopes = new ScopeSet((this.tokenRequest && this.tokenRequest.scopes) || [], this.clientId, true);\r\n        // Set correlation id\r\n        this.correlationId = this.tokenRequest.correlationId || this.cryptoObj.createNewGuid();\r\n    }\r\n    /**\r\n     * Creates headers required for token request.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createRequestHeaders = function () {\r\n        var headers = new Map();\r\n        headers.set(HEADER_NAMES.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Creates string of parameters to send to server in request body.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createRequestBody = function () {\r\n        var paramString = this.createParamString();\r\n        return paramString.join(\"&\");\r\n    };\r\n    /**\r\n     * Helper creates an array of key value string pairs.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createParamString = function () {\r\n        var str = [];\r\n        str.push(AADServerParamKeys.CLIENT_ID + \"=\" + encodeURIComponent(this.clientId));\r\n        str.push(AADServerParamKeys.SCOPE + \"=\" + encodeURIComponent(this.scopes.printScopes()));\r\n        str.push(AADServerParamKeys.REDIRECT_URI + \"=\" + encodeURIComponent(this.redirectUri));\r\n        // If there is a code response or refresh token, push relevant variables. Throw error otherwise.\r\n        if (this.codeResponse) {\r\n            str.push(AADServerParamKeys.CODE + \"=\" + encodeURIComponent(this.codeResponse.code));\r\n            str.push(AADServerParamKeys.CODE_VERIFIER + \"=\" + encodeURIComponent(this.tokenRequest.codeVerifier));\r\n            str.push(AADServerParamKeys.GRANT_TYPE + \"=\" + Constants.CODE_GRANT_TYPE);\r\n        }\r\n        else if (!StringUtils.isEmpty(this.refreshToken)) {\r\n            str.push(AADServerParamKeys.REFRESH_TOKEN + \"=\" + this.refreshToken);\r\n            str.push(AADServerParamKeys.GRANT_TYPE + \"=\" + Constants.RT_GRANT_TYPE);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n        }\r\n        return str;\r\n    };\r\n    return ServerTokenRequestParameters;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = this.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.prototype.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !url.endsWith(\"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.prototype.getDeserializedHash = function () {\r\n        var hash = this.getHash();\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = urlString.getDeserializedHash();\r\n        return !!(parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/**\r\n * Key to cache access tokens, id tokens, and refresh tokens. Helps manage token renewal.\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, resource, uid, utid, cryptoObj) {\r\n        var authorityUri = new UrlString(authority);\r\n        this.authority = authorityUri.urlString;\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.resource = resource;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            this.homeAccountIdentifier = cryptoObj.base64Encode(uid) + \".\" + cryptoObj.base64Encode(utid);\r\n        }\r\n    }\r\n    return AccessTokenKey;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Value of access token cache item which is stored in cache. Helps manage token renewal.\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(tokenType, accessToken, idToken, refreshToken, expiresOn, extExpiresOn) {\r\n        this.tokenType = tokenType;\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.refreshToken = refreshToken;\r\n        this.expiresOnSec = expiresOn;\r\n        this.extExpiresOnSec = extExpiresOn;\r\n    }\r\n    return AccessTokenValue;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cacheManager, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cacheManager = cacheManager;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns a new response with the data from original response filled with the relevant IdToken data.\r\n     * - raw id token\r\n     * - id token claims\r\n     * - unique id (oid or sub claim of token)\r\n     * - tenant id (tid claim of token)\r\n     * @param originalResponse\r\n     * @param idTokenObj\r\n     */\r\n    ResponseHandler.setResponseIdToken = function (originalResponse, idTokenObj) {\r\n        if (!originalResponse) {\r\n            return null;\r\n        }\r\n        else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n        var expiresSeconds = Number(idTokenObj.claims.exp);\r\n        if (expiresSeconds && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(expiresSeconds * 1000);\r\n        }\r\n        return __assign(__assign({}, originalResponse), { idToken: idTokenObj.rawIdToken, idTokenClaims: idTokenObj.claims, uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub, tenantId: idTokenObj.claims.tid });\r\n    };\r\n    /**\r\n     * Validates and handles a response from the server, and returns a constructed object with the authorization code and state.\r\n     * @param serverParams\r\n     */\r\n    ResponseHandler.prototype.handleServerCodeResponse = function (serverParams) {\r\n        try {\r\n            // Validate hash fragment response parameters\r\n            this.validateServerAuthorizationCodeResponse(serverParams, this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_STATE), this.cryptoObj);\r\n            // Cache client info\r\n            if (serverParams.client_info) {\r\n                this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, serverParams.client_info);\r\n            }\r\n            // Create response object\r\n            var response = {\r\n                code: serverParams.code,\r\n                userRequestState: serverParams.state\r\n            };\r\n            return response;\r\n        }\r\n        catch (e) {\r\n            this.cacheManager.resetTempCacheItems(serverParams && serverParams.state);\r\n            throw e;\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (serverResponseHash.state !== cachedState) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description) {\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description) {\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n    };\r\n    /**\r\n     * Helper function which saves or updates the token in the cache and constructs the final token response to send back to the user.\r\n     * @param originalTokenResponse\r\n     * @param authority\r\n     * @param resource\r\n     * @param serverTokenResponse\r\n     * @param clientInfo\r\n     */\r\n    ResponseHandler.prototype.saveToken = function (originalTokenResponse, authority, resource, serverTokenResponse, clientInfo) {\r\n        var _this = this;\r\n        // Set consented scopes in response\r\n        var responseScopes = ScopeSet.fromString(serverTokenResponse.scope, this.clientId, true);\r\n        var responseScopeArray = responseScopes.asArray();\r\n        // Expiration calculation\r\n        var expiresIn = serverTokenResponse.expires_in;\r\n        var expirationSec = TimeUtils.nowSeconds() + expiresIn;\r\n        var extendedExpirationSec = expirationSec + serverTokenResponse.ext_expires_in;\r\n        // Get id token\r\n        if (!StringUtils.isEmpty(originalTokenResponse.idToken)) {\r\n            this.cacheStorage.setItem(PersistentCacheKeys.ID_TOKEN, originalTokenResponse.idToken);\r\n        }\r\n        // Save access token in cache\r\n        var newAccessTokenValue = new AccessTokenValue(serverTokenResponse.token_type, serverTokenResponse.access_token, originalTokenResponse.idToken, serverTokenResponse.refresh_token, expirationSec.toString(), extendedExpirationSec.toString());\r\n        var homeAccountIdentifier = originalTokenResponse.account && originalTokenResponse.account.homeAccountIdentifier;\r\n        var accessTokenCacheItems = this.cacheManager.getAllAccessTokens(this.clientId, authority || \"\", resource || \"\", homeAccountIdentifier || \"\");\r\n        // If no items in cache with these parameters, set new item.\r\n        if (accessTokenCacheItems.length < 1) {\r\n            this.logger.info(\"No tokens found, creating new item.\");\r\n            var newTokenKey = new AccessTokenKey(authority, this.clientId, serverTokenResponse.scope, resource, clientInfo && clientInfo.uid, clientInfo && clientInfo.utid, this.cryptoObj);\r\n            this.cacheStorage.setItem(JSON.stringify(newTokenKey), JSON.stringify(newAccessTokenValue));\r\n        }\r\n        else {\r\n            // Check if scopes are intersecting. If they are, combine scopes and replace cache item.\r\n            accessTokenCacheItems.forEach(function (accessTokenCacheItem) {\r\n                var cachedScopes = ScopeSet.fromString(accessTokenCacheItem.key.scopes, _this.clientId, true);\r\n                if (cachedScopes.intersectingScopeSets(responseScopes)) {\r\n                    _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                    cachedScopes.appendScopes(responseScopeArray);\r\n                    accessTokenCacheItem.key.scopes = cachedScopes.printScopes();\r\n                    if (StringUtils.isEmpty(newAccessTokenValue.idToken)) {\r\n                        newAccessTokenValue.idToken = accessTokenCacheItem.value.idToken;\r\n                    }\r\n                    _this.cacheStorage.setItem(JSON.stringify(accessTokenCacheItem.key), JSON.stringify(newAccessTokenValue));\r\n                }\r\n            });\r\n        }\r\n        // Save tokens in response and return\r\n        return __assign(__assign({}, originalTokenResponse), { tokenType: serverTokenResponse.token_type, scopes: responseScopeArray, accessToken: serverTokenResponse.access_token, refreshToken: serverTokenResponse.refresh_token, expiresOn: new Date(expirationSec * 1000) });\r\n    };\r\n    /**\r\n     * Gets account cached with given key. Returns null if parsing could not be completed.\r\n     * @param accountKey\r\n     */\r\n    ResponseHandler.prototype.getCachedAccount = function (accountKey) {\r\n        try {\r\n            return JSON.parse(this.cacheStorage.getItem(accountKey));\r\n        }\r\n        catch (e) {\r\n            this.logger.warning(\"Account could not be parsed: \" + JSON.stringify(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authorityString\r\n     * @param resource\r\n     * @param state\r\n     */\r\n    ResponseHandler.prototype.createTokenResponse = function (serverTokenResponse, authorityString, resource, state) {\r\n        var tokenResponse = {\r\n            uniqueId: \"\",\r\n            tenantId: \"\",\r\n            tokenType: \"\",\r\n            idToken: null,\r\n            idTokenClaims: null,\r\n            accessToken: \"\",\r\n            refreshToken: \"\",\r\n            scopes: [],\r\n            expiresOn: null,\r\n            account: null,\r\n            userRequestState: \"\"\r\n        };\r\n        // Retrieve current id token object\r\n        var idTokenObj;\r\n        var cachedIdToken = this.cacheStorage.getItem(PersistentCacheKeys.ID_TOKEN);\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n            tokenResponse = ResponseHandler.setResponseIdToken(tokenResponse, idTokenObj);\r\n            // If state is empty, refresh token is being used\r\n            if (!StringUtils.isEmpty(state)) {\r\n                this.logger.info(\"State was detected - nonce should be available.\");\r\n                // check nonce integrity if refresh token is not used - throw an error if not matched        \r\n                if (StringUtils.isEmpty(idTokenObj.claims.nonce)) {\r\n                    throw ClientAuthError.createInvalidIdTokenError(idTokenObj);\r\n                }\r\n                var nonce = this.cacheStorage.getItem(this.cacheManager.generateNonceKey(state));\r\n                if (idTokenObj.claims.nonce !== nonce) {\r\n                    throw ClientAuthError.createNonceMismatchError();\r\n                }\r\n            }\r\n        }\r\n        else if (cachedIdToken) {\r\n            idTokenObj = new IdToken(cachedIdToken, this.cryptoObj);\r\n            tokenResponse = ResponseHandler.setResponseIdToken(tokenResponse, idTokenObj);\r\n        }\r\n        else {\r\n            idTokenObj = null;\r\n        }\r\n        var clientInfo = null;\r\n        var cachedAccount = null;\r\n        if (idTokenObj) {\r\n            // Retrieve client info\r\n            clientInfo = buildClientInfo(this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO), this.cryptoObj);\r\n            // Create account object for request\r\n            tokenResponse.account = Account.createAccount(idTokenObj, clientInfo, this.cryptoObj);\r\n            // Save the access token if it exists\r\n            var accountKey = this.cacheManager.generateAcquireTokenAccountKey(tokenResponse.account.homeAccountIdentifier);\r\n            // Get cached account\r\n            cachedAccount = this.getCachedAccount(accountKey);\r\n        }\r\n        // Return user set state in the response\r\n        tokenResponse.userRequestState = ProtocolUtils.getUserRequestState(state);\r\n        this.cacheManager.resetTempCacheItems(state);\r\n        if (!cachedAccount || !tokenResponse.account || Account.compareAccounts(cachedAccount, tokenResponse.account)) {\r\n            return this.saveToken(tokenResponse, authorityString, resource, serverTokenResponse, clientInfo);\r\n        }\r\n        else {\r\n            this.logger.error(\"Accounts do not match.\");\r\n            this.logger.errorPii(\"Cached Account: \" + JSON.stringify(cachedAccount) + \", New Account: \" + JSON.stringify(tokenResponse.account));\r\n            throw ClientAuthError.createAccountMismatchError();\r\n        }\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(\"{tenant}\", this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.getOpenIdConfigurationEndpointAsync()];\r\n                    case 1:\r\n                        openIdConfigEndpoint = _b.sent();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        _a.tenantDiscoveryResponse = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Aad\"] = 0] = \"Aad\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n    AuthorityType[AuthorityType[\"B2C\"] = 2] = \"B2C\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/**\r\n * The AadAuthority class extends the Authority class and adds functionality specific to the Azure AD OAuth Authority.\r\n */\r\nvar AadAuthority = /** @class */ (function (_super) {\r\n    __extends(AadAuthority, _super);\r\n    function AadAuthority(authority, networkInterface) {\r\n        return _super.call(this, authority, networkInterface) || this;\r\n    }\r\n    Object.defineProperty(AadAuthority.prototype, \"authorityType\", {\r\n        // Set authority type to AAD\r\n        get: function () {\r\n            return AuthorityType.Aad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AadAuthority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return Constants.AAD_INSTANCE_DISCOVERY_ENDPT + \"?api-version=1.0&authorization_endpoint=\" + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    AadAuthority.prototype.getOpenIdConfigurationEndpointAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.isInTrustedHostList(this.canonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n                            return [2 /*return*/, this.defaultOpenIdConfigurationEndpoint];\r\n                        }\r\n                        return [4 /*yield*/, this.networkInterface.sendGetRequestAsync(this.aadInstanceDiscoveryEndpointUrl)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, response.tenant_discovery_endpoint];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    AadAuthority.prototype.isInTrustedHostList = function (host) {\r\n        return AADTrustedHostList.includes(host);\r\n    };\r\n    return AadAuthority;\r\n}(Authority));\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Parse the url and determine the type of authority\r\n     */\r\n    AuthorityFactory.detectAuthorityFromUrl = function (authorityString) {\r\n        var authorityUrl = new UrlString(authorityString);\r\n        var components = authorityUrl.getUrlComponents();\r\n        var pathSegments = components.PathSegments;\r\n        switch (pathSegments[0]) {\r\n            case \"tfp\":\r\n                // tfp denotes a b2c url\r\n                return AuthorityType.B2C;\r\n            default:\r\n                // default authority is always AAD\r\n                return AuthorityType.Aad;\r\n        }\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        var type = AuthorityFactory.detectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case AuthorityType.Aad:\r\n                return new AadAuthority(authorityUrl, networkInterface);\r\n            default:\r\n                throw ClientAuthError.createInvalidAuthorityTypeError(\"Given Url: \" + authorityUrl);\r\n        }\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/**\r\n * AuthorizationCodeModule class\r\n *\r\n * Object instance which will construct requests to send to and handle responses\r\n * from the Microsoft STS using the authorization code flow.\r\n */\r\nvar AuthorizationCodeModule = /** @class */ (function (_super) {\r\n    __extends(AuthorizationCodeModule, _super);\r\n    function AuthorizationCodeModule(configuration) {\r\n        var _this = \r\n        // Implement base module\r\n        _super.call(this, {\r\n            systemOptions: configuration.systemOptions,\r\n            loggerOptions: configuration.loggerOptions,\r\n            storageInterface: configuration.storageInterface,\r\n            networkInterface: configuration.networkInterface,\r\n            cryptoInterface: configuration.cryptoInterface\r\n        }) || this;\r\n        // Implement defaults in config\r\n        _this.clientConfig = buildPublicClientSPAConfiguration(configuration);\r\n        // Initialize default authority instance\r\n        _this.defaultAuthorityInstance = AuthorityFactory.createInstance(_this.clientConfig.auth.authority || Constants.DEFAULT_AUTHORITY, _this.networkClient);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a url for logging in a user. This will by default append the client id to the list of scopes,\r\n     * allowing you to retrieve an id token in the subsequent code exchange. Also performs validation of the request parameters.\r\n     * Including any SSO parameters (account, sid, login_hint) will short circuit the authentication and allow you to retrieve a code without interaction.\r\n     * @param request\r\n     */\r\n    AuthorizationCodeModule.prototype.createLoginUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.createUrl(request, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a url for logging in a user. Also performs validation of the request parameters.\r\n     * Including any SSO parameters (account, sid, login_hint) will short circuit the authentication and allow you to retrieve a code without interaction.\r\n     * @param request\r\n     */\r\n    AuthorizationCodeModule.prototype.createAcquireTokenUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.createUrl(request, false)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function which creates URL. If isLoginCall is true, MSAL appends client id scope to retrieve id token from the service.\r\n     * @param request\r\n     * @param isLoginCall\r\n     */\r\n    AuthorizationCodeModule.prototype.createUrl = function (request, isLoginCall) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1, requestParameters, adalIdToken, adalIdTokenString, urlNavigate, tokenRequest, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = (request && request.authority) ? AuthorityFactory.createInstance(request.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        requestParameters = new ServerCodeRequestParameters(acquireTokenAuthority, this.clientConfig.auth.clientId, request, this.getAccount(), this.getRedirectUri(), this.cryptoObj, isLoginCall);\r\n                        adalIdToken = null;\r\n                        if (!requestParameters.hasSSOParam()) {\r\n                            adalIdTokenString = this.cacheStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                                adalIdToken = new IdToken(adalIdTokenString, this.cryptoObj);\r\n                                this.cacheStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                            }\r\n                        }\r\n                        // Update required cache entries for request.\r\n                        this.cacheManager.updateCacheEntries(requestParameters, request.account);\r\n                        // Populate query parameters (sid/login_hint/domain_hint) and any other extraQueryParameters set by the developer.\r\n                        requestParameters.populateQueryParams(adalIdToken);\r\n                        return [4 /*yield*/, requestParameters.createNavigateUrl()];\r\n                    case 5:\r\n                        urlNavigate = _a.sent();\r\n                        tokenRequest = {\r\n                            scopes: requestParameters.scopes.getOriginalScopesAsArray(),\r\n                            resource: request.resource,\r\n                            codeVerifier: requestParameters.generatedPkce.verifier,\r\n                            extraQueryParameters: request.extraQueryParameters,\r\n                            authority: requestParameters.authorityInstance.canonicalAuthority,\r\n                            correlationId: requestParameters.correlationId\r\n                        };\r\n                        this.cacheStorage.setItem(TemporaryCacheKeys.REQUEST_PARAMS, this.cryptoObj.base64Encode(JSON.stringify(tokenRequest)));\r\n                        return [2 /*return*/, urlNavigate];\r\n                    case 6:\r\n                        e_2 = _a.sent();\r\n                        // Reset cache items before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems(requestParameters && requestParameters.state);\r\n                        throw e_2;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given an authorization code, it will perform a token exchange using cached values from a previous call to\r\n     * createLoginUrl() or createAcquireTokenUrl(). You must call this AFTER using one of those APIs first. You should\r\n     * also use the handleFragmentResponse() API to pass the codeResponse to this function afterwards.\r\n     * @param codeResponse\r\n     */\r\n    AuthorizationCodeModule.prototype.acquireToken = function (codeResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenRequest, acquireTokenAuthority, e_3, tokenEndpoint, tokenReqParams, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 6, , 7]);\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!codeResponse || StringUtils.isEmpty(codeResponse.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        tokenRequest = this.getCachedRequest(codeResponse.userRequestState);\r\n                        acquireTokenAuthority = (tokenRequest && tokenRequest.authority) ? AuthorityFactory.createInstance(tokenRequest.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_3 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_3);\r\n                    case 4:\r\n                        tokenEndpoint = acquireTokenAuthority.tokenEndpoint;\r\n                        tokenReqParams = new ServerTokenRequestParameters(this.clientConfig.auth.clientId, tokenRequest, codeResponse, this.getRedirectUri(), this.cryptoObj);\r\n                        return [4 /*yield*/, this.getTokenResponse(tokenEndpoint, tokenReqParams, tokenRequest, codeResponse)];\r\n                    case 5: \r\n                    // User helper to retrieve token response.\r\n                    // Need to await function call before return to catch any thrown errors.\r\n                    // if errors are thrown asynchronously in return statement, they are caught by caller of this function instead.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 6:\r\n                        e_4 = _a.sent();\r\n                        // Reset cache items and set account to null before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems(codeResponse && codeResponse.userRequestState);\r\n                        this.account = null;\r\n                        throw e_4;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token. Will throw an error if login is not completed (unless\r\n     * id tokens are not being renewed).\r\n     * @param request\r\n     */\r\n    AuthorizationCodeModule.prototype.renewToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var account, requestScopes, acquireTokenAuthority, e_5, cachedTokenItem, expirationSec, offsetCurrentTimeSec, cachedScopes, defaultTokenResponse, tokenEndpoint, tokenReqParams, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 8, , 9]);\r\n                        // Cannot renew token if no request object is given.\r\n                        if (!request) {\r\n                            throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                        }\r\n                        account = request.account || this.getAccount();\r\n                        requestScopes = new ScopeSet(request.scopes || [], this.clientConfig.auth.clientId, true);\r\n                        // If this is an id token renewal, and no account is present, throw an error.\r\n                        if (requestScopes.isLoginScopeSet()) {\r\n                            if (!account) {\r\n                                throw ClientAuthError.createUserLoginRequiredError();\r\n                            }\r\n                        }\r\n                        acquireTokenAuthority = request.authority ? AuthorityFactory.createInstance(request.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_5 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_5);\r\n                    case 4:\r\n                        cachedTokenItem = this.getCachedTokens(requestScopes, acquireTokenAuthority.canonicalAuthority, request.resource, account && account.homeAccountIdentifier);\r\n                        expirationSec = Number(cachedTokenItem.value.expiresOnSec);\r\n                        offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.clientConfig.systemOptions.tokenRenewalOffsetSeconds;\r\n                        if (!(!request.forceRefresh && expirationSec && expirationSec > offsetCurrentTimeSec)) return [3 /*break*/, 5];\r\n                        cachedScopes = ScopeSet.fromString(cachedTokenItem.key.scopes, this.clientConfig.auth.clientId, true);\r\n                        defaultTokenResponse = {\r\n                            uniqueId: \"\",\r\n                            tenantId: \"\",\r\n                            scopes: cachedScopes.asArray(),\r\n                            tokenType: cachedTokenItem.value.tokenType,\r\n                            idToken: \"\",\r\n                            idTokenClaims: null,\r\n                            accessToken: cachedTokenItem.value.accessToken,\r\n                            refreshToken: cachedTokenItem.value.refreshToken,\r\n                            expiresOn: new Date(expirationSec * 1000),\r\n                            account: account,\r\n                            userRequestState: \"\"\r\n                        };\r\n                        // Only populate id token if it exists in cache item.\r\n                        return [2 /*return*/, StringUtils.isEmpty(cachedTokenItem.value.idToken) ? defaultTokenResponse :\r\n                                ResponseHandler.setResponseIdToken(defaultTokenResponse, new IdToken(cachedTokenItem.value.idToken, this.cryptoObj))];\r\n                    case 5:\r\n                        // Renew the tokens.\r\n                        request.authority = cachedTokenItem.key.authority;\r\n                        tokenEndpoint = acquireTokenAuthority.tokenEndpoint;\r\n                        tokenReqParams = new ServerTokenRequestParameters(this.clientConfig.auth.clientId, request, null, this.getRedirectUri(), this.cryptoObj, cachedTokenItem.value.refreshToken);\r\n                        return [4 /*yield*/, this.getTokenResponse(tokenEndpoint, tokenReqParams, request)];\r\n                    case 6: \r\n                    // User helper to retrieve token response.\r\n                    // Need to await function call before return to catch any thrown errors.\r\n                    // if errors are thrown asynchronously in return statement, they are caught by caller of this function instead.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        e_6 = _a.sent();\r\n                        // Reset cache items and set account to null before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems();\r\n                        this.account = null;\r\n                        throw e_6;\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeModule.prototype.logout = function (authorityUri) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentAccount, homeAccountIdentifier, postLogoutRedirectUri, acquireTokenAuthority, e_7, logoutUri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentAccount = this.getAccount();\r\n                        homeAccountIdentifier = currentAccount ? currentAccount.homeAccountIdentifier : \"\";\r\n                        // Remove all pertinent access tokens.\r\n                        this.cacheManager.removeAllAccessTokens(this.clientConfig.auth.clientId, authorityUri, \"\", homeAccountIdentifier);\r\n                        // Clear remaining cache items.\r\n                        this.cacheStorage.clear();\r\n                        // Clear current account.\r\n                        this.account = null;\r\n                        postLogoutRedirectUri = \"\";\r\n                        try {\r\n                            postLogoutRedirectUri = \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\r\n                        }\r\n                        catch (e) { }\r\n                        acquireTokenAuthority = (authorityUri) ? AuthorityFactory.createInstance(authorityUri, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_7 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_7);\r\n                    case 4:\r\n                        logoutUri = \"\" + acquireTokenAuthority.endSessionEndpoint + postLogoutRedirectUri;\r\n                        return [2 /*return*/, logoutUri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Response Handling\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeModule.prototype.handleFragmentResponse = function (hashFragment) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.clientConfig.auth.clientId, this.cacheStorage, this.cacheManager, this.cryptoObj, this.logger);\r\n        // Deserialize hash fragment response parameters.\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        var serverParams = hashUrlString.getDeserializedHash();\r\n        // Get code response\r\n        return responseHandler.handleServerCodeResponse(serverParams);\r\n    };\r\n    // #endregion\r\n    // #region Helpers\r\n    /**\r\n     * Clears cache of items related to current request.\r\n     */\r\n    AuthorizationCodeModule.prototype.cancelRequest = function () {\r\n        var cachedState = this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_STATE);\r\n        this.cacheManager.resetTempCacheItems(cachedState || \"\");\r\n    };\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    AuthorizationCodeModule.prototype.getCachedRequest = function (state) {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            var encodedTokenRequest = this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n            var parsedRequest = JSON.parse(this.cryptoObj.base64Decode(encodedTokenRequest));\r\n            this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                var authorityKey = this.cacheManager.generateAuthorityKey(state);\r\n                var cachedAuthority = this.cacheStorage.getItem(authorityKey);\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    };\r\n    /**\r\n     * Gets all cached tokens based on the given criteria.\r\n     * @param requestScopes\r\n     * @param authorityUri\r\n     * @param resourceId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthorizationCodeModule.prototype.getCachedTokens = function (requestScopes, authorityUri, resourceId, homeAccountIdentifier) {\r\n        var _this = this;\r\n        // Get all access tokens with matching authority, resource id and home account ID\r\n        var tokenCacheItems = this.cacheManager.getAllAccessTokens(this.clientConfig.auth.clientId, authorityUri || \"\", resourceId || \"\", homeAccountIdentifier || \"\");\r\n        if (tokenCacheItems.length === 0) {\r\n            throw ClientAuthError.createNoTokensFoundError(requestScopes.printScopes());\r\n        }\r\n        // Filter cache items based on available scopes.\r\n        var filteredCacheItems = tokenCacheItems.filter(function (cacheItem) {\r\n            var cachedScopes = ScopeSet.fromString(cacheItem.key.scopes, _this.clientConfig.auth.clientId, true);\r\n            return cachedScopes.containsScopeSet(requestScopes);\r\n        });\r\n        // If cache items contains too many matching tokens, throw error.\r\n        if (filteredCacheItems.length > 1) {\r\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError(requestScopes.printScopes());\r\n        }\r\n        else if (filteredCacheItems.length === 1) {\r\n            // Return single cache item.\r\n            return filteredCacheItems[0];\r\n        }\r\n        // If cache items are empty, throw error.\r\n        throw ClientAuthError.createNoTokensFoundError(requestScopes.printScopes());\r\n    };\r\n    /**\r\n     * Makes a request to the token endpoint with the given parameters and parses the response.\r\n     * @param tokenEndpoint\r\n     * @param tokenReqParams\r\n     * @param tokenRequest\r\n     * @param codeResponse\r\n     */\r\n    AuthorizationCodeModule.prototype.getTokenResponse = function (tokenEndpoint, tokenReqParams, tokenRequest, codeResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquiredTokenResponse, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n                            body: tokenReqParams.createRequestBody(),\r\n                            headers: tokenReqParams.createRequestHeaders()\r\n                        })];\r\n                    case 1:\r\n                        acquiredTokenResponse = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.clientConfig.auth.clientId, this.cacheStorage, this.cacheManager, this.cryptoObj, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateServerAuthorizationTokenResponse(acquiredTokenResponse);\r\n                        tokenResponse = responseHandler.createTokenResponse(acquiredTokenResponse, tokenRequest.authority, tokenRequest.resource, codeResponse && codeResponse.userRequestState);\r\n                        // Set current account to received response account, if any.\r\n                        this.account = tokenResponse.account;\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Getters and setters\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    AuthorizationCodeModule.prototype.getRedirectUri = function () {\r\n        if (this.clientConfig.auth.redirectUri) {\r\n            if (typeof this.clientConfig.auth.redirectUri === \"function\") {\r\n                return this.clientConfig.auth.redirectUri();\r\n            }\r\n            else if (!StringUtils.isEmpty(this.clientConfig.auth.redirectUri)) {\r\n                return this.clientConfig.auth.redirectUri;\r\n            }\r\n        }\r\n        // This should never throw unless window.location.href is returning empty.\r\n        throw ClientConfigurationError.createRedirectUriEmptyError();\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    AuthorizationCodeModule.prototype.getPostLogoutRedirectUri = function () {\r\n        if (this.clientConfig.auth.postLogoutRedirectUri) {\r\n            if (typeof this.clientConfig.auth.postLogoutRedirectUri === \"function\") {\r\n                return this.clientConfig.auth.postLogoutRedirectUri();\r\n            }\r\n            else if (!StringUtils.isEmpty(this.clientConfig.auth.postLogoutRedirectUri)) {\r\n                return this.clientConfig.auth.postLogoutRedirectUri;\r\n            }\r\n        }\r\n        // This should never throw unless window.location.href is returning empty.\r\n        throw ClientConfigurationError.createPostLogoutRedirectUriEmptyError();\r\n    };\r\n    return AuthorizationCodeModule;\r\n}(AuthModule));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Builds a response that only sets state\r\n * @param responseState\r\n */\r\nfunction buildResponseStateOnly(responseState) {\r\n    return {\r\n        userRequestState: responseState\r\n    };\r\n}\n\nexport { Account, AuthError, AuthErrorMessage, Authority, AuthorityFactory, AuthorizationCodeModule, ClientAuthError, ClientAuthErrorMessage, ClientConfigurationError, ClientConfigurationErrorMessage, Constants, LogLevel, PersistentCacheKeys, ServerError, StringUtils, TemporaryCacheKeys, UrlString, buildResponseStateOnly };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZXMuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9lcnJvci9BdXRoRXJyb3IudHMiLCIuLi9zcmMvZXJyb3IvQ2xpZW50QXV0aEVycm9yLnRzIiwiLi4vc3JjL3V0aWxzL1N0cmluZ1V0aWxzLnRzIiwiLi4vc3JjL2xvZ2dlci9Mb2dnZXIudHMiLCIuLi9zcmMvYXBwL2NvbmZpZy9Nb2R1bGVDb25maWd1cmF0aW9uLnRzIiwiLi4vc3JjL2NhY2hlL0FjY2Vzc1Rva2VuQ2FjaGVJdGVtLnRzIiwiLi4vc3JjL3V0aWxzL0NvbnN0YW50cy50cyIsIi4uL3NyYy9jYWNoZS9DYWNoZUhlbHBlcnMudHMiLCIuLi9zcmMvYXV0aC9BY2NvdW50LnRzIiwiLi4vc3JjL2F1dGgvSWRUb2tlbi50cyIsIi4uL3NyYy9hdXRoL0NsaWVudEluZm8udHMiLCIuLi9zcmMvYXBwL21vZHVsZS9BdXRoTW9kdWxlLnRzIiwiLi4vc3JjL2FwcC9jb25maWcvUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvbi50cyIsIi4uL3NyYy9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3IudHMiLCIuLi9zcmMvYXV0aC9TY29wZVNldC50cyIsIi4uL3NyYy9yZXF1ZXN0L0F1dGhlbnRpY2F0aW9uUGFyYW1ldGVycy50cyIsIi4uL3NyYy91dGlscy9Qcm90b2NvbFV0aWxzLnRzIiwiLi4vc3JjL3NlcnZlci9TZXJ2ZXJDb2RlUmVxdWVzdFBhcmFtZXRlcnMudHMiLCIuLi9zcmMvc2VydmVyL1NlcnZlclRva2VuUmVxdWVzdFBhcmFtZXRlcnMudHMiLCIuLi9zcmMvdXRpbHMvVGltZVV0aWxzLnRzIiwiLi4vc3JjL3VybC9VcmxTdHJpbmcudHMiLCIuLi9zcmMvY2FjaGUvQWNjZXNzVG9rZW5LZXkudHMiLCIuLi9zcmMvY2FjaGUvQWNjZXNzVG9rZW5WYWx1ZS50cyIsIi4uL3NyYy9lcnJvci9TZXJ2ZXJFcnJvci50cyIsIi4uL3NyYy9yZXNwb25zZS9SZXNwb25zZUhhbmRsZXIudHMiLCIuLi9zcmMvYXV0aC9hdXRob3JpdHkvQXV0aG9yaXR5LnRzIiwiLi4vc3JjL2F1dGgvYXV0aG9yaXR5L0F1dGhvcml0eVR5cGUudHMiLCIuLi9zcmMvYXV0aC9hdXRob3JpdHkvQWFkQXV0aG9yaXR5LnRzIiwiLi4vc3JjL2F1dGgvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkudHMiLCIuLi9zcmMvYXBwL21vZHVsZS9BdXRob3JpemF0aW9uQ29kZU1vZHVsZS50cyIsIi4uL3NyYy9yZXNwb25zZS9BdXRoUmVzcG9uc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcblxyXG4vKipcclxuICogQXV0aEVycm9yTWVzc2FnZSBjbGFzcyBjb250YWluaW5nIHN0cmluZyBjb25zdGFudHMgdXNlZCBieSBlcnJvciBjb2RlcyBhbmQgbWVzc2FnZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIHVuZXhwZWN0ZWRFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwidW5leHBlY3RlZF9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVW5leHBlY3RlZCBlcnJvciBpbiBhdXRoZW50aWNhdGlvbi5cIlxyXG4gICAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIEdlbmVyYWwgZXJyb3IgY2xhc3MgdGhyb3duIGJ5IHRoZSBNU0FMLmpzIGxpYnJhcnkuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG5cclxuICAgIC8vIFNob3J0IHN0cmluZyBkZW5vdGluZyBlcnJvclxyXG4gICAgZXJyb3JDb2RlOiBzdHJpbmc7XHJcbiAgICAvLyBEZXRhaWxlZCBkZXNjcmlwdGlvbiBvZiBlcnJvclxyXG4gICAgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlOiBzdHJpbmcsIGVycm9yTWVzc2FnZT86IHN0cmluZykge1xyXG4gICAgICAgIHN1cGVyKGVycm9yTWVzc2FnZSk7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEF1dGhFcnJvci5wcm90b3R5cGUpO1xyXG5cclxuICAgICAgICB0aGlzLmVycm9yQ29kZSA9IGVycm9yQ29kZTtcclxuICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IGVycm9yTWVzc2FnZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIkF1dGhFcnJvclwiO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aGF0IGlzIHRocm93biB3aGVuIHNvbWV0aGluZyB1bmV4cGVjdGVkIGhhcHBlbnMgaW4gdGhlIGxpYnJhcnkuXHJcbiAgICAgKiBAcGFyYW0gZXJyRGVzYyBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihlcnJEZXNjOiBzdHJpbmcpOiBBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQXV0aEVycm9yKEF1dGhFcnJvck1lc3NhZ2UudW5leHBlY3RlZEVycm9yLmNvZGUsIGAke0F1dGhFcnJvck1lc3NhZ2UudW5leHBlY3RlZEVycm9yLmRlc2N9OiAke2VyckRlc2N9YCk7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gXCIuL0F1dGhFcnJvclwiO1xyXG5pbXBvcnQgeyBJZFRva2VuIH0gZnJvbSBcIi4uL2F1dGgvSWRUb2tlblwiO1xyXG5pbXBvcnQgeyBTY29wZVNldCB9IGZyb20gXCIuLi9hdXRoL1Njb3BlU2V0XCI7XHJcblxyXG4vKipcclxuICogQ2xpZW50QXV0aEVycm9yTWVzc2FnZSBjbGFzcyBjb250YWluaW5nIHN0cmluZyBjb25zdGFudHMgdXNlZCBieSBlcnJvciBjb2RlcyBhbmQgbWVzc2FnZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ2xpZW50QXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIGNsaWVudEluZm9EZWNvZGluZ0Vycm9yOiB7XHJcbiAgICAgICAgY29kZTogXCJjbGllbnRfaW5mb19kZWNvZGluZ19lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVGhlIGNsaWVudCBpbmZvIGNvdWxkIG5vdCBiZSBwYXJzZWQvZGVjb2RlZCBjb3JyZWN0bHkuIFBsZWFzZSByZXZpZXcgdGhlIHRyYWNlIHRvIGRldGVybWluZSB0aGUgcm9vdCBjYXVzZS5cIlxyXG4gICAgfSxcclxuICAgIGNsaWVudEluZm9FbXB0eUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogXCJjbGllbnRfaW5mb19lbXB0eV9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVGhlIGNsaWVudCBpbmZvIHdhcyBlbXB0eS4gUGxlYXNlIHJldmlldyB0aGUgdHJhY2UgdG8gZGV0ZXJtaW5lIHRoZSByb290IGNhdXNlLlwiXHJcbiAgICB9LFxyXG4gICAgaWRUb2tlblBhcnNpbmdFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwiaWRfdG9rZW5fcGFyc2luZ19lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiSUQgdG9rZW4gY2Fubm90IGJlIHBhcnNlZC4gUGxlYXNlIHJldmlldyBzdGFjayB0cmFjZSB0byBkZXRlcm1pbmUgcm9vdCBjYXVzZS5cIlxyXG4gICAgfSxcclxuICAgIG51bGxPckVtcHR5SWRUb2tlbjoge1xyXG4gICAgICAgIGNvZGU6IFwibnVsbF9vcl9lbXB0eV9pZF90b2tlblwiLFxyXG4gICAgICAgIGRlc2M6IFwiVGhlIGlkVG9rZW4gaXMgbnVsbCBvciBlbXB0eS4gUGxlYXNlIHJldmlldyB0aGUgdHJhY2UgdG8gZGV0ZXJtaW5lIHRoZSByb290IGNhdXNlLlwiXHJcbiAgICB9LFxyXG4gICAgdG9rZW5SZXF1ZXN0Q2FjaGVFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwidG9rZW5fcmVxdWVzdF9jYWNoZV9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVGhlIHRva2VuIHJlcXVlc3QgY291bGQgbm90IGJlIGZldGNoZWQgZnJvbSB0aGUgY2FjaGUgY29ycmVjdGx5LlwiXHJcbiAgICB9LFxyXG4gICAgZW5kcG9pbnRSZXNvbHV0aW9uRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImVuZHBvaW50c19yZXNvbHV0aW9uX2Vycm9yXCIsXHJcbiAgICAgICAgZGVzYzogXCJFcnJvcjogY291bGQgbm90IHJlc29sdmUgZW5kcG9pbnRzLiBQbGVhc2UgY2hlY2sgbmV0d29yayBhbmQgdHJ5IGFnYWluLlwiXHJcbiAgICB9LFxyXG4gICAgaW52YWxpZEF1dGhvcml0eVR5cGU6IHtcclxuICAgICAgICBjb2RlOiBcImludmFsaWRfYXV0aG9yaXR5X3R5cGVcIixcclxuICAgICAgICBkZXNjOiBcIlRoZSBnaXZlbiBhdXRob3JpdHkgaXMgbm90IGEgdmFsaWQgdHlwZSBvZiBhdXRob3JpdHkgc3VwcG9ydGVkIGJ5IE1TQUwuIFBsZWFzZSByZXZpZXcgdGhlIHRyYWNlIHRvIGRldGVybWluZSB0aGUgcm9vdCBjYXVzZS5cIlxyXG4gICAgfSxcclxuICAgIGhhc2hOb3REZXNlcmlhbGl6ZWQ6IHtcclxuICAgICAgICBjb2RlOiBcImhhc2hfbm90X2Rlc2VyaWFsaXplZFwiLFxyXG4gICAgICAgIGRlc2M6IFwiVGhlIGhhc2ggcGFyYW1ldGVycyBjb3VsZCBub3QgYmUgZGVzZXJpYWxpemVkLiBQbGVhc2UgcmV2aWV3IHRoZSB0cmFjZSB0byBkZXRlcm1pbmUgdGhlIHJvb3QgY2F1c2UuXCJcclxuICAgIH0sXHJcbiAgICBibGFua0d1aWRHZW5lcmF0ZWQ6IHtcclxuICAgICAgICBjb2RlOiBcImJsYW5rX2d1aWRfZ2VuZXJhdGVkXCIsXHJcbiAgICAgICAgZGVzYzogXCJUaGUgZ3VpZCBnZW5lcmF0ZWQgd2FzIGJsYW5rLiBQbGVhc2UgcmV2aWV3IHRoZSB0cmFjZSB0byBkZXRlcm1pbmUgdGhlIHJvb3QgY2F1c2UuXCJcclxuICAgIH0sXHJcbiAgICBzdGF0ZU1pc21hdGNoRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcInN0YXRlX21pc21hdGNoXCIsXHJcbiAgICAgICAgZGVzYzogXCJTdGF0ZSBtaXNtYXRjaCBlcnJvci4gUGxlYXNlIGNoZWNrIHlvdXIgbmV0d29yay4gQ29udGludWVkIHJlcXVlc3RzIG1heSBjYXVzZSBjYWNoZSBvdmVyZmxvdy5cIlxyXG4gICAgfSxcclxuICAgIG5vbmNlTWlzbWF0Y2hFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwibm9uY2VfbWlzbWF0Y2hcIixcclxuICAgICAgICBkZXNjOiBcIk5vbmNlIG1pc21hdGNoIGVycm9yLiBUaGlzIG1heSBiZSBjYXVzZWQgYnkgYSByYWNlIGNvbmRpdGlvbiBpbiBjb25jdXJyZW50IHJlcXVlc3RzLlwiXHJcbiAgICB9LFxyXG4gICAgYWNjb3VudE1pc21hdGNoRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImFjY291bnRfbWlzbWF0Y2hcIixcclxuICAgICAgICBkZXNjOiBcIlRoZSBjYWNoZWQgYWNjb3VudCBhbmQgYWNjb3VudCB3aGljaCBtYWRlIHRoZSB0b2tlbiByZXF1ZXN0IGRvIG5vdCBtYXRjaC5cIlxyXG4gICAgfSxcclxuICAgIGludmFsaWRJZFRva2VuOiB7XHJcbiAgICAgICAgY29kZTogXCJpbnZhbGlkX2lkX3Rva2VuXCIsXHJcbiAgICAgICAgZGVzYzogXCJJbnZhbGlkIElEIHRva2VuIGZvcm1hdC5cIlxyXG4gICAgfSxcclxuICAgIG5vVG9rZW5zRm91bmRFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwibm9fdG9rZW5zX2ZvdW5kXCIsXHJcbiAgICAgICAgZGVzYzogXCJObyB0b2tlbnMgd2VyZSBmb3VuZCBmb3IgdGhlIGdpdmVuIHNjb3BlcywgYW5kIG5vIGF1dGhvcml6YXRpb24gY29kZSB3YXMgcGFzc2VkIHRvIGFjcXVpcmVUb2tlbi4gWW91IG11c3QgcmV0cmlldmUgYW4gYXV0aG9yaXphdGlvbiBjb2RlIGJlZm9yZSBtYWtpbmcgYSBjYWxsIHRvIGFjcXVpcmVUb2tlbigpLlwiXHJcbiAgICB9LFxyXG4gICAgY2FjaGVQYXJzZUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogXCJjYWNoZV9wYXJzZV9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiQ291bGQgbm90IHBhcnNlIGNhY2hlIGtleS5cIlxyXG4gICAgfSxcclxuICAgIHVzZXJMb2dpblJlcXVpcmVkRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcInVzZXJfbG9naW5fZXJyb3JcIixcclxuICAgICAgICBkZXNjOiBcIlVzZXIgbG9naW4gaXMgcmVxdWlyZWQuXCJcclxuICAgIH0sXHJcbiAgICBtdWx0aXBsZU1hdGNoaW5nVG9rZW5zOiB7XHJcbiAgICAgICAgY29kZTogXCJtdWx0aXBsZV9tYXRjaGluZ190b2tlbnNcIixcclxuICAgICAgICBkZXNjOiBcIlRoZSBjYWNoZSBjb250YWlucyBtdWx0aXBsZSB0b2tlbnMgc2F0aXNmeWluZyB0aGUgcmVxdWlyZW1lbnRzLiBcIiArXHJcbiAgICAgICAgICAgIFwiQ2FsbCBBY3F1aXJlVG9rZW4gYWdhaW4gcHJvdmlkaW5nIG1vcmUgcmVxdWlyZW1lbnRzIHN1Y2ggYXMgYXV0aG9yaXR5LCByZXNvdXJjZSwgb3IgYWNjb3VudC5cIlxyXG4gICAgfSxcclxuICAgIHRva2VuUmVxdWVzdENhbm5vdEJlTWFkZToge1xyXG4gICAgICAgIGNvZGU6IFwicmVxdWVzdF9jYW5ub3RfYmVfbWFkZVwiLFxyXG4gICAgICAgIGRlc2M6IFwiVG9rZW4gcmVxdWVzdCBjYW5ub3QgYmUgbWFkZSB3aXRob3V0IGF1dGhvcml6YXRpb24gY29kZSBvciByZWZyZXNoIHRva2VuLlwiXHJcbiAgICB9LFxyXG4gICAgYXBwZW5kRW1wdHlTY29wZUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogXCJjYW5ub3RfYXBwZW5kX2VtcHR5X3Njb3BlXCIsXHJcbiAgICAgICAgZGVzYzogXCJDYW5ub3QgYXBwZW5kIG51bGwgb3IgZW1wdHkgc2NvcGUgdG8gU2NvcGVTZXQuIFBsZWFzZSBjaGVjayB0aGUgc3RhY2sgdHJhY2UgZm9yIG1vcmUgaW5mby5cIlxyXG4gICAgfSxcclxuICAgIHJlbW92ZUVtcHR5U2NvcGVFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwiY2Fubm90X3JlbW92ZV9lbXB0eV9zY29wZVwiLFxyXG4gICAgICAgIGRlc2M6IFwiQ2Fubm90IHJlbW92ZSBudWxsIG9yIGVtcHR5IHNjb3BlIGZyb20gU2NvcGVTZXQuIFBsZWFzZSBjaGVjayB0aGUgc3RhY2sgdHJhY2UgZm9yIG1vcmUgaW5mby5cIlxyXG4gICAgfSxcclxuICAgIGFwcGVuZFNjb3BlU2V0RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImNhbm5vdF9hcHBlbmRfc2NvcGVzZXRcIixcclxuICAgICAgICBkZXNjOiBcIkNhbm5vdCBhcHBlbmQgU2NvcGVTZXQgZHVlIHRvIGVycm9yLlwiXHJcbiAgICB9LFxyXG4gICAgZW1wdHlJbnB1dFNjb3BlU2V0RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImVtcHR5X2lucHV0X3Njb3Blc2V0XCIsXHJcbiAgICAgICAgZGVzYzogXCJFbXB0eSBpbnB1dCBTY29wZVNldCBjYW5ub3QgYmUgcHJvY2Vzc2VkLlwiXHJcbiAgICB9XHJcbn07XHJcblxyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIGNsaWVudCBjb2RlIHJ1bm5pbmcgb24gdGhlIGJyb3dzZXIuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2xpZW50QXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgICAgICBcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZTogc3RyaW5nLCBlcnJvck1lc3NhZ2U/OiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJDbGllbnRBdXRoRXJyb3JcIjtcclxuXHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIENsaWVudEF1dGhFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiBjbGllbnQgaW5mbyBvYmplY3QgZG9lc24ndCBkZWNvZGUgY29ycmVjdGx5LlxyXG4gICAgICogQHBhcmFtIGNhdWdodEVycm9yIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlQ2xpZW50SW5mb0RlY29kaW5nRXJyb3IoY2F1Z2h0RXJyb3I6IHN0cmluZyk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5jbGllbnRJbmZvRGVjb2RpbmdFcnJvci5jb2RlLFxyXG4gICAgICAgICAgICBgJHtDbGllbnRBdXRoRXJyb3JNZXNzYWdlLmNsaWVudEluZm9EZWNvZGluZ0Vycm9yLmRlc2N9IEZhaWxlZCB3aXRoIGVycm9yOiAke2NhdWdodEVycm9yfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gaWYgdGhlIGNsaWVudCBpbmZvIGlzIGVtcHR5LlxyXG4gICAgICogQHBhcmFtIHJhd0NsaWVudEluZm8gXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVDbGllbnRJbmZvRW1wdHlFcnJvcihyYXdDbGllbnRJbmZvOiBzdHJpbmcpOiBDbGllbnRBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvck1lc3NhZ2UuY2xpZW50SW5mb0VtcHR5RXJyb3IuY29kZSxcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5jbGllbnRJbmZvRW1wdHlFcnJvci5kZXNjfSBHaXZlbiBPYmplY3Q6ICR7cmF3Q2xpZW50SW5mb31gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gdGhlIGlkIHRva2VuIGV4dHJhY3Rpb24gZXJyb3JzIG91dC5cclxuICAgICAqIEBwYXJhbSBlcnIgXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVJZFRva2VuUGFyc2luZ0Vycm9yKGNhdWdodEV4dHJhY3Rpb25FcnJvcjogc3RyaW5nKTogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLmlkVG9rZW5QYXJzaW5nRXJyb3IuY29kZSxcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5pZFRva2VuUGFyc2luZ0Vycm9yLmRlc2N9IEZhaWxlZCB3aXRoIGVycm9yOiAke2NhdWdodEV4dHJhY3Rpb25FcnJvcn1gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gdGhlIGlkIHRva2VuIHN0cmluZyBpcyBudWxsIG9yIGVtcHR5LlxyXG4gICAgICogQHBhcmFtIGludmFsaWRSYXdUb2tlblN0cmluZyBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUlkVG9rZW5OdWxsT3JFbXB0eUVycm9yKGludmFsaWRSYXdUb2tlblN0cmluZzogc3RyaW5nKSA6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5udWxsT3JFbXB0eUlkVG9rZW4uY29kZSxcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5udWxsT3JFbXB0eUlkVG9rZW4uZGVzY30gUmF3IElEIFRva2VuIFZhbHVlOiAke2ludmFsaWRSYXdUb2tlblN0cmluZ31gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gdGhlIHRva2VuIHJlcXVlc3QgY291bGQgbm90IGJlIHJldHJpZXZlZCBmcm9tIHRoZSBjYWNoZVxyXG4gICAgICogQHBhcmFtIGVyckRldGFpbCBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZVRva2VuUmVxdWVzdENhY2hlRXJyb3IoZXJyRGV0YWlsOiBzdHJpbmcpOiBDbGllbnRBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvck1lc3NhZ2UudG9rZW5SZXF1ZXN0Q2FjaGVFcnJvci5jb2RlLCBcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS50b2tlblJlcXVlc3RDYWNoZUVycm9yLmRlc2N9IEVycm9yIERldGFpbDogJHtlcnJEZXRhaWx9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biB3aGVuIHRoZSBlbmRwb2ludCBkaXNjb3ZlcnkgZG9lc24ndCBjb21wbGV0ZSBjb3JyZWN0bHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVFbmRwb2ludERpc2NvdmVyeUluY29tcGxldGVFcnJvcihlcnJEZXRhaWw6IHN0cmluZyk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5lbmRwb2ludFJlc29sdXRpb25FcnJvci5jb2RlLCBcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5lbmRwb2ludFJlc29sdXRpb25FcnJvci5kZXNjfSBEZXRhaWw6ICR7ZXJyRGV0YWlsfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gaWYgYXV0aG9yaXR5IHR5cGUgaXMgbm90IHZhbGlkLlxyXG4gICAgICogQHBhcmFtIGludmFsaWRBdXRob3JpdHlFcnJvciBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUludmFsaWRBdXRob3JpdHlUeXBlRXJyb3IoZ2l2ZW5Vcmw6IHN0cmluZyk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5pbnZhbGlkQXV0aG9yaXR5VHlwZS5jb2RlLCBcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5pbnZhbGlkQXV0aG9yaXR5VHlwZS5kZXNjfSBHaXZlbiBVcmw6ICR7Z2l2ZW5Vcmx9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biB3aGVuIHRoZSBoYXNoIGNhbm5vdCBiZSBkZXNlcmlhbGl6ZWQuXHJcbiAgICAgKiBAcGFyYW0gaW52YWxpZEF1dGhvcml0eUVycm9yIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlSGFzaE5vdERlc2VyaWFsaXplZEVycm9yKGhhc2hQYXJhbU9iajogc3RyaW5nKTogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLmhhc2hOb3REZXNlcmlhbGl6ZWQuY29kZSwgXHJcbiAgICAgICAgICAgIGAke0NsaWVudEF1dGhFcnJvck1lc3NhZ2UuaGFzaE5vdERlc2VyaWFsaXplZC5kZXNjfSBHaXZlbiBPYmplY3Q6ICR7aGFzaFBhcmFtT2JqfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiB0d28gc3RhdGVzIGRvIG5vdCBtYXRjaC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZVN0YXRlTWlzbWF0Y2hFcnJvcigpOiBDbGllbnRBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvck1lc3NhZ2Uuc3RhdGVNaXNtYXRjaEVycm9yLmNvZGUsIFxyXG4gICAgICAgICAgICBDbGllbnRBdXRoRXJyb3JNZXNzYWdlLnN0YXRlTWlzbWF0Y2hFcnJvci5kZXNjKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gdGhlIG5vbmNlIGRvZXMgbm90IG1hdGNoLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlTm9uY2VNaXNtYXRjaEVycm9yKCk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5ub25jZU1pc21hdGNoRXJyb3IuY29kZSwgXHJcbiAgICAgICAgICAgIENsaWVudEF1dGhFcnJvck1lc3NhZ2Uubm9uY2VNaXNtYXRjaEVycm9yLmRlc2MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gdGhlIGNhY2hlZCBhY2NvdW50IGFuZCByZXNwb25zZSBhY2NvdW50IGRvIG5vdCBtYXRjaC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUFjY291bnRNaXNtYXRjaEVycm9yKCk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5hY2NvdW50TWlzbWF0Y2hFcnJvci5jb2RlLCBcclxuICAgICAgICAgICAgQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5hY2NvdW50TWlzbWF0Y2hFcnJvci5kZXNjKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRocm93cyBlcnJvciBpZiBpZFRva2VuIGlzIG5vdCBjb3JyZWN0bHkgZm9ybWVkXHJcbiAgICAgKiBAcGFyYW0gaWRUb2tlbiBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUludmFsaWRJZFRva2VuRXJyb3IoaWRUb2tlbjogSWRUb2tlbikgOiBDbGllbnRBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvck1lc3NhZ2UuaW52YWxpZElkVG9rZW4uY29kZSxcclxuICAgICAgICAgICAgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5pbnZhbGlkSWRUb2tlbi5kZXNjfSBHaXZlbiB0b2tlbjogJHtKU09OLnN0cmluZ2lmeShpZFRva2VuKX1gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gdGhlIGF1dGhvcml6YXRpb24gY29kZSByZXF1aXJlZCBmb3IgYSB0b2tlbiByZXF1ZXN0IGlzIG51bGwgb3IgZW1wdHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVOb1Rva2Vuc0ZvdW5kRXJyb3Ioc2NvcGVzOiBzdHJpbmcpOiBDbGllbnRBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvck1lc3NhZ2Uubm9Ub2tlbnNGb3VuZEVycm9yLmNvZGUsIFxyXG4gICAgICAgICAgICBgJHtDbGllbnRBdXRoRXJyb3JNZXNzYWdlLm5vVG9rZW5zRm91bmRFcnJvci5kZXNjfSBTY29wZXM6ICR7c2NvcGVzfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciBpbiBjYWNoZSBwYXJzaW5nLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlQ2FjaGVQYXJzZUVycm9yKGNhY2hlS2V5OiBzdHJpbmcpOiBDbGllbnRBdXRoRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvck1lc3NhZ2UuY2FjaGVQYXJzZUVycm9yLmNvZGUsIFxyXG4gICAgICAgICAgICBgJHtDbGllbnRBdXRoRXJyb3JNZXNzYWdlLmNhY2hlUGFyc2VFcnJvci5kZXNjfSBDYWNoZSBrZXk6ICR7Y2FjaGVLZXl9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaHJvd3MgZXJyb3Igd2hlbiByZW5ld2luZyB0b2tlbiB3aXRob3V0IGxvZ2luLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlVXNlckxvZ2luUmVxdWlyZWRFcnJvcigpIDogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLnVzZXJMb2dpblJlcXVpcmVkRXJyb3IuY29kZSxcclxuICAgICAgICAgICAgQ2xpZW50QXV0aEVycm9yTWVzc2FnZS51c2VyTG9naW5SZXF1aXJlZEVycm9yLmRlc2MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhyb3dzIGVycm9yIHdoZW4gbXVsdGlwbGUgdG9rZW5zIGFyZSBpbiBjYWNoZSBmb3IgdGhlIGdpdmVuIHNjb3BlLlxyXG4gICAgICogQHBhcmFtIHNjb3BlIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlTXVsdGlwbGVNYXRjaGluZ1Rva2Vuc0luQ2FjaGVFcnJvcihzY29wZTogc3RyaW5nKTogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLm11bHRpcGxlTWF0Y2hpbmdUb2tlbnMuY29kZSxcclxuICAgICAgICAgICAgYENhY2hlIGVycm9yIGZvciBzY29wZSAke3Njb3BlfTogJHtDbGllbnRBdXRoRXJyb3JNZXNzYWdlLm11bHRpcGxlTWF0Y2hpbmdUb2tlbnMuZGVzY30uYCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaHJvd3MgZXJyb3Igd2hlbiBubyBhdXRoIGNvZGUgb3IgcmVmcmVzaCB0b2tlbiBpcyBnaXZlbiB0byBTZXJ2ZXJUb2tlblJlcXVlc3RQYXJhbWV0ZXJzLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlVG9rZW5SZXF1ZXN0Q2Fubm90QmVNYWRlRXJyb3IoKTogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLnRva2VuUmVxdWVzdENhbm5vdEJlTWFkZS5jb2RlLCBDbGllbnRBdXRoRXJyb3JNZXNzYWdlLnRva2VuUmVxdWVzdENhbm5vdEJlTWFkZS5kZXNjKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRocm93cyBlcnJvciB3aGVuIGF0dGVtcHRpbmcgdG8gYXBwZW5kIGEgbnVsbCwgdW5kZWZpbmVkIG9yIGVtcHR5IHNjb3BlIHRvIGEgc2V0XHJcbiAgICAgKiBAcGFyYW0gZ2l2ZW5TY29wZSBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUFwcGVuZEVtcHR5U2NvcGVUb1NldEVycm9yKGdpdmVuU2NvcGU6IHN0cmluZyk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5hcHBlbmRFbXB0eVNjb3BlRXJyb3IuY29kZSwgYCR7Q2xpZW50QXV0aEVycm9yTWVzc2FnZS5hcHBlbmRFbXB0eVNjb3BlRXJyb3IuZGVzY30gR2l2ZW4gU2NvcGU6ICR7Z2l2ZW5TY29wZX1gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRocm93cyBlcnJvciB3aGVuIGF0dGVtcHRpbmcgdG8gYXBwZW5kIGEgbnVsbCwgdW5kZWZpbmVkIG9yIGVtcHR5IHNjb3BlIHRvIGEgc2V0XHJcbiAgICAgKiBAcGFyYW0gZ2l2ZW5TY29wZSBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZVJlbW92ZUVtcHR5U2NvcGVGcm9tU2V0RXJyb3IoZ2l2ZW5TY29wZTogc3RyaW5nKTogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLnJlbW92ZUVtcHR5U2NvcGVFcnJvci5jb2RlLCBgJHtDbGllbnRBdXRoRXJyb3JNZXNzYWdlLnJlbW92ZUVtcHR5U2NvcGVFcnJvci5kZXNjfSBHaXZlbiBTY29wZTogJHtnaXZlblNjb3BlfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhyb3dzIGVycm9yIHdoZW4gYXR0ZW1wdGluZyB0byBhcHBlbmQgbnVsbCBvciBlbXB0eSBTY29wZVNldC5cclxuICAgICAqIEBwYXJhbSBhcHBlbmRFcnJvciBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUFwcGVuZFNjb3BlU2V0RXJyb3IoYXBwZW5kRXJyb3I6IHN0cmluZyk6IENsaWVudEF1dGhFcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yTWVzc2FnZS5hcHBlbmRTY29wZVNldEVycm9yLmNvZGUsIGAke0NsaWVudEF1dGhFcnJvck1lc3NhZ2UuYXBwZW5kU2NvcGVTZXRFcnJvci5kZXNjfSBEZXRhaWwgRXJyb3I6ICR7YXBwZW5kRXJyb3J9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaHJvd3MgZXJyb3IgaWYgU2NvcGVTZXQgaXMgbnVsbCBvciB1bmRlZmluZWQuXHJcbiAgICAgKiBAcGFyYW0gZ2l2ZW5TY29wZVNldCBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUVtcHR5SW5wdXRTY29wZVNldEVycm9yKGdpdmVuU2NvcGVTZXQ6IFNjb3BlU2V0KTogQ2xpZW50QXV0aEVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JNZXNzYWdlLmVtcHR5SW5wdXRTY29wZVNldEVycm9yLmNvZGUsIGAke0NsaWVudEF1dGhFcnJvck1lc3NhZ2UuZW1wdHlJbnB1dFNjb3BlU2V0RXJyb3IuZGVzY30gR2l2ZW4gU2NvcGVTZXQ6ICR7Z2l2ZW5TY29wZVNldH1gKTtcclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgRGVjb2RlZEp3dCB9IGZyb20gXCIuLi9hdXRoL0RlY29kZWRKd3RcIjtcclxuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSBcIi4uL2Vycm9yL0NsaWVudEF1dGhFcnJvclwiO1xyXG5cclxuLyoqXHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTdHJpbmdVdGlscyB7XHJcbiAgICBcclxuICAgIC8qKlxyXG4gICAgICogZGVjb2RlIGEgSldUXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGp3dFRva2VuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBkZWNvZGVKd3Qoand0VG9rZW46IHN0cmluZyk6IERlY29kZWRKd3Qge1xyXG4gICAgICAgIGlmIChTdHJpbmdVdGlscy5pc0VtcHR5KGp3dFRva2VuKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlSWRUb2tlbk51bGxPckVtcHR5RXJyb3Ioand0VG9rZW4pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBpZFRva2VuUGFydHNSZWdleCA9IC9eKFteXFwuXFxzXSopXFwuKFteXFwuXFxzXSspXFwuKFteXFwuXFxzXSopJC87XHJcbiAgICAgICAgY29uc3QgbWF0Y2hlcyA9IGlkVG9rZW5QYXJ0c1JlZ2V4LmV4ZWMoand0VG9rZW4pO1xyXG4gICAgICAgIGlmICghbWF0Y2hlcyB8fCBtYXRjaGVzLmxlbmd0aCA8IDQpIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUlkVG9rZW5QYXJzaW5nRXJyb3IoYEdpdmVuIHRva2VuIGlzIG1hbGZvcm1lZDogJHtKU09OLnN0cmluZ2lmeShqd3RUb2tlbil9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGNyYWNrZWRUb2tlbjogRGVjb2RlZEp3dCA9IHtcclxuICAgICAgICAgICAgaGVhZGVyOiBtYXRjaGVzWzFdLFxyXG4gICAgICAgICAgICBKV1NQYXlsb2FkOiBtYXRjaGVzWzJdLFxyXG4gICAgICAgICAgICBKV1NTaWc6IG1hdGNoZXNbM11cclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBjcmFja2VkVG9rZW47XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBpZiBhIHN0cmluZyBpcyBlbXB0eS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc3RyXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBpc0VtcHR5KHN0cjogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICh0eXBlb2Ygc3RyID09PSBcInVuZGVmaW5lZFwiIHx8ICFzdHIgfHwgMCA9PT0gc3RyLmxlbmd0aCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQYXJzZXMgc3RyaW5nIGludG8gYW4gb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBxdWVyeVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgcXVlcnlTdHJpbmdUb09iamVjdDxUPihxdWVyeTogc3RyaW5nKTogVCB7XHJcbiAgICAgICAgbGV0IG1hdGNoOiBBcnJheTxzdHJpbmc+OyAvLyBSZWdleCBmb3IgcmVwbGFjaW5nIGFkZGl0aW9uIHN5bWJvbCB3aXRoIGEgc3BhY2VcclxuICAgICAgICBjb25zdCBwbCA9IC9cXCsvZztcclxuICAgICAgICBjb25zdCBzZWFyY2ggPSAvKFteJj1dKyk9KFteJl0qKS9nO1xyXG4gICAgICAgIGNvbnN0IGRlY29kZSA9IChzOiBzdHJpbmcpOiBzdHJpbmcgPT4gZGVjb2RlVVJJQ29tcG9uZW50KHMucmVwbGFjZShwbCwgXCIgXCIpKTtcclxuICAgICAgICBjb25zdCBvYmo6IHt9ID0ge307XHJcbiAgICAgICAgbWF0Y2ggPSBzZWFyY2guZXhlYyhxdWVyeSk7XHJcbiAgICAgICAgd2hpbGUgKG1hdGNoKSB7XHJcbiAgICAgICAgICAgIG9ialtkZWNvZGUobWF0Y2hbMV0pXSA9IGRlY29kZShtYXRjaFsyXSk7XHJcbiAgICAgICAgICAgIG1hdGNoID0gc2VhcmNoLmV4ZWMocXVlcnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb2JqIGFzIFQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUcmltcyBlbnRyaWVzIGFuZCBjb252ZXJ0cyB0aGVtIHRvIGxvd2VyIGNhc2UuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGFyclxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgdHJpbUFuZENvbnZlcnRBcnJheUVudHJpZXNUb0xvd2VyQ2FzZShhcnI6IEFycmF5PHN0cmluZz4pOiBBcnJheTxzdHJpbmc+IHtcclxuICAgICAgICByZXR1cm4gYXJyLm1hcChlbnRyeSA9PiBlbnRyeS50cmltKCkudG9Mb3dlckNhc2UoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmVzIGVtcHR5IHN0cmluZ3MgZnJvbSBhcnJheVxyXG4gICAgICogQHBhcmFtIGFyciBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHJlbW92ZUVtcHR5U3RyaW5nc0Zyb21BcnJheShhcnI6IEFycmF5PHN0cmluZz4pOiBBcnJheTxzdHJpbmc+IHtcclxuICAgICAgICByZXR1cm4gYXJyLmZpbHRlcihlbnRyeSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAhU3RyaW5nVXRpbHMuaXNFbXB0eShlbnRyeSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCBwa2cgZnJvbSBcIi4uLy4uL3BhY2thZ2UuanNvblwiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBMb2dnZXJPcHRpb25zIH0gZnJvbSBcIi4uL2FwcC9jb25maWcvTW9kdWxlQ29uZmlndXJhdGlvbi5qc1wiO1xyXG5cclxuLyoqXHJcbiAqIE9wdGlvbnMgZm9yIGxvZ2dlciBtZXNzYWdlcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIExvZ2dlck1lc3NhZ2VPcHRpb25zID0ge1xyXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsLFxyXG4gICAgY29ycmVsYXRpb25JZD86IHN0cmluZyxcclxuICAgIGNvbnRhaW5zUGlpPzogYm9vbGVhblxyXG59O1xyXG5cclxuLyoqXHJcbiAqIExvZyBtZXNzYWdlIGxldmVsLlxyXG4gKi9cclxuZXhwb3J0IGVudW0gTG9nTGV2ZWwge1xyXG4gICAgRXJyb3IsXHJcbiAgICBXYXJuaW5nLFxyXG4gICAgSW5mbyxcclxuICAgIFZlcmJvc2VcclxufTtcclxuXHJcbi8qKlxyXG4gKiBDYWxsYmFjayB0byBzZW5kIHRoZSBtZXNzYWdlcyB0by5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUxvZ2dlckNhbGxiYWNrIHtcclxuICAgIChsZXZlbDogTG9nTGV2ZWwsIG1lc3NhZ2U6IHN0cmluZywgY29udGFpbnNQaWk6IGJvb2xlYW4pOiB2b2lkO1xyXG59XHJcblxyXG4vKipcclxuICogQ2xhc3Mgd2hpY2ggZmFjaWxpdGF0ZXMgbG9nZ2luZyBvZiBtZXNzYWdlcyB0byBhIHNwZWNpZmljIHBsYWNlLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIExvZ2dlciB7XHJcblxyXG4gICAgLy8gQ29ycmVsYXRpb24gSUQgZm9yIHJlcXVlc3QsIHVzdWFsbHkgc2V0IGJ5IHVzZXIuXHJcbiAgICBwcml2YXRlIGNvcnJlbGF0aW9uSWQ6IHN0cmluZztcclxuXHJcbiAgICAvLyBDdXJyZW50IGxvZyBsZXZlbCwgZGVmYXVsdHMgdG8gaW5mby5cclxuICAgIHByaXZhdGUgbGV2ZWw6IExvZ0xldmVsID0gTG9nTGV2ZWwuSW5mbztcclxuXHJcbiAgICAvLyBCb29sZWFuIGRlc2NyaWJpbmcgd2hldGhlciBQSUkgbG9nZ2luZyBpcyBhbGxvd2VkLlxyXG4gICAgcHJpdmF0ZSBwaWlMb2dnaW5nRW5hYmxlZDogYm9vbGVhbjtcclxuXHJcbiAgICAvLyBDYWxsYmFjayB0byBzZW5kIG1lc3NhZ2VzIHRvLlxyXG4gICAgcHJpdmF0ZSBsb2NhbENhbGxiYWNrOiBJTG9nZ2VyQ2FsbGJhY2s7XHJcblxyXG4gICAgY29uc3RydWN0b3IobG9nZ2VyT3B0aW9uczogTG9nZ2VyT3B0aW9ucykge1xyXG4gICAgICAgIGlmIChsb2dnZXJPcHRpb25zKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9jYWxDYWxsYmFjayA9IGxvZ2dlck9wdGlvbnMubG9nZ2VyQ2FsbGJhY2s7XHJcbiAgICAgICAgICAgIHRoaXMucGlpTG9nZ2luZ0VuYWJsZWQgPSBsb2dnZXJPcHRpb25zLnBpaUxvZ2dpbmdFbmFibGVkO1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsID0gbG9nZ2VyT3B0aW9ucy5sb2dMZXZlbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2cgbWVzc2FnZSB3aXRoIHJlcXVpcmVkIG9wdGlvbnMuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgbG9nTWVzc2FnZShsb2dNZXNzYWdlOiBzdHJpbmcsIG9wdGlvbnM6IExvZ2dlck1lc3NhZ2VPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKChvcHRpb25zLmxvZ0xldmVsID4gdGhpcy5sZXZlbCkgfHwgKCF0aGlzLnBpaUxvZ2dpbmdFbmFibGVkICYmIG9wdGlvbnMuY29udGFpbnNQaWkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gbmV3IERhdGUoKS50b1VUQ1N0cmluZygpO1xyXG4gICAgICAgIGNvbnN0IGxvZ0hlYWRlcjogc3RyaW5nID0gU3RyaW5nVXRpbHMuaXNFbXB0eSh0aGlzLmNvcnJlbGF0aW9uSWQpID8gYFske3RpbWVzdGFtcH1dIDogYCA6IGBbJHt0aW1lc3RhbXB9XSA6IFske3RoaXMuY29ycmVsYXRpb25JZH1dYDtcclxuICAgICAgICBjb25zdCBsb2cgPSBgJHtsb2dIZWFkZXJ9IDogJHtwa2cudmVyc2lvbn0gOiAke0xvZ0xldmVsW29wdGlvbnMubG9nTGV2ZWxdfSAtICR7bG9nTWVzc2FnZX1gO1xyXG4gICAgICAgIHRoaXMuZXhlY3V0ZUNhbGxiYWNrKG9wdGlvbnMubG9nTGV2ZWwsIGxvZywgb3B0aW9ucy5jb250YWluc1BpaSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFeGVjdXRlIGNhbGxiYWNrIHdpdGggbWVzc2FnZS5cclxuICAgICAqL1xyXG4gICAgZXhlY3V0ZUNhbGxiYWNrKGxldmVsOiBMb2dMZXZlbCwgbWVzc2FnZTogc3RyaW5nLCBjb250YWluc1BpaTogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmxvY2FsQ2FsbGJhY2spIHtcclxuICAgICAgICAgICAgdGhpcy5sb2NhbENhbGxiYWNrKGxldmVsLCBtZXNzYWdlLCBjb250YWluc1BpaSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyBlcnJvciBtZXNzYWdlcy5cclxuICAgICAqL1xyXG4gICAgZXJyb3IobWVzc2FnZTogc3RyaW5nLCBjb3JyZWxhdGlvbklkPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLkVycm9yLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogZmFsc2UsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgXCJcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyBlcnJvciBtZXNzYWdlcyB3aXRoIFBJSS5cclxuICAgICAqL1xyXG4gICAgZXJyb3JQaWkobWVzc2FnZTogc3RyaW5nLCBjb3JyZWxhdGlvbklkPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLkVycm9yLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogdHJ1ZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBcIlwiXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHdhcm5pbmcgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIHdhcm5pbmcobWVzc2FnZTogc3RyaW5nLCBjb3JyZWxhdGlvbklkPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLldhcm5pbmcsXHJcbiAgICAgICAgICAgIGNvbnRhaW5zUGlpOiBmYWxzZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBcIlwiXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHdhcm5pbmcgbWVzc2FnZXMgd2l0aCBQSUkuXHJcbiAgICAgKi9cclxuICAgIHdhcm5pbmdQaWkobWVzc2FnZTogc3RyaW5nLCBjb3JyZWxhdGlvbklkPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sb2dNZXNzYWdlKG1lc3NhZ2UsIHtcclxuICAgICAgICAgICAgbG9nTGV2ZWw6IExvZ0xldmVsLldhcm5pbmcsXHJcbiAgICAgICAgICAgIGNvbnRhaW5zUGlpOiB0cnVlLFxyXG4gICAgICAgICAgICBjb3JyZWxhdGlvbklkOiBjb3JyZWxhdGlvbklkIHx8IFwiXCJcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExvZ3MgaW5mbyBtZXNzYWdlcy5cclxuICAgICAqL1xyXG4gICAgaW5mbyhtZXNzYWdlOiBzdHJpbmcsIGNvcnJlbGF0aW9uSWQ/OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmxvZ01lc3NhZ2UobWVzc2FnZSwge1xyXG4gICAgICAgICAgICBsb2dMZXZlbDogTG9nTGV2ZWwuSW5mbyxcclxuICAgICAgICAgICAgY29udGFpbnNQaWk6IGZhbHNlLFxyXG4gICAgICAgICAgICBjb3JyZWxhdGlvbklkOiBjb3JyZWxhdGlvbklkIHx8IFwiXCJcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExvZ3MgaW5mbyBtZXNzYWdlcyB3aXRoIFBJSS5cclxuICAgICAqL1xyXG4gICAgaW5mb1BpaShtZXNzYWdlOiBzdHJpbmcsIGNvcnJlbGF0aW9uSWQ/OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmxvZ01lc3NhZ2UobWVzc2FnZSwge1xyXG4gICAgICAgICAgICBsb2dMZXZlbDogTG9nTGV2ZWwuSW5mbyxcclxuICAgICAgICAgICAgY29udGFpbnNQaWk6IHRydWUsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgXCJcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyB2ZXJib3NlIG1lc3NhZ2VzLlxyXG4gICAgICovXHJcbiAgICB2ZXJib3NlKG1lc3NhZ2U6IHN0cmluZywgY29ycmVsYXRpb25JZD86IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubG9nTWVzc2FnZShtZXNzYWdlLCB7XHJcbiAgICAgICAgICAgIGxvZ0xldmVsOiBMb2dMZXZlbC5WZXJib3NlLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogZmFsc2UsXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQgfHwgXCJcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyB2ZXJib3NlIG1lc3NhZ2VzIHdpdGggUElJLlxyXG4gICAgICovXHJcbiAgICB2ZXJib3NlUGlpKG1lc3NhZ2U6IHN0cmluZywgY29ycmVsYXRpb25JZD86IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubG9nTWVzc2FnZShtZXNzYWdlLCB7XHJcbiAgICAgICAgICAgIGxvZ0xldmVsOiBMb2dMZXZlbC5WZXJib3NlLFxyXG4gICAgICAgICAgICBjb250YWluc1BpaTogdHJ1ZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogY29ycmVsYXRpb25JZCB8fCBcIlwiXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHdoZXRoZXIgUElJIExvZ2dpbmcgaXMgZW5hYmxlZCBvciBub3QuXHJcbiAgICAgKi9cclxuICAgIGlzUGlpTG9nZ2luZ0VuYWJsZWQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucGlpTG9nZ2luZ0VuYWJsZWQgfHwgZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IElDYWNoZVN0b3JhZ2UgfSBmcm9tIFwiLi4vLi4vY2FjaGUvSUNhY2hlU3RvcmFnZVwiO1xyXG5pbXBvcnQgeyBJTmV0d29ya01vZHVsZSB9IGZyb20gXCIuLi8uLi9uZXR3b3JrL0lOZXR3b3JrTW9kdWxlXCI7XHJcbmltcG9ydCB7IElDcnlwdG8sIFBrY2VDb2RlcyB9IGZyb20gXCIuLi8uLi9jcnlwdG8vSUNyeXB0b1wiO1xyXG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IvQXV0aEVycm9yXCI7XHJcbmltcG9ydCB7IElMb2dnZXJDYWxsYmFjaywgTG9nTGV2ZWwgfSBmcm9tIFwiLi4vLi4vbG9nZ2VyL0xvZ2dlclwiO1xyXG5cclxuLy8gVG9rZW4gcmVuZXdhbCBvZmZzZXQgZGVmYXVsdCBpbiBzZWNvbmRzXHJcbmNvbnN0IERFRkFVTFRfVE9LRU5fUkVORVdBTF9PRkZTRVRfU0VDID0gMzAwO1xyXG5cclxuLyoqXHJcbiAqIFVzZSB0aGUgY29uZmlndXJhdGlvbiBvYmplY3QgdG8gY29uZmlndXJlIE1TQUwgTW9kdWxlcyBhbmQgaW5pdGlhbGl6ZSB0aGUgYmFzZSBpbnRlcmZhY2VzIGZvciBNU0FMLlxyXG4gKlxyXG4gKiBUaGlzIG9iamVjdCBhbGxvd3MgeW91IHRvIGNvbmZpZ3VyZSBpbXBvcnRhbnQgZWxlbWVudHMgb2YgTVNBTCBmdW5jdGlvbmFsaXR5OlxyXG4gKiAtIGxvZ2dlcjogbG9nZ2luZyBmb3IgYXBwbGljYXRpb25cclxuICogLSBzdG9yYWdlOiB0aGlzIGlzIHdoZXJlIHlvdSBjb25maWd1cmUgc3RvcmFnZSBpbXBsZW1lbnRhdGlvbi5cclxuICogLSBuZXR3b3JrOiB0aGlzIGlzIHdoZXJlIHlvdSBjYW4gY29uZmlndXJlIG5ldHdvcmsgaW1wbGVtZW50YXRpb24uXHJcbiAqIC0gY3J5cHRvOiBpbXBsZW1lbnRhdGlvbiBvZiBjcnlwdG8gZnVuY3Rpb25zXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBNb2R1bGVDb25maWd1cmF0aW9uID0ge1xyXG4gICAgc3lzdGVtT3B0aW9ucz86IFN5c3RlbU9wdGlvbnMsXHJcbiAgICBsb2dnZXJPcHRpb25zPzogTG9nZ2VyT3B0aW9ucyxcclxuICAgIHN0b3JhZ2VJbnRlcmZhY2U/OiBJQ2FjaGVTdG9yYWdlLFxyXG4gICAgbmV0d29ya0ludGVyZmFjZT86IElOZXR3b3JrTW9kdWxlLFxyXG4gICAgY3J5cHRvSW50ZXJmYWNlPzogSUNyeXB0b1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFRlbGVtZXRyeSBDb25maWcgT3B0aW9uc1xyXG4gKiAtIGFwcGxpY2F0aW9uTmFtZSAgICAgICAgICAgICAgLSBOYW1lIG9mIHRoZSBjb25zdW1pbmcgYXBwcyBhcHBsaWNhdGlvblxyXG4gKiAtIGFwcGxpY2F0aW9uVmVyc2lvbiAgICAgICAgICAgLSBWZXJpc29uIG9mIHRoZSBjb25zdW1pbmcgYXBwbGljYXRpb25cclxuICogLSB0ZWxlbWV0cnlFbWl0dGVyICAgICAgICAgICAgIC0gRnVuY3Rpb24gd2hlcmUgdGVsZW1ldHJ5IGV2ZW50cyBhcmUgZmx1c2hlZCB0b1xyXG4gKi9cclxuZXhwb3J0IHR5cGUgVGVsZW1ldHJ5T3B0aW9ucyA9IHtcclxuICAgIGFwcGxpY2F0aW9uTmFtZTogc3RyaW5nO1xyXG4gICAgYXBwbGljYXRpb25WZXJzaW9uOiBzdHJpbmc7XHJcbiAgICAvLyBUT0RPLCBhZGQgb25seUFkZEZhaWx1cmVUZWxlbWV0cnkgb3B0aW9uXHJcbn07XHJcblxyXG4vKipcclxuICogTGlicmFyeSBTcGVjaWZpYyBPcHRpb25zXHJcbiAqXHJcbiAqIC0gdG9rZW5SZW5ld2FsT2Zmc2V0U2Vjb25kcyAgICAtIHNldHMgdGhlIHdpbmRvdyBvZiBvZmZzZXQgbmVlZGVkIHRvIHJlbmV3IHRoZSB0b2tlbiBiZWZvcmUgZXhwaXJ5XHJcbiAqIC0gdGVsZW1ldHJ5ICAgICAgICAgICAgICAgICAgICAtIFRlbGVtZXRyeSBvcHRpb25zIGZvciBsaWJyYXJ5IG5ldHdvcmsgcmVxdWVzdHNcclxuICovXHJcbmV4cG9ydCB0eXBlIFN5c3RlbU9wdGlvbnMgPSB7XHJcbiAgICB0b2tlblJlbmV3YWxPZmZzZXRTZWNvbmRzPzogbnVtYmVyO1xyXG4gICAgdGVsZW1ldHJ5PzogVGVsZW1ldHJ5T3B0aW9uc1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIExvZ2dlciBvcHRpb25zIHRvIGNvbmZpZ3VyZSB0aGUgbG9nZ2luZyB0aGF0IE1TQUwgZG9lcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIExvZ2dlck9wdGlvbnMgPSB7XHJcbiAgICBsb2dnZXJDYWxsYmFjaz86IElMb2dnZXJDYWxsYmFjayxcclxuICAgIHBpaUxvZ2dpbmdFbmFibGVkPzogYm9vbGVhbixcclxuICAgIGxvZ0xldmVsPzogTG9nTGV2ZWxcclxufTtcclxuXHJcbi8vIERlZmF1bHQgbW9kdWxlIHN5c3RlbSBvcHRpb25zXHJcbmNvbnN0IERFRkFVTFRfU1lTVEVNX09QVElPTlM6IFN5c3RlbU9wdGlvbnMgPSB7XHJcbiAgICB0b2tlblJlbmV3YWxPZmZzZXRTZWNvbmRzOiBERUZBVUxUX1RPS0VOX1JFTkVXQUxfT0ZGU0VUX1NFQyxcclxuICAgIHRlbGVtZXRyeTogbnVsbFxyXG59O1xyXG5cclxuLy8gRGVmYXVsdCBsb2dnZXIgaW1wbGVtZW50YXRpb25cclxuY29uc3QgREVGQVVMVF9MT0dHRVJfSU1QTEVNRU5UQVRJT046IExvZ2dlck9wdGlvbnMgPSB7XHJcbiAgICBsb2dnZXJDYWxsYmFjazogKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIkxvZ2dlciAtIGxvZ2dlckNhbGxiYWNrSW50ZXJmYWNlKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkLlwiO1xyXG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XHJcbiAgICB9LFxyXG4gICAgcGlpTG9nZ2luZ0VuYWJsZWQ6IGZhbHNlLFxyXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm9cclxufTtcclxuXHJcbi8vIERlZmF1bHQgc3RvcmFnZSBpbXBsZW1lbnRhdGlvblxyXG5jb25zdCBERUZBVUxUX1NUT1JBR0VfSU1QTEVNRU5UQVRJT046IElDYWNoZVN0b3JhZ2UgPSB7XHJcbiAgICBjbGVhcjogKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIlN0b3JhZ2UgaW50ZXJmYWNlIC0gY2xlYXIoKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWQgZm9yIHRoZSBjYWNoZVN0b3JhZ2UgaW50ZXJmYWNlLlwiO1xyXG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XHJcbiAgICB9LFxyXG4gICAgY29udGFpbnNLZXk6ICgpOiBib29sZWFuID0+IHtcclxuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJTdG9yYWdlIGludGVyZmFjZSAtIGNvbnRhaW5zS2V5KCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkIGZvciB0aGUgY2FjaGVTdG9yYWdlIGludGVyZmFjZS5cIjtcclxuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xyXG4gICAgfSxcclxuICAgIGdldEl0ZW06ICgpOiBzdHJpbmcgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIlN0b3JhZ2UgaW50ZXJmYWNlIC0gZ2V0SXRlbSgpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZCBmb3IgdGhlIGNhY2hlU3RvcmFnZSBpbnRlcmZhY2UuXCI7XHJcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcclxuICAgIH0sXHJcbiAgICBnZXRLZXlzOiAoKTogc3RyaW5nW10gPT4ge1xyXG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIlN0b3JhZ2UgaW50ZXJmYWNlIC0gZ2V0S2V5cygpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZCBmb3IgdGhlIGNhY2hlU3RvcmFnZSBpbnRlcmZhY2UuXCI7XHJcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcclxuICAgIH0sXHJcbiAgICByZW1vdmVJdGVtOiAoKSA9PiB7XHJcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiU3RvcmFnZSBpbnRlcmZhY2UgLSByZW1vdmVJdGVtKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkIGZvciB0aGUgY2FjaGVTdG9yYWdlIGludGVyZmFjZS5cIjtcclxuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xyXG4gICAgfSxcclxuICAgIHNldEl0ZW06ICgpID0+IHtcclxuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJTdG9yYWdlIGludGVyZmFjZSAtIHNldEl0ZW0oKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWQgZm9yIHRoZSBjYWNoZVN0b3JhZ2UgaW50ZXJmYWNlLlwiO1xyXG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XHJcbiAgICB9XHJcbn07XHJcblxyXG4vLyBEZWZhdWx0IG5ldHdvcmsgaW1wbGVtZW50YXRpb25cclxuY29uc3QgREVGQVVMVF9ORVRXT1JLX0lNUExFTUVOVEFUSU9OOiBJTmV0d29ya01vZHVsZSA9IHtcclxuICAgIGFzeW5jIHNlbmRHZXRSZXF1ZXN0QXN5bmM8VD4oKTogUHJvbWlzZTxUPiB7XHJcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiTmV0d29yayBpbnRlcmZhY2UgLSBzZW5kR2V0UmVxdWVzdEFzeW5jKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkXCI7XHJcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBzZW5kUG9zdFJlcXVlc3RBc3luYzxUPigpOiBQcm9taXNlPFQ+IHtcclxuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJOZXR3b3JrIGludGVyZmFjZSAtIHNlbmRQb3N0UmVxdWVzdEFzeW5jKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkXCI7XHJcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcclxuICAgIH1cclxufTtcclxuXHJcbi8vIERlZmF1bHQgY3J5cHRvIGltcGxlbWVudGF0aW9uXHJcbmNvbnN0IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OOiBJQ3J5cHRvID0ge1xyXG4gICAgY3JlYXRlTmV3R3VpZDogKCk6IHN0cmluZyA9PiB7XHJcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIGNyZWF0ZU5ld0d1aWQoKSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWRcIjtcclxuICAgICAgICB0aHJvdyBBdXRoRXJyb3IuY3JlYXRlVW5leHBlY3RlZEVycm9yKG5vdEltcGxFcnIpO1xyXG4gICAgfSxcclxuICAgIGJhc2U2NERlY29kZTogKCk6IHN0cmluZyA9PiB7XHJcbiAgICAgICAgY29uc3Qgbm90SW1wbEVyciA9IFwiQ3J5cHRvIGludGVyZmFjZSAtIGJhc2U2NERlY29kZSgpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xyXG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XHJcbiAgICB9LFxyXG4gICAgYmFzZTY0RW5jb2RlOiAoKTogc3RyaW5nID0+IHtcclxuICAgICAgICBjb25zdCBub3RJbXBsRXJyID0gXCJDcnlwdG8gaW50ZXJmYWNlIC0gYmFzZTY0RW5jb2RlKCkgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkXCI7XHJcbiAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvcihub3RJbXBsRXJyKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBnZW5lcmF0ZVBrY2VDb2RlcygpOiBQcm9taXNlPFBrY2VDb2Rlcz4ge1xyXG4gICAgICAgIGNvbnN0IG5vdEltcGxFcnIgPSBcIkNyeXB0byBpbnRlcmZhY2UgLSBnZW5lcmF0ZVBrY2VDb2RlcygpIGhhcyBub3QgYmVlbiBpbXBsZW1lbnRlZFwiO1xyXG4gICAgICAgIHRocm93IEF1dGhFcnJvci5jcmVhdGVVbmV4cGVjdGVkRXJyb3Iobm90SW1wbEVycik7XHJcbiAgICB9XHJcbn07XHJcblxyXG4vKipcclxuICogRnVuY3Rpb24gdGhhdCBzZXRzIHRoZSBkZWZhdWx0IG9wdGlvbnMgd2hlbiBub3QgZXhwbGljaXRseSBjb25maWd1cmVkIGZyb20gYXBwIGRldmVsb3BlclxyXG4gKlxyXG4gKiBAcGFyYW0gVFN0b3JhZ2VPcHRpb25zXHJcbiAqIEBwYXJhbSBUU3lzdGVtT3B0aW9uc1xyXG4gKiBAcGFyYW0gVEZyYW1ld29ya09wdGlvbnNcclxuICpcclxuICogQHJldHVybnMgTXNhbENvbmZpZ3VyYXRpb24gb2JqZWN0XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRNb2R1bGVDb25maWd1cmF0aW9uKHsgc3lzdGVtT3B0aW9uczogdXNlclN5c3RlbU9wdGlvbnMsIGxvZ2dlck9wdGlvbnM6IHVzZXJMb2dnZXJPcHRpb24sIHN0b3JhZ2VJbnRlcmZhY2U6IHN0b3JhZ2VJbXBsZW1lbnRhdGlvbiwgbmV0d29ya0ludGVyZmFjZTogbmV0d29ya0ltcGxlbWVudGF0aW9uLCBjcnlwdG9JbnRlcmZhY2U6IGNyeXB0b0ltcGxlbWVudGF0aW9uIH06IE1vZHVsZUNvbmZpZ3VyYXRpb24pOiBNb2R1bGVDb25maWd1cmF0aW9uIHtcclxuICAgIGNvbnN0IG92ZXJsYXllZENvbmZpZzogTW9kdWxlQ29uZmlndXJhdGlvbiA9IHtcclxuICAgICAgICBzeXN0ZW1PcHRpb25zOiB1c2VyU3lzdGVtT3B0aW9ucyB8fCBERUZBVUxUX1NZU1RFTV9PUFRJT05TLFxyXG4gICAgICAgIGxvZ2dlck9wdGlvbnM6IHVzZXJMb2dnZXJPcHRpb24gfHwgREVGQVVMVF9MT0dHRVJfSU1QTEVNRU5UQVRJT04sXHJcbiAgICAgICAgc3RvcmFnZUludGVyZmFjZTogc3RvcmFnZUltcGxlbWVudGF0aW9uIHx8IERFRkFVTFRfU1RPUkFHRV9JTVBMRU1FTlRBVElPTixcclxuICAgICAgICBuZXR3b3JrSW50ZXJmYWNlOiBuZXR3b3JrSW1wbGVtZW50YXRpb24gfHwgREVGQVVMVF9ORVRXT1JLX0lNUExFTUVOVEFUSU9OLFxyXG4gICAgICAgIGNyeXB0b0ludGVyZmFjZTogY3J5cHRvSW1wbGVtZW50YXRpb24gfHwgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT05cclxuICAgIH07XHJcbiAgICByZXR1cm4gb3ZlcmxheWVkQ29uZmlnO1xyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyBBY2Nlc3NUb2tlbktleSB9IGZyb20gXCIuL0FjY2Vzc1Rva2VuS2V5XCI7XHJcbmltcG9ydCB7IEFjY2Vzc1Rva2VuVmFsdWUgfSBmcm9tIFwiLi9BY2Nlc3NUb2tlblZhbHVlXCI7XHJcblxyXG4vKipcclxuICogQWNjZXNzIHRva2VuIGNhY2hlIGl0ZW0gd2hpY2ggaXMgdXNlZCB0byBtYW5hZ2UgdG9rZW5zIGFuZCB0b2tlbiByZW5ld2FsLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEFjY2Vzc1Rva2VuQ2FjaGVJdGVtIHtcclxuXHJcbiAgICBrZXk6IEFjY2Vzc1Rva2VuS2V5O1xyXG4gICAgdmFsdWU6IEFjY2Vzc1Rva2VuVmFsdWU7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioa2V5OiBBY2Nlc3NUb2tlbktleSwgdmFsdWU6IEFjY2Vzc1Rva2VuVmFsdWUpIHtcclxuICAgICAgICB0aGlzLmtleSA9IGtleTtcclxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcblxyXG5leHBvcnQgY29uc3QgQ29uc3RhbnRzID0ge1xyXG4gICAgTElCUkFSWV9OQU1FOiBcIk1TQUwuSlNcIixcclxuICAgIC8vIFByZWZpeCBmb3IgYWxsIGxpYnJhcnkgY2FjaGUgZW50cmllc1xyXG4gICAgQ0FDSEVfUFJFRklYOiBcIm1zYWxcIixcclxuICAgIC8vIGRlZmF1bHQgYXV0aG9yaXR5XHJcbiAgICBERUZBVUxUX0FVVEhPUklUWTogXCJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vY29tbW9uXCIsXHJcbiAgICAvLyBEZWZhdWx0IEFBRCBJbnN0YW5jZSBEaXNjb3ZlcnkgRW5kcG9pbnRcclxuICAgIEFBRF9JTlNUQU5DRV9ESVNDT1ZFUllfRU5EUFQ6IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tL2NvbW1vbi9kaXNjb3ZlcnkvaW5zdGFuY2VcIixcclxuICAgIC8vIFJlc291cmNlIGRlbGltaXRlciAtIHVzZWQgZm9yIGNlcnRhaW4gY2FjaGUgZW50cmllc1xyXG4gICAgUkVTT1VSQ0VfREVMSU06IFwifFwiLFxyXG4gICAgLy8gUGxhY2Vob2xkZXIgZm9yIG5vbi1leGlzdGVudCBhY2NvdW50IGlkcy9vYmplY3RzXHJcbiAgICBOT19BQ0NPVU5UOiBcIk5PX0FDQ09VTlRcIixcclxuICAgIC8vIENsYWltc1xyXG4gICAgQ0xBSU1TOiBcImNsYWltc1wiLFxyXG4gICAgLy8gQ29uc3VtZXIgVVRJRFxyXG4gICAgQ09OU1VNRVJfVVRJRDogXCI5MTg4MDQwZC02YzY3LTRjNWItYjExMi0zNmEzMDRiNjZkYWRcIixcclxuICAgIC8vIERlZmF1bHQgc2NvcGVzXHJcbiAgICBPUEVOSURfU0NPUEU6IFwib3BlbmlkXCIsXHJcbiAgICBQUk9GSUxFX1NDT1BFOiBcInByb2ZpbGVcIixcclxuICAgIE9GRkxJTkVfQUNDRVNTX1NDT1BFOiBcIm9mZmxpbmVfYWNjZXNzXCIsXHJcbiAgICAvLyBEZWZhdWx0IHJlc3BvbnNlIHR5cGUgZm9yIGF1dGhvcml6YXRpb24gY29kZSBmbG93XHJcbiAgICBDT0RFX1JFU1BPTlNFX1RZUEU6IFwiY29kZVwiLFxyXG4gICAgQ09ERV9HUkFOVF9UWVBFOiBcImF1dGhvcml6YXRpb25fY29kZVwiLFxyXG4gICAgUlRfR1JBTlRfVFlQRTogXCJyZWZyZXNoX3Rva2VuXCIsXHJcbiAgICBGUkFHTUVOVF9SRVNQT05TRV9NT0RFOiBcImZyYWdtZW50XCIsXHJcbiAgICBTMjU2X0NPREVfQ0hBTExFTkdFX01FVEhPRDogXCJTMjU2XCIsXHJcbiAgICBVUkxfRk9STV9DT05URU5UX1RZUEU6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJcclxufTtcclxuXHJcbi8qKlxyXG4gKiBSZXF1ZXN0IGhlYWRlciBuYW1lc1xyXG4gKi9cclxuZXhwb3J0IGVudW0gSEVBREVSX05BTUVTIHtcclxuICAgIENPTlRFTlRfVFlQRSA9IFwiQ29udGVudC1UeXBlXCJcclxufTtcclxuXHJcbi8qKlxyXG4gKiBUZW1wb3JhcnkgY2FjaGUga2V5cyBmb3IgTVNBTCwgZGVsZXRlZCBhZnRlciBhbnkgcmVxdWVzdC5cclxuICovXHJcbmV4cG9ydCBlbnVtIFRlbXBvcmFyeUNhY2hlS2V5cyB7XHJcbiAgICBBVVRIT1JJVFkgPSBcImF1dGhvcml0eVwiLFxyXG4gICAgQUNRVUlSRV9UT0tFTl9BQ0NPVU5UID0gXCJhY3F1aXJlVG9rZW4uYWNjb3VudFwiLFxyXG4gICAgU0VTU0lPTl9TVEFURSA9IFwic2Vzc2lvbi5zdGF0ZVwiLFxyXG4gICAgUkVRVUVTVF9TVEFURSA9IFwicmVxdWVzdC5zdGF0ZVwiLFxyXG4gICAgTk9OQ0VfSURUT0tFTiA9IFwibm9uY2UuaWR0b2tlblwiLFxyXG4gICAgT1JJR0lOX1VSSSA9IFwicmVxdWVzdC5vcmlnaW5cIixcclxuICAgIFJFTkVXX1NUQVRVUyA9IFwidG9rZW4ucmVuZXcuc3RhdHVzXCIsXHJcbiAgICBVUkxfSEFTSCA9IFwidXJsSGFzaFwiLFxyXG4gICAgUkVRVUVTVF9QQVJBTVMgPSBcInJlcXVlc3QucGFyYW1zXCIsXHJcbiAgICBTQ09QRVMgPSBcInNjb3Blc1wiXHJcbn07XHJcblxyXG4vKipcclxuICogUGVyc2lzdGVudCBjYWNoZSBrZXlzIE1TQUwgd2hpY2ggc3RheSB3aGlsZSB1c2VyIGlzIGxvZ2dlZCBpbi5cclxuICovXHJcbmV4cG9ydCBlbnVtIFBlcnNpc3RlbnRDYWNoZUtleXMge1xyXG4gICAgSURfVE9LRU4gPSBcImlkdG9rZW5cIixcclxuICAgIENMSUVOVF9JTkZPID0gXCJjbGllbnQuaW5mb1wiLFxyXG4gICAgQURBTF9JRF9UT0tFTiA9IFwiYWRhbC5pZHRva2VuXCIsXHJcbiAgICBFUlJPUiA9IFwiZXJyb3JcIixcclxuICAgIEVSUk9SX0RFU0MgPSBcImVycm9yLmRlc2NyaXB0aW9uXCJcclxufTtcclxuXHJcbi8qKlxyXG4gKiBMaXN0IG9mIHByZS1lc3RhYmxpc2hlZCB0cnVzdGVkIGhvc3QgVVJMcy4gXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQUFEVHJ1c3RlZEhvc3RMaXN0OiBzdHJpbmdbXSA9IFtcclxuICAgIFwibG9naW4ud2luZG93cy5uZXRcIixcclxuICAgIFwibG9naW4uY2hpbmFjbG91ZGFwaS5jblwiLFxyXG4gICAgXCJsb2dpbi5jbG91ZGdvdmFwaS51c1wiLFxyXG4gICAgXCJsb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tXCIsXHJcbiAgICBcImxvZ2luLm1pY3Jvc29mdG9ubGluZS5kZVwiLFxyXG4gICAgXCJsb2dpbi5taWNyb3NvZnRvbmxpbmUudXNcIlxyXG5dO1xyXG5cclxuLyoqXHJcbiAqIFN0cmluZyBjb25zdGFudHMgcmVsYXRlZCB0byBBQUQgQXV0aG9yaXR5XHJcbiAqL1xyXG5leHBvcnQgZW51bSBBQURBdXRob3JpdHlDb25zdGFudHMge1xyXG4gICAgQ09NTU9OID0gXCJjb21tb25cIixcclxuICAgIE9SR0FOSVpBVElPTlMgPSBcIm9yZ2FuaXphdGlvbnNcIixcclxuICAgIENPTlNVTUVSUyA9IFwiY29uc3VtZXJzXCJcclxufTtcclxuXHJcbi8qKlxyXG4gKiBLZXlzIGluIHRoZSBoYXNoUGFyYW1zIHNlbnQgYnkgQUFEIFNlcnZlclxyXG4gKi9cclxuZXhwb3J0IGVudW0gQUFEU2VydmVyUGFyYW1LZXlzIHtcclxuICAgIENMSUVOVF9JRCA9IFwiY2xpZW50X2lkXCIsXHJcbiAgICBSRVNPVVJDRSA9IFwicmVzb3VyY2VcIixcclxuICAgIFJFRElSRUNUX1VSSSA9IFwicmVkaXJlY3RfdXJpXCIsXHJcbiAgICBSRVNQT05TRV9UWVBFID0gXCJyZXNwb25zZV90eXBlXCIsXHJcbiAgICBSRVNQT05TRV9NT0RFID0gXCJyZXNwb25zZV9tb2RlXCIsXHJcbiAgICBHUkFOVF9UWVBFID0gXCJncmFudF90eXBlXCIsXHJcbiAgICBDTEFJTVMgPSBcImNsYWltc1wiLFxyXG4gICAgU0NPUEUgPSBcInNjb3BlXCIsXHJcbiAgICBFUlJPUiA9IFwiZXJyb3JcIixcclxuICAgIEVSUk9SX0RFU0NSSVBUSU9OID0gXCJlcnJvcl9kZXNjcmlwdGlvblwiLFxyXG4gICAgQUNDRVNTX1RPS0VOID0gXCJhY2Nlc3NfdG9rZW5cIixcclxuICAgIElEX1RPS0VOID0gXCJpZF90b2tlblwiLFxyXG4gICAgUkVGUkVTSF9UT0tFTiA9IFwicmVmcmVzaF90b2tlblwiLFxyXG4gICAgRVhQSVJFU19JTiA9IFwiZXhwaXJlc19pblwiLFxyXG4gICAgU1RBVEUgPSBcInN0YXRlXCIsXHJcbiAgICBOT05DRSA9IFwibm9uY2VcIixcclxuICAgIFBST01QVCA9IFwicHJvbXB0XCIsXHJcbiAgICBTRVNTSU9OX1NUQVRFID0gXCJzZXNzaW9uX3N0YXRlXCIsXHJcbiAgICBDTElFTlRfSU5GTyA9IFwiY2xpZW50X2luZm9cIixcclxuICAgIENPREUgPSBcImNvZGVcIixcclxuICAgIENPREVfQ0hBTExFTkdFID0gXCJjb2RlX2NoYWxsZW5nZVwiLFxyXG4gICAgQ09ERV9DSEFMTEVOR0VfTUVUSE9EID0gXCJjb2RlX2NoYWxsZW5nZV9tZXRob2RcIixcclxuICAgIENPREVfVkVSSUZJRVIgPSBcImNvZGVfdmVyaWZpZXJcIixcclxuICAgIENMSUVOVF9SRVFVRVNUX0lEID0gXCJjbGllbnQtcmVxdWVzdC1pZFwiLFxyXG4gICAgWF9DTElFTlRfU0tVID0gXCJ4LWNsaWVudC1TS1VcIixcclxuICAgIFhfQ0xJRU5UX1ZFUiA9IFwieC1jbGllbnQtVmVyXCIsXHJcbiAgICBQT1NUX0xPR09VVF9VUkkgPSBcInBvc3RfbG9nb3V0X3JlZGlyZWN0X3VyaVwiXHJcbn07XHJcblxyXG4vKipcclxuICogSWRUb2tlbiBjbGFpbSBzdHJpbmcgY29uc3RhbnRzXHJcbiAqL1xyXG5leHBvcnQgZW51bSBJZFRva2VuQ2xhaW1OYW1lIHtcclxuICAgIElTU1VFUiA9IFwiaXNzXCIsXHJcbiAgICBPQkpJRCA9IFwib2lkXCIsXHJcbiAgICBTVUJKRUNUID0gXCJzdWJcIixcclxuICAgIFRFTkFOVElEID0gXCJ0aWRcIixcclxuICAgIFZFUlNJT04gPSBcInZlclwiLFxyXG4gICAgUFJFRl9VU0VSTkFNRSA9IFwicHJlZmVycmVkX3VzZXJuYW1lXCIsXHJcbiAgICBOQU1FID0gXCJuYW1lXCIsXHJcbiAgICBOT05DRSA9IFwibm9uY2VcIixcclxuICAgIEVYUElSQVRJT04gPSBcImV4cFwiLFxyXG4gICAgSE9NRV9PQkpJRCA9IFwiaG9tZV9vaWRcIixcclxuICAgIFNFU1NJT05JRCA9IFwic2lkXCIsXHJcbiAgICBDTE9VRF9JTlNUQU5DRV9IT1NUTkFNRSA9IFwiY2xvdWRfaW5zdGFuY2VfaG9zdF9uYW1lXCJcclxufVxyXG5cclxuLyoqXHJcbiAqIHdlIGNvbnNpZGVyZWQgbWFraW5nIHRoaXMgXCJlbnVtXCIgaW4gdGhlIHJlcXVlc3QgaW5zdGVhZCBvZiBzdHJpbmcsIGhvd2V2ZXIgaXQgbG9va3MgbGlrZSB0aGUgYWxsb3dlZCBsaXN0IG9mXHJcbiAqIHByb21wdCB2YWx1ZXMga2VwdCBjaGFuZ2luZyBvdmVyIHBhc3QgY291cGxlIG9mIHllYXJzLiBUaGVyZSBhcmUgc29tZSB1bmRvY3VtZW50ZWQgcHJvbXB0IHZhbHVlcyBmb3Igc29tZVxyXG4gKiBpbnRlcm5hbCBwYXJ0bmVycyB0b28sIGhlbmNlIHRoZSBjaG9pY2Ugb2YgZ2VuZXJpYyBcInN0cmluZ1wiIHR5cGUgaW5zdGVhZCBvZiB0aGUgXCJlbnVtXCJcclxuICovXHJcbmV4cG9ydCBjb25zdCBQcm9tcHRWYWx1ZSA9IHtcclxuICAgIExPR0lOOiBcImxvZ2luXCIsXHJcbiAgICBTRUxFQ1RfQUNDT1VOVDogXCJzZWxlY3RfYWNjb3VudFwiLFxyXG4gICAgQ09OU0VOVDogXCJjb25zZW50XCIsXHJcbiAgICBOT05FOiBcIm5vbmVcIixcclxufTtcclxuXHJcbi8qKlxyXG4gKiBTU08gVHlwZXMgLSBnZW5lcmF0ZWQgdG8gcG9wdWxhdGUgaGludHNcclxuICovXHJcbmV4cG9ydCBlbnVtIFNTT1R5cGVzIHtcclxuICAgIEFDQ09VTlQgPSBcImFjY291bnRcIixcclxuICAgIFNJRCA9IFwic2lkXCIsXHJcbiAgICBMT0dJTl9ISU5UID0gXCJsb2dpbl9oaW50XCIsXHJcbiAgICBJRF9UT0tFTiA9XCJpZF90b2tlblwiLFxyXG4gICAgRE9NQUlOX0hJTlQgPSBcImRvbWFpbl9oaW50XCIsXHJcbiAgICBPUkdBTklaQVRJT05TID0gXCJvcmdhbml6YXRpb25zXCIsXHJcbiAgICBDT05TVU1FUlMgPSBcImNvbnN1bWVyc1wiLFxyXG4gICAgQUNDT1VOVF9JRCA9IFwiYWNjb3VudElkZW50aWZpZXJcIixcclxuICAgIEhPTUVBQ0NPVU5UX0lEID0gXCJob21lQWNjb3VudElkZW50aWZpZXJcIlxyXG59O1xyXG5cclxuLyoqXHJcbiAqIERpc2FsbG93ZWQgZXh0cmEgcXVlcnkgcGFyYW1ldGVycy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBCbGFja2xpc3RlZEVRUGFyYW1zID0gW1xyXG4gICAgU1NPVHlwZXMuU0lELFxyXG4gICAgU1NPVHlwZXMuTE9HSU5fSElOVFxyXG5dO1xyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQWNjZXNzVG9rZW5DYWNoZUl0ZW0gfSBmcm9tIFwiLi9BY2Nlc3NUb2tlbkNhY2hlSXRlbVwiO1xyXG5pbXBvcnQgeyBBY2Nlc3NUb2tlbktleSB9IGZyb20gXCIuL0FjY2Vzc1Rva2VuS2V5XCI7XHJcbmltcG9ydCB7IEFjY2Vzc1Rva2VuVmFsdWUgfSBmcm9tIFwiLi9BY2Nlc3NUb2tlblZhbHVlXCI7XHJcbmltcG9ydCB7IElDYWNoZVN0b3JhZ2UgfSBmcm9tIFwiLi9JQ2FjaGVTdG9yYWdlXCI7XHJcbmltcG9ydCB7IEFjY291bnQgfSBmcm9tIFwiLi4vYXV0aC9BY2NvdW50XCI7XHJcbmltcG9ydCB7IEF1dGhvcml0eSB9IGZyb20gXCIuLi9hdXRoL2F1dGhvcml0eS9BdXRob3JpdHlcIjtcclxuaW1wb3J0IHsgU2VydmVyQ29kZVJlcXVlc3RQYXJhbWV0ZXJzIH0gZnJvbSBcIi4uL3NlcnZlci9TZXJ2ZXJDb2RlUmVxdWVzdFBhcmFtZXRlcnNcIjtcclxuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSBcIi4uL2Vycm9yL0NsaWVudEF1dGhFcnJvclwiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBUZW1wb3JhcnlDYWNoZUtleXMsIENvbnN0YW50cyB9IGZyb20gXCIuLi91dGlscy9Db25zdGFudHNcIjtcclxuXHJcbi8qKlxyXG4gKiBUaGUgQ2FjaGVIZWxwZXJzIGNsYXNzIGNvbnRhaW5zIGEgc2V0IG9mIGhlbHBlciBmdW5jdGlvbnMgdXNlZCBieSB0aGUgbW9kdWxlIHRvIG1hbmFnZSBjYWNoZSBpdGVtcy5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBDYWNoZUhlbHBlcnMge1xyXG5cclxuICAgIC8vIFN0b3JhZ2UgaW50ZXJmYWNlXHJcbiAgICBwcml2YXRlIGNhY2hlU3RvcmFnZTogSUNhY2hlU3RvcmFnZTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihjYWNoZUltcGw6IElDYWNoZVN0b3JhZ2UpIHtcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZSA9IGNhY2hlSW1wbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSBhY3F1aXJlVG9rZW5BY2NvdW50S2V5IHRvIGNhY2hlIGFjY291bnQgb2JqZWN0XHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqL1xyXG4gICAgZ2VuZXJhdGVBY3F1aXJlVG9rZW5BY2NvdW50S2V5KGFjY291bnRJZDogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gYCR7VGVtcG9yYXJ5Q2FjaGVLZXlzLkFDUVVJUkVfVE9LRU5fQUNDT1VOVH0ke0NvbnN0YW50cy5SRVNPVVJDRV9ERUxJTX0ke2FjY291bnRJZH1gO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGF1dGhvcml0eUtleSB0byBjYWNoZSBhdXRob3JpdHlcclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICBnZW5lcmF0ZUF1dGhvcml0eUtleShzdGF0ZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gYCR7VGVtcG9yYXJ5Q2FjaGVLZXlzLkFVVEhPUklUWX0ke0NvbnN0YW50cy5SRVNPVVJDRV9ERUxJTX0ke3N0YXRlfWA7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgTm9uY2Uga2V5IHRvIGNhY2hlIG5vbmNlXHJcbiAgICAgKiBAcGFyYW0gc3RhdGUgXHJcbiAgICAgKi9cclxuICAgIGdlbmVyYXRlTm9uY2VLZXkoc3RhdGU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGAke1RlbXBvcmFyeUNhY2hlS2V5cy5OT05DRV9JRFRPS0VOfSR7Q29uc3RhbnRzLlJFU09VUkNFX0RFTElNfSR7c3RhdGV9YDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGNhY2hla2V5cyBmb3IgYW5kIHN0b3JlcyB0aGUgYWNjb3VudCBpbmZvcm1hdGlvbiBpbiBjYWNoZVxyXG4gICAgICogQHBhcmFtIGFjY291bnRcclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICBzZXRBY2NvdW50Q2FjaGUoYWNjb3VudDogQWNjb3VudCk6IHZvaWQge1xyXG4gICAgICAgIC8vIENhY2hlIGFjcXVpcmVUb2tlbkFjY291bnRLZXlcclxuICAgICAgICBjb25zdCBhY2NvdW50SWQgPSBhY2NvdW50ICYmIGFjY291bnQuaG9tZUFjY291bnRJZGVudGlmaWVyID8gYWNjb3VudC5ob21lQWNjb3VudElkZW50aWZpZXIgOiBDb25zdGFudHMuTk9fQUNDT1VOVDtcclxuXHJcbiAgICAgICAgY29uc3QgYWNxdWlyZVRva2VuQWNjb3VudEtleSA9IHRoaXMuZ2VuZXJhdGVBY3F1aXJlVG9rZW5BY2NvdW50S2V5KGFjY291bnRJZCk7XHJcbiAgICAgICAgdGhpcy5jYWNoZVN0b3JhZ2Uuc2V0SXRlbShhY3F1aXJlVG9rZW5BY2NvdW50S2V5LCBKU09OLnN0cmluZ2lmeShhY2NvdW50KSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBjYWNoZUtleSBmb3IgYW5kIHN0b3JlcyB0aGUgYXV0aG9yaXR5IGluZm9ybWF0aW9uIGluIGNhY2hlXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlcclxuICAgICAqL1xyXG4gICAgc2V0QXV0aG9yaXR5Q2FjaGUoYXV0aG9yaXR5OiBBdXRob3JpdHksIHN0YXRlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICAvLyBDYWNoZSBhdXRob3JpdHlLZXlcclxuICAgICAgICBjb25zdCBhdXRob3JpdHlLZXkgPSB0aGlzLmdlbmVyYXRlQXV0aG9yaXR5S2V5KHN0YXRlKTtcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5zZXRJdGVtKGF1dGhvcml0eUtleSwgYXV0aG9yaXR5LmNhbm9uaWNhbEF1dGhvcml0eSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIGFjY291bnQsIGF1dGhvcml0eSwgYW5kIHN0YXRlIGluIGNhY2hlXHJcbiAgICAgKiBAcGFyYW0gc2VydmVyQXV0aGVudGljYXRpb25SZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudFxyXG4gICAgICovXHJcbiAgICB1cGRhdGVDYWNoZUVudHJpZXMoc2VydmVyQXV0aGVudGljYXRpb25SZXF1ZXN0OiBTZXJ2ZXJDb2RlUmVxdWVzdFBhcmFtZXRlcnMsIGFjY291bnQ6IEFjY291bnQpOiB2b2lkIHtcclxuICAgICAgICAvLyBDYWNoZSBhY2NvdW50IGFuZCBzdGF0ZVxyXG4gICAgICAgIGlmIChhY2NvdW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0QWNjb3VudENhY2hlKGFjY291bnQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2FjaGUgdGhlIHJlcXVlc3Qgc3RhdGVcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5zZXRJdGVtKFRlbXBvcmFyeUNhY2hlS2V5cy5SRVFVRVNUX1NUQVRFLCBzZXJ2ZXJBdXRoZW50aWNhdGlvblJlcXVlc3Quc3RhdGUpO1xyXG5cclxuICAgICAgICAvLyBDYWNoZSB0aGUgbm9uY2VcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5zZXRJdGVtKHRoaXMuZ2VuZXJhdGVOb25jZUtleShzZXJ2ZXJBdXRoZW50aWNhdGlvblJlcXVlc3Quc3RhdGUpLCBzZXJ2ZXJBdXRoZW50aWNhdGlvblJlcXVlc3Qubm9uY2UpO1xyXG5cclxuICAgICAgICAvLyBDYWNoZSBhdXRob3JpdHlLZXlcclxuICAgICAgICB0aGlzLnNldEF1dGhvcml0eUNhY2hlKHNlcnZlckF1dGhlbnRpY2F0aW9uUmVxdWVzdC5hdXRob3JpdHlJbnN0YW5jZSwgc2VydmVyQXV0aGVudGljYXRpb25SZXF1ZXN0LnN0YXRlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlc2V0IGFsbCB0ZW1wb3JhcnkgY2FjaGUgaXRlbXNcclxuICAgICAqIEBwYXJhbSBzdGF0ZSBcclxuICAgICAqL1xyXG4gICAgcmVzZXRUZW1wQ2FjaGVJdGVtcyhzdGF0ZT86IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIC8vIGNoZWNrIHN0YXRlIGFuZCByZW1vdmUgYXNzb2NpYXRlZCBjYWNoZSBpdGVtc1xyXG4gICAgICAgIHRoaXMuY2FjaGVTdG9yYWdlLmdldEtleXMoKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghU3RyaW5nVXRpbHMuaXNFbXB0eShzdGF0ZSkgJiYga2V5LmluZGV4T2Yoc3RhdGUpICE9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc3BsaXRLZXkgPSBrZXkuc3BsaXQoQ29uc3RhbnRzLlJFU09VUkNFX0RFTElNKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGtleVN0YXRlID0gc3BsaXRLZXkubGVuZ3RoID4gMSA/IHNwbGl0S2V5W3NwbGl0S2V5Lmxlbmd0aC0xXTogbnVsbDtcclxuICAgICAgICAgICAgICAgIGlmIChrZXlTdGF0ZSA9PT0gc3RhdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBkZWxldGUgZ2VuZXJpYyBpbnRlcmFjdGl2ZSByZXF1ZXN0IHBhcmFtZXRlcnNcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5yZW1vdmVJdGVtKFRlbXBvcmFyeUNhY2hlS2V5cy5SRVFVRVNUX1NUQVRFKTtcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5yZW1vdmVJdGVtKFRlbXBvcmFyeUNhY2hlS2V5cy5SRVFVRVNUX1BBUkFNUyk7XHJcbiAgICAgICAgdGhpcy5jYWNoZVN0b3JhZ2UucmVtb3ZlSXRlbShUZW1wb3JhcnlDYWNoZUtleXMuT1JJR0lOX1VSSSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgYWxsIGFjY2VzcyB0b2tlbnMgaW4gdGhlIGNhY2hlXHJcbiAgICAgKiBAcGFyYW0gY2xpZW50SWRcclxuICAgICAqIEBwYXJhbSBob21lQWNjb3VudElkZW50aWZpZXJcclxuICAgICAqL1xyXG4gICAgZ2V0QWxsQWNjZXNzVG9rZW5zKGNsaWVudElkOiBzdHJpbmcsIGF1dGhvcml0eTogc3RyaW5nLCByZXNvdXJjZT86IHN0cmluZywgaG9tZUFjY291bnRJZGVudGlmaWVyPzogc3RyaW5nKTogQXJyYXk8QWNjZXNzVG9rZW5DYWNoZUl0ZW0+IHtcclxuICAgICAgICBjb25zdCByZXN1bHRzID0gdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0S2V5cygpLnJlZHVjZTxBcnJheTxBY2Nlc3NUb2tlbkNhY2hlSXRlbT4+KCh0b2tlbnMsIGtleSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBrZXlNYXRjaGVzID0ga2V5Lm1hdGNoKGNsaWVudElkKSAmJiBrZXkubWF0Y2goYXV0aG9yaXR5KSAmJiBrZXkubWF0Y2gocmVzb3VyY2UpICYmIGtleS5tYXRjaChob21lQWNjb3VudElkZW50aWZpZXIpO1xyXG4gICAgICAgICAgICBpZiAoa2V5TWF0Y2hlcykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmNhY2hlU3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJzZUF0S2V5ID0gSlNPTi5wYXJzZShrZXkpIGFzIEFjY2Vzc1Rva2VuS2V5O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGVja0ZvckV4YWN0S2V5TWF0Y2gocGFyc2VBdEtleSwgY2xpZW50SWQsIGF1dGhvcml0eSwgcmVzb3VyY2UsIGhvbWVBY2NvdW50SWRlbnRpZmllcikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0FjY2Vzc1Rva2VuQ2FjaGVJdGVtID0gbmV3IEFjY2Vzc1Rva2VuQ2FjaGVJdGVtKHBhcnNlQXRLZXksIEpTT04ucGFyc2UodmFsdWUpIGFzIEFjY2Vzc1Rva2VuVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRva2Vucy5jb25jYXQoWyBuZXdBY2Nlc3NUb2tlbkNhY2hlSXRlbSBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUNhY2hlUGFyc2VFcnJvcihrZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdG9rZW5zO1xyXG4gICAgICAgIH0sIFtdKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmUgYWxsIGFjY2VzcyB0b2tlbnMgaW4gdGhlIGNhY2hlXHJcbiAgICAgKiBAcGFyYW0gY2xpZW50SWRcclxuICAgICAqIEBwYXJhbSBob21lQWNjb3VudElkZW50aWZpZXJcclxuICAgICAqL1xyXG4gICAgcmVtb3ZlQWxsQWNjZXNzVG9rZW5zKGNsaWVudElkOiBzdHJpbmcsIGF1dGhvcml0eTogc3RyaW5nLCByZXNvdXJjZT86IHN0cmluZywgaG9tZUFjY291bnRJZGVudGlmaWVyPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0S2V5cygpLmZvckVhY2goKGtleSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBrZXlNYXRjaGVzID0ga2V5Lm1hdGNoKGNsaWVudElkKSAmJiBrZXkubWF0Y2goYXV0aG9yaXR5KSAmJiBrZXkubWF0Y2gocmVzb3VyY2UpICYmIGtleS5tYXRjaChob21lQWNjb3VudElkZW50aWZpZXIpO1xyXG4gICAgICAgICAgICBpZiAoa2V5TWF0Y2hlcykge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJzZUF0S2V5ID0gSlNPTi5wYXJzZShrZXkpIGFzIEFjY2Vzc1Rva2VuS2V5O1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrRm9yRXhhY3RLZXlNYXRjaChwYXJzZUF0S2V5LCBjbGllbnRJZCwgYXV0aG9yaXR5LCByZXNvdXJjZSwgaG9tZUFjY291bnRJZGVudGlmaWVyKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVDYWNoZVBhcnNlRXJyb3Ioa2V5KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIHRoYXQgYW55IHBhcmFtZXRlcnMgYXJlIGV4YWN0IG1hdGNoZXMgZm9yIGtleSB2YWx1ZSwgc2luY2Uga2V5Lm1hdGNoIGluIHRoZSBhYm92ZSBmdW5jdGlvbnMgb25seSBkbyBjb250YWlucyBjaGVja3MsIG5vdCBleGFjdCBtYXRjaGVzLlxyXG4gICAgICogQHBhcmFtIGF0S2V5IFxyXG4gICAgICogQHBhcmFtIGNsaWVudElkIFxyXG4gICAgICogQHBhcmFtIGF1dGhvcml0eSBcclxuICAgICAqIEBwYXJhbSByZXNvdXJjZSBcclxuICAgICAqIEBwYXJhbSBob21lQWNjb3VudElkZW50aWZpZXIgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2hlY2tGb3JFeGFjdEtleU1hdGNoKGF0S2V5OiBBY2Nlc3NUb2tlbktleSwgY2xpZW50SWQ6IHN0cmluZywgYXV0aG9yaXR5OiBzdHJpbmcsIHJlc291cmNlPzogc3RyaW5nLCBob21lQWNjb3VudElkZW50aWZpZXI/OiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBoYXNDbGllbnRJZCA9IChhdEtleS5jbGllbnRJZCA9PT0gY2xpZW50SWQpO1xyXG4gICAgICAgIC8vIElmIGFueSBpbnB1dHMgYXJlIGVtcHR5LCByZXR1cm4gdHJ1ZSBzbyB3ZSBkb24ndCBmYWlsIHRoZSBjaGVjay5cclxuICAgICAgICBjb25zdCBoYXNBdXRob3JpdHlVcmkgPSBTdHJpbmdVdGlscy5pc0VtcHR5KGF1dGhvcml0eSkgfHwgKGF0S2V5LmF1dGhvcml0eSA9PT0gYXV0aG9yaXR5KTtcclxuICAgICAgICBjb25zdCBoYXNSZXNvdXJjZVVyaSA9IFN0cmluZ1V0aWxzLmlzRW1wdHkocmVzb3VyY2UpIHx8IChhdEtleS5yZXNvdXJjZSA9PT0gcmVzb3VyY2UpO1xyXG4gICAgICAgIGNvbnN0IGhhc0hvbWVBY2NvdW50SWQgPSBTdHJpbmdVdGlscy5pc0VtcHR5KGhvbWVBY2NvdW50SWRlbnRpZmllcikgfHwgKGF0S2V5LmhvbWVBY2NvdW50SWRlbnRpZmllciA9PT0gaG9tZUFjY291bnRJZGVudGlmaWVyKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGhhc0NsaWVudElkICYmIGhhc0F1dGhvcml0eVVyaSAmJiBoYXNSZXNvdXJjZVVyaSAmJiBoYXNIb21lQWNjb3VudElkO1xyXG4gICAgfVxyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyBDbGllbnRJbmZvIH0gZnJvbSBcIi4vQ2xpZW50SW5mb1wiO1xyXG5pbXBvcnQgeyBJZFRva2VuIH0gZnJvbSBcIi4vSWRUb2tlblwiO1xyXG5pbXBvcnQgeyBJZFRva2VuQ2xhaW1zIH0gZnJvbSBcIi4vSWRUb2tlbkNsYWltc1wiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBJQ3J5cHRvIH0gZnJvbSBcIi4uL2NyeXB0by9JQ3J5cHRvXCI7XHJcblxyXG4vKipcclxuICogYWNjb3VudElkZW50aWZpZXIgICAgICAgY29tYmluYXRpb24gb2YgaWRUb2tlbi51aWQgYW5kIGlkVG9rZW4udXRpZFxyXG4gKiBob21lQWNjb3VudElkZW50aWZpZXIgICBjb21iaW5hdGlvbiBvZiBjbGllbnRJbmZvLnVpZCBhbmQgY2xpZW50SW5mby51dGlkXHJcbiAqIHVzZXJOYW1lICAgICAgICAgICAgICAgIGlkVG9rZW4ucHJlZmVycmVkX3VzZXJuYW1lXHJcbiAqIG5hbWUgICAgICAgICAgICAgICAgICAgIGlkVG9rZW4ubmFtZVxyXG4gKiBpZFRva2VuICAgICAgICAgICAgICAgICBpZFRva2VuXHJcbiAqIHNpZCAgICAgICAgICAgICAgICAgICAgIGlkVG9rZW4uc2lkIC0gc2Vzc2lvbiBpZGVudGlmaWVyXHJcbiAqIGVudmlyb25tZW50ICAgICAgICAgICAgIGlkdG9rZW4uaXNzdWVyICh0aGUgYXV0aG9yaXR5IHRoYXQgaXNzdWVzIHRoZSB0b2tlbilcclxuICovXHJcbmV4cG9ydCBjbGFzcyBBY2NvdW50IHtcclxuXHJcbiAgICBhY2NvdW50SWRlbnRpZmllcjogc3RyaW5nO1xyXG4gICAgaG9tZUFjY291bnRJZGVudGlmaWVyOiBzdHJpbmc7XHJcbiAgICB1c2VyTmFtZTogc3RyaW5nO1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgaWRUb2tlbjogc3RyaW5nO1xyXG4gICAgaWRUb2tlbkNsYWltczogSWRUb2tlbkNsYWltcztcclxuICAgIHNpZDogc3RyaW5nO1xyXG4gICAgZW52aXJvbm1lbnQ6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gQWNjb3VudCBPYmplY3RcclxuICAgICAqIEBwcmFyYW0gYWNjb3VudElkZW50aWZpZXJcclxuICAgICAqIEBwYXJhbSBob21lQWNjb3VudElkZW50aWZpZXJcclxuICAgICAqIEBwYXJhbSB1c2VyTmFtZVxyXG4gICAgICogQHBhcmFtIG5hbWVcclxuICAgICAqIEBwYXJhbSBpZFRva2VuXHJcbiAgICAgKiBAcGFyYW0gc2lkXHJcbiAgICAgKiBAcGFyYW0gZW52aXJvbm1lbnRcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoYWNjb3VudElkZW50aWZpZXI6IHN0cmluZywgaG9tZUFjY291bnRJZGVudGlmaWVyOiBzdHJpbmcsIGlkVG9rZW5DbGFpbXM6IElkVG9rZW5DbGFpbXMsIHJhd0lkVG9rZW46IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuYWNjb3VudElkZW50aWZpZXIgPSBhY2NvdW50SWRlbnRpZmllcjtcclxuICAgICAgICB0aGlzLmhvbWVBY2NvdW50SWRlbnRpZmllciA9IGhvbWVBY2NvdW50SWRlbnRpZmllcjtcclxuICAgICAgICB0aGlzLnVzZXJOYW1lID0gaWRUb2tlbkNsYWltcy5wcmVmZXJyZWRfdXNlcm5hbWU7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gaWRUb2tlbkNsYWltcy5uYW1lO1xyXG4gICAgICAgIC8vIHdpbGwgYmUgZGVwcmVjYXRlZCBzb29uXHJcbiAgICAgICAgdGhpcy5pZFRva2VuID0gcmF3SWRUb2tlbjtcclxuICAgICAgICB0aGlzLmlkVG9rZW5DbGFpbXMgPSBpZFRva2VuQ2xhaW1zO1xyXG4gICAgICAgIHRoaXMuc2lkID0gaWRUb2tlbkNsYWltcy5zaWQ7XHJcbiAgICAgICAgdGhpcy5lbnZpcm9ubWVudCA9IGlkVG9rZW5DbGFpbXMuaXNzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIGlkVG9rZW5cclxuICAgICAqIEBwYXJhbSBjbGllbnRJbmZvXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVBY2NvdW50KGlkVG9rZW46IElkVG9rZW4sIGNsaWVudEluZm86IENsaWVudEluZm8sIGNyeXB0bzogSUNyeXB0byk6IEFjY291bnQge1xyXG4gICAgICAgIC8vIGNyZWF0ZSBhY2NvdW50SWRlbnRpZmllclxyXG4gICAgICAgIGNvbnN0IGFjY291bnRJZGVudGlmaWVyOiBzdHJpbmcgPSBpZFRva2VuLmNsYWltcy5vaWQgfHwgIGlkVG9rZW4uY2xhaW1zLnN1YjtcclxuXHJcbiAgICAgICAgLy8gY3JlYXRlIGhvbWVBY2NvdW50SWRlbnRpZmllclxyXG4gICAgICAgIGNvbnN0IHVpZDogc3RyaW5nID0gY2xpZW50SW5mbyA/IGNsaWVudEluZm8udWlkIDogXCJcIjtcclxuICAgICAgICBjb25zdCB1dGlkOiBzdHJpbmcgPSBjbGllbnRJbmZvID8gY2xpZW50SW5mby51dGlkIDogXCJcIjtcclxuXHJcbiAgICAgICAgbGV0IGhvbWVBY2NvdW50SWRlbnRpZmllcjogc3RyaW5nO1xyXG4gICAgICAgIGlmICghU3RyaW5nVXRpbHMuaXNFbXB0eSh1aWQpICYmICFTdHJpbmdVdGlscy5pc0VtcHR5KHV0aWQpKSB7XHJcbiAgICAgICAgICAgIGhvbWVBY2NvdW50SWRlbnRpZmllciA9IGNyeXB0by5iYXNlNjRFbmNvZGUodWlkKSArIFwiLlwiICsgY3J5cHRvLmJhc2U2NEVuY29kZSh1dGlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBY2NvdW50KGFjY291bnRJZGVudGlmaWVyLCBob21lQWNjb3VudElkZW50aWZpZXIsIGlkVG9rZW4uY2xhaW1zLCBpZFRva2VuLnJhd0lkVG9rZW4pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXRpbHMgZnVuY3Rpb24gdG8gY29tcGFyZSB0d28gQWNjb3VudCBvYmplY3RzIC0gdXNlZCB0byBjaGVjayBpZiB0aGUgc2FtZSB1c2VyIGFjY291bnQgaXMgbG9nZ2VkIGluXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGExOiBBY2NvdW50IG9iamVjdFxyXG4gICAgICogQHBhcmFtIGEyOiBBY2NvdW50IG9iamVjdFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY29tcGFyZUFjY291bnRzKGExOiBBY2NvdW50LCBhMjogQWNjb3VudCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmICghKGExICYmIGExLmhvbWVBY2NvdW50SWRlbnRpZmllcikgfHwgIShhMiAmJiBhMi5ob21lQWNjb3VudElkZW50aWZpZXIpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGExLmhvbWVBY2NvdW50SWRlbnRpZmllciA9PT0gYTIuaG9tZUFjY291bnRJZGVudGlmaWVyO1xyXG4gICAgfVxyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyBJZFRva2VuQ2xhaW1zIH0gZnJvbSBcIi4vSWRUb2tlbkNsYWltc1wiO1xyXG5pbXBvcnQgeyBEZWNvZGVkSnd0IH0gZnJvbSBcIi4vRGVjb2RlZEp3dFwiO1xyXG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yXCI7XHJcbmltcG9ydCB7IFN0cmluZ1V0aWxzIH0gZnJvbSBcIi4uL3V0aWxzL1N0cmluZ1V0aWxzXCI7XHJcbmltcG9ydCB7IElDcnlwdG8gfSBmcm9tIFwiLi4vY3J5cHRvL0lDcnlwdG9cIjtcclxuXHJcbi8qKlxyXG4gKiBJZCBUb2tlbiByZXByZXNlbnRhdGlvbiBjbGFzcy4gUGFyc2VzIGlkIHRva2VuIHN0cmluZyBhbmQgZ2VuZXJhdGVzIGNsYWltcyBvYmplY3QuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSWRUb2tlbiB7XHJcblxyXG4gICAgLy8gUmF3IElkIFRva2VuIHN0cmluZ1xyXG4gICAgcmF3SWRUb2tlbjogc3RyaW5nO1xyXG4gICAgLy8gQ2xhaW1zIGluc2lkZSBJZCBUb2tlblxyXG4gICAgY2xhaW1zOiBJZFRva2VuQ2xhaW1zO1xyXG4gICAgY29uc3RydWN0b3IocmF3SWRUb2tlbjogc3RyaW5nLCBjcnlwdG86IElDcnlwdG8pIHtcclxuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShyYXdJZFRva2VuKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlSWRUb2tlbk51bGxPckVtcHR5RXJyb3IocmF3SWRUb2tlbik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnJhd0lkVG9rZW4gPSByYXdJZFRva2VuO1xyXG4gICAgICAgIHRoaXMuY2xhaW1zID0gSWRUb2tlbi5leHRyYWN0SWRUb2tlbihyYXdJZFRva2VuLCBjcnlwdG8pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXh0cmFjdCBJZFRva2VuIGJ5IGRlY29kaW5nIHRoZSBSQVdJZFRva2VuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGVuY29kZWRJZFRva2VuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBleHRyYWN0SWRUb2tlbihlbmNvZGVkSWRUb2tlbjogc3RyaW5nLCBjcnlwdG86IElDcnlwdG8pOiBJZFRva2VuQ2xhaW1zIHtcclxuICAgICAgICAvLyBpZCB0b2tlbiB3aWxsIGJlIGRlY29kZWQgdG8gZ2V0IHRoZSB1c2VybmFtZVxyXG4gICAgICAgIGNvbnN0IGRlY29kZWRUb2tlbjogRGVjb2RlZEp3dCA9IFN0cmluZ1V0aWxzLmRlY29kZUp3dChlbmNvZGVkSWRUb2tlbik7XHJcbiAgICAgICAgaWYgKCFkZWNvZGVkVG9rZW4pIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJhc2U2NElkVG9rZW5QYXlsb2FkID0gZGVjb2RlZFRva2VuLkpXU1BheWxvYWQ7XHJcbiAgICAgICAgICAgIC8vIGJhc2U2NERlY29kZSgpIHNob3VsZCB0aHJvdyBhbiBlcnJvciBpZiB0aGVyZSBpcyBhbiBpc3N1ZVxyXG4gICAgICAgICAgICBjb25zdCBiYXNlNjREZWNvZGVkID0gY3J5cHRvLmJhc2U2NERlY29kZShiYXNlNjRJZFRva2VuUGF5bG9hZCk7XHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGJhc2U2NERlY29kZWQpIGFzIElkVG9rZW5DbGFpbXM7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVJZFRva2VuUGFyc2luZ0Vycm9yKEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSBcIi4uL2Vycm9yL0NsaWVudEF1dGhFcnJvclwiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBJQ3J5cHRvIH0gZnJvbSBcIi4uL2NyeXB0by9JQ3J5cHRvXCI7XHJcblxyXG4vKipcclxuICogQ2xpZW50IGluZm8gb2JqZWN0IHdoaWNoIGNvbnNpc3RzIG9mIHR3byBJRHMuIE5lZWQgdG8gYWRkIG1vcmUgaW5mbyBoZXJlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ2xpZW50SW5mbyA9IHtcclxuICAgIHVpZDogc3RyaW5nLFxyXG4gICAgdXRpZDogc3RyaW5nXHJcbn07XHJcblxyXG4vKipcclxuICogRnVuY3Rpb24gdG8gYnVpbGQgYSBjbGllbnQgaW5mbyBvYmplY3RcclxuICogQHBhcmFtIHJhd0NsaWVudEluZm8gXHJcbiAqIEBwYXJhbSBjcnlwdG8gXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRDbGllbnRJbmZvKHJhd0NsaWVudEluZm86IHN0cmluZywgY3J5cHRvOiBJQ3J5cHRvKTogQ2xpZW50SW5mbyB7XHJcbiAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShyYXdDbGllbnRJbmZvKSkge1xyXG4gICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVDbGllbnRJbmZvRW1wdHlFcnJvcihyYXdDbGllbnRJbmZvKTtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGRlY29kZWRDbGllbnRJbmZvOiBzdHJpbmcgPSBjcnlwdG8uYmFzZTY0RGVjb2RlKHJhd0NsaWVudEluZm8pO1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRlY29kZWRDbGllbnRJbmZvKSBhcyBDbGllbnRJbmZvO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVDbGllbnRJbmZvRGVjb2RpbmdFcnJvcihlKTtcclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgTW9kdWxlQ29uZmlndXJhdGlvbiwgYnVpbGRNb2R1bGVDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uL2NvbmZpZy9Nb2R1bGVDb25maWd1cmF0aW9uXCI7XHJcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycyB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L0F1dGhlbnRpY2F0aW9uUGFyYW1ldGVyc1wiO1xyXG5pbXBvcnQgeyBUb2tlblJlbmV3UGFyYW1ldGVycyB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L1Rva2VuUmVuZXdQYXJhbWV0ZXJzXCI7XHJcbmltcG9ydCB7IENvZGVSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXNwb25zZS9Db2RlUmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgVG9rZW5SZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXNwb25zZS9Ub2tlblJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IElDYWNoZVN0b3JhZ2UgfSBmcm9tIFwiLi4vLi4vY2FjaGUvSUNhY2hlU3RvcmFnZVwiO1xyXG5pbXBvcnQgeyBDYWNoZUhlbHBlcnMgfSBmcm9tIFwiLi4vLi4vY2FjaGUvQ2FjaGVIZWxwZXJzXCI7XHJcbmltcG9ydCB7IElOZXR3b3JrTW9kdWxlIH0gZnJvbSBcIi4uLy4uL25ldHdvcmsvSU5ldHdvcmtNb2R1bGVcIjtcclxuaW1wb3J0IHsgSUNyeXB0byB9IGZyb20gXCIuLi8uLi9jcnlwdG8vSUNyeXB0b1wiO1xyXG5pbXBvcnQgeyBBY2NvdW50IH0gZnJvbSBcIi4uLy4uL2F1dGgvQWNjb3VudFwiO1xyXG5pbXBvcnQgeyBBdXRob3JpdHkgfSBmcm9tIFwiLi4vLi4vYXV0aC9hdXRob3JpdHkvQXV0aG9yaXR5XCI7XHJcbmltcG9ydCB7IElkVG9rZW4gfSBmcm9tIFwiLi4vLi4vYXV0aC9JZFRva2VuXCI7XHJcbmltcG9ydCB7IGJ1aWxkQ2xpZW50SW5mbyB9IGZyb20gXCIuLi8uLi9hdXRoL0NsaWVudEluZm9cIjtcclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvU3RyaW5nVXRpbHNcIjtcclxuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIi4uLy4uL2xvZ2dlci9Mb2dnZXJcIjtcclxuaW1wb3J0IHsgUGVyc2lzdGVudENhY2hlS2V5cyB9IGZyb20gXCIuLi8uLi91dGlscy9Db25zdGFudHNcIjtcclxuXHJcbi8qKlxyXG4gKiBAaGlkZGVuXHJcbiAqIEBpZ25vcmVcclxuICogRGF0YSB0eXBlIHRvIGhvbGQgaW5mb3JtYXRpb24gYWJvdXQgc3RhdGUgcmV0dXJuZWQgZnJvbSB0aGUgc2VydmVyXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSZXNwb25zZVN0YXRlSW5mbyA9IHtcclxuICAgIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBzdGF0ZU1hdGNoOiBib29sZWFuO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEF1dGhNb2R1bGUgY2xhc3NcclxuICogXHJcbiAqIFBhcmVudCBvYmplY3QgaW5zdGFuY2Ugd2hpY2ggd2lsbCBjb25zdHJ1Y3QgcmVxdWVzdHMgdG8gc2VuZCB0byBhbmQgaGFuZGxlIHJlc3BvbnNlcyBmcm9tIHRoZSBNaWNyb3NvZnQgU1RTIHVzaW5nIHRoZSBhdXRob3JpemF0aW9uIGNvZGUgZmxvdy5cclxuICogXHJcbiAqL1xyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQXV0aE1vZHVsZSB7XHJcblxyXG4gICAgLy8gTG9nZ2VyIG9iamVjdFxyXG4gICAgcHVibGljIGxvZ2dlcjogTG9nZ2VyO1xyXG5cclxuICAgIC8vIEFwcGxpY2F0aW9uIGNvbmZpZ1xyXG4gICAgcHJpdmF0ZSBjb25maWc6IE1vZHVsZUNvbmZpZ3VyYXRpb247XHJcbiAgICBcclxuICAgIC8vIENyeXB0byBJbnRlcmZhY2VcclxuICAgIHByb3RlY3RlZCBjcnlwdG9PYmo6IElDcnlwdG87XHJcblxyXG4gICAgLy8gU3RvcmFnZSBJbnRlcmZhY2VcclxuICAgIHByb3RlY3RlZCBjYWNoZVN0b3JhZ2U6IElDYWNoZVN0b3JhZ2U7XHJcblxyXG4gICAgLy8gTmV0d29yayBJbnRlcmZhY2VcclxuICAgIHByb3RlY3RlZCBuZXR3b3JrQ2xpZW50OiBJTmV0d29ya01vZHVsZTtcclxuXHJcbiAgICAvLyBIZWxwZXIgQVBJIG9iamVjdCBmb3IgcnVubmluZyBjYWNoZSBmdW5jdGlvbnNcclxuICAgIHByb3RlY3RlZCBjYWNoZU1hbmFnZXI6IENhY2hlSGVscGVycztcclxuXHJcbiAgICAvLyBBY2NvdW50IG9iamVjdFxyXG4gICAgcHJvdGVjdGVkIGFjY291bnQ6IEFjY291bnQ7XHJcblxyXG4gICAgLy8gRGVmYXVsdCBhdXRob3JpdHkgb2JqZWN0XHJcbiAgICBwcm90ZWN0ZWQgZGVmYXVsdEF1dGhvcml0eUluc3RhbmNlOiBBdXRob3JpdHk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvbjogTW9kdWxlQ29uZmlndXJhdGlvbikge1xyXG4gICAgICAgIC8vIFNldCB0aGUgY29uZmlndXJhdGlvblxyXG4gICAgICAgIHRoaXMuY29uZmlnID0gYnVpbGRNb2R1bGVDb25maWd1cmF0aW9uKGNvbmZpZ3VyYXRpb24pO1xyXG5cclxuICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBsb2dnZXJcclxuICAgICAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25maWcubG9nZ2VyT3B0aW9ucyk7XHJcblxyXG4gICAgICAgIC8vIEluaXRpYWxpemUgY3J5cHRvXHJcbiAgICAgICAgdGhpcy5jcnlwdG9PYmogPSB0aGlzLmNvbmZpZy5jcnlwdG9JbnRlcmZhY2U7XHJcblxyXG4gICAgICAgIC8vIEluaXRpYWxpemUgc3RvcmFnZSBpbnRlcmZhY2VcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZSA9IHRoaXMuY29uZmlnLnN0b3JhZ2VJbnRlcmZhY2U7XHJcblxyXG4gICAgICAgIC8vIEluaXRpYWxpemUgc3RvcmFnZSBoZWxwZXIgb2JqZWN0XHJcbiAgICAgICAgdGhpcy5jYWNoZU1hbmFnZXIgPSBuZXcgQ2FjaGVIZWxwZXJzKHRoaXMuY2FjaGVTdG9yYWdlKTtcclxuXHJcbiAgICAgICAgLy8gU2V0IHRoZSBuZXR3b3JrIGludGVyZmFjZVxyXG4gICAgICAgIHRoaXMubmV0d29ya0NsaWVudCA9IHRoaXMuY29uZmlnLm5ldHdvcmtJbnRlcmZhY2U7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gI3JlZ2lvbiBBYnN0cmFjdCBGdW5jdGlvbnNcclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSB1cmwgZm9yIGxvZ2dpbmcgaW4gYSB1c2VyLiBUaGlzIHdpbGwgYnkgZGVmYXVsdCBhcHBlbmQgdGhlIGNsaWVudCBpZCB0byB0aGUgbGlzdCBvZiBzY29wZXMsIFxyXG4gICAgICogYWxsb3dpbmcgeW91IHRvIHJldHJpZXZlIGFuIGlkIHRva2VuIGluIHRoZSBzdWJzZXF1ZW50IGNvZGUgZXhjaGFuZ2UuIEFsc28gcGVyZm9ybXMgdmFsaWRhdGlvbiBvZiB0aGUgcmVxdWVzdCBwYXJhbWV0ZXJzLlxyXG4gICAgICogSW5jbHVkaW5nIGFueSBTU08gcGFyYW1ldGVycyAoYWNjb3VudCwgc2lkLCBsb2dpbl9oaW50KSB3aWxsIHNob3J0IGNpcmN1aXQgdGhlIGF1dGhlbnRpY2F0aW9uIGFuZCBhbGxvdyB5b3UgdG8gcmV0cmlldmUgYSBjb2RlIHdpdGhvdXQgaW50ZXJhY3Rpb24uXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdCBcclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgYXN5bmMgY3JlYXRlTG9naW5VcmwocmVxdWVzdDogQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzKTogUHJvbWlzZTxzdHJpbmc+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIHVybCBmb3IgbG9nZ2luZyBpbiBhIHVzZXIuIEFsc28gcGVyZm9ybXMgdmFsaWRhdGlvbiBvZiB0aGUgcmVxdWVzdCBwYXJhbWV0ZXJzLlxyXG4gICAgICogSW5jbHVkaW5nIGFueSBTU08gcGFyYW1ldGVycyAoYWNjb3VudCwgc2lkLCBsb2dpbl9oaW50KSB3aWxsIHNob3J0IGNpcmN1aXQgdGhlIGF1dGhlbnRpY2F0aW9uIGFuZCBhbGxvdyB5b3UgdG8gcmV0cmlldmUgYSBjb2RlIHdpdGhvdXQgaW50ZXJhY3Rpb24uXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdCBcclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgYXN5bmMgY3JlYXRlQWNxdWlyZVRva2VuVXJsKHJlcXVlc3Q6IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycyk6IFByb21pc2U8c3RyaW5nPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZXMgdGhlIGhhc2ggZnJhZ21lbnQgcmVzcG9uc2UgZnJvbSBwdWJsaWMgY2xpZW50IGNvZGUgcmVxdWVzdC4gUmV0dXJucyBhIGNvZGUgcmVzcG9uc2UgdXNlZCBieVxyXG4gICAgICogdGhlIGNsaWVudCB0byBleGNoYW5nZSBmb3IgYSB0b2tlbiBpbiBhY3F1aXJlVG9rZW4uXHJcbiAgICAgKiBAcGFyYW0gaGFzaEZyYWdtZW50IFxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBoYW5kbGVGcmFnbWVudFJlc3BvbnNlKGhhc2hGcmFnbWVudDogc3RyaW5nKTogQ29kZVJlc3BvbnNlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2l2ZW4gYW4gYXV0aG9yaXphdGlvbiBjb2RlLCBpdCB3aWxsIHBlcmZvcm0gYSB0b2tlbiBleGNoYW5nZSB1c2luZyBjYWNoZWQgdmFsdWVzIGZyb20gYSBwcmV2aW91cyBjYWxsIHRvXHJcbiAgICAgKiBjcmVhdGVMb2dpblVybCgpIG9yIGNyZWF0ZUFjcXVpcmVUb2tlblVybCgpLiBZb3UgbXVzdCBjYWxsIHRoaXMgQUZURVIgdXNpbmcgb25lIG9mIHRob3NlIEFQSXMgZmlyc3QuIFlvdSBzaG91bGRcclxuICAgICAqIGFsc28gdXNlIHRoZSBoYW5kbGVGcmFnbWVudFJlc3BvbnNlKCkgQVBJIHRvIHBhc3MgdGhlIGNvZGVSZXNwb25zZSB0byB0aGlzIGZ1bmN0aW9uIGFmdGVyd2FyZHMuXHJcbiAgICAgKiBAcGFyYW0gY29kZVJlc3BvbnNlIFxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBhc3luYyBhY3F1aXJlVG9rZW4oY29kZVJlc3BvbnNlOiBDb2RlUmVzcG9uc2UpOiBQcm9taXNlPFRva2VuUmVzcG9uc2U+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0cmlldmVzIGEgdG9rZW4gZnJvbSBjYWNoZSBpZiBpdCBpcyBzdGlsbCB2YWxpZCwgb3IgdXNlcyB0aGUgY2FjaGVkIHJlZnJlc2ggdG9rZW4gdG8gcmVuZXdcclxuICAgICAqIHRoZSBnaXZlbiB0b2tlbiBhbmQgcmV0dXJucyB0aGUgcmVuZXdlZCB0b2tlbi4gV2lsbCB0aHJvdyBhbiBlcnJvciBpZiBsb2dpbiBpcyBub3QgY29tcGxldGVkICh1bmxlc3NcclxuICAgICAqIGlkIHRva2VucyBhcmUgbm90IGJlaW5nIHJlbmV3ZWQpLlxyXG4gICAgICogQHBhcmFtIHJlcXVlc3QgXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IGFzeW5jIHJlbmV3VG9rZW4ocmVxdWVzdDogVG9rZW5SZW5ld1BhcmFtZXRlcnMpOiBQcm9taXNlPFRva2VuUmVzcG9uc2U+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXNlIHRvIGxvZyBvdXQgdGhlIGN1cnJlbnQgdXNlciwgYW5kIHJlZGlyZWN0IHRoZSB1c2VyIHRvIHRoZSBwb3N0TG9nb3V0UmVkaXJlY3RVcmkuXHJcbiAgICAgKiBEZWZhdWx0IGJlaGF2aW91ciBpcyB0byByZWRpcmVjdCB0aGUgdXNlciB0byBgd2luZG93LmxvY2F0aW9uLmhyZWZgLlxyXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVVyaSBcclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgYXN5bmMgbG9nb3V0KGF1dGhvcml0eVVyaT86IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPjtcclxuXHJcbiAgICAvLyAjZW5kcmVnaW9uXHJcbiAgICBcclxuICAgIC8vICNyZWdpb24gR2V0dGVycyBhbmQgU2V0dGVyc1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgc2lnbmVkIGluIGFjY291bnRcclxuICAgICAqICh0aGUgYWNjb3VudCBvYmplY3QgaXMgY3JlYXRlZCBhdCB0aGUgdGltZSBvZiBzdWNjZXNzZnVsIGxvZ2luKVxyXG4gICAgICogb3IgbnVsbCB3aGVuIG5vIHN0YXRlIGlzIGZvdW5kXHJcbiAgICAgKiBAcmV0dXJucyB7QGxpbmsgQWNjb3VudH0gLSB0aGUgYWNjb3VudCBvYmplY3Qgc3RvcmVkIGluIE1TQUxcclxuICAgICAqL1xyXG4gICAgZ2V0QWNjb3VudCgpOiBBY2NvdW50IHtcclxuICAgICAgICBpZiAodGhpcy5hY2NvdW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFjY291bnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBHZXQgaWQgdG9rZW4gYW5kIGNsaWVudCBpbmZvIGZyb20gY2FjaGVcclxuICAgICAgICBjb25zdCByYXdJZFRva2VuID0gdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0SXRlbShQZXJzaXN0ZW50Q2FjaGVLZXlzLklEX1RPS0VOKTtcclxuICAgICAgICBjb25zdCByYXdDbGllbnRJbmZvID0gdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0SXRlbShQZXJzaXN0ZW50Q2FjaGVLZXlzLkNMSUVOVF9JTkZPKTtcclxuXHJcbiAgICAgICAgaWYoIVN0cmluZ1V0aWxzLmlzRW1wdHkocmF3SWRUb2tlbikgJiYgIVN0cmluZ1V0aWxzLmlzRW1wdHkocmF3Q2xpZW50SW5mbykpIHtcclxuICAgICAgICAgICAgY29uc3QgaWRUb2tlbiA9IG5ldyBJZFRva2VuKHJhd0lkVG9rZW4sIHRoaXMuY3J5cHRvT2JqKTtcclxuICAgICAgICAgICAgY29uc3QgY2xpZW50SW5mbyA9IGJ1aWxkQ2xpZW50SW5mbyhyYXdDbGllbnRJbmZvLCB0aGlzLmNyeXB0b09iaik7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmFjY291bnQgPSBBY2NvdW50LmNyZWF0ZUFjY291bnQoaWRUb2tlbiwgY2xpZW50SW5mbywgdGhpcy5jcnlwdG9PYmopO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hY2NvdW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gaWYgbG9naW4gaXMgbm90IHlldCBkb25lLCByZXR1cm4gbnVsbFxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8vICNlbmRyZWdpb25cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgTW9kdWxlQ29uZmlndXJhdGlvbiwgYnVpbGRNb2R1bGVDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vTW9kdWxlQ29uZmlndXJhdGlvblwiO1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlIEF1dGhPcHRpb25zOiBVc2UgdGhpcyB0byBjb25maWd1cmUgdGhlIGF1dGggb3B0aW9ucyBpbiB0aGUgQ29uZmlndXJhdGlvbiBvYmplY3RcclxuICpcclxuICogIC0gY2xpZW50SWQgICAgICAgICAgICAgICAgICAgIC0gQ2xpZW50IElEIG9mIHlvdXIgYXBwIHJlZ2lzdGVyZWQgd2l0aCBvdXIgQXBwbGljYXRpb24gcmVnaXN0cmF0aW9uIHBvcnRhbCA6IGh0dHBzOi8vcG9ydGFsLmF6dXJlLmNvbS8jYmxhZGUvTWljcm9zb2Z0X0FBRF9JQU0vQWN0aXZlRGlyZWN0b3J5TWVudUJsYWRlL1JlZ2lzdGVyZWRBcHBzUHJldmlldyBpbiBNaWNyb3NvZnQgSWRlbnRpdHkgUGxhdGZvcm1cclxuICogIC0gYXV0aG9yaXR5ICAgICAgICAgICAgICAgICAgIC0gWW91IGNhbiBjb25maWd1cmUgYSBzcGVjaWZpYyBhdXRob3JpdHksIGRlZmF1bHRzIHRvIFwiIFwiIG9yIFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tL2NvbW1vblwiXHJcbiAqICAtIHJlZGlyZWN0VXJpICAgICAgICAgICAgICAgICAtIFRoZSByZWRpcmVjdCBVUkkgb2YgdGhlIGFwcGxpY2F0aW9uLCB0aGlzIHNob3VsZCBiZSBzYW1lIGFzIHRoZSB2YWx1ZSBpbiB0aGUgYXBwbGljYXRpb24gcmVnaXN0cmF0aW9uIHBvcnRhbC5EZWZhdWx0cyB0byBgd2luZG93LmxvY2F0aW9uLmhyZWZgLlxyXG4gKiAgLSBwb3N0TG9nb3V0UmVkaXJlY3RVcmkgICAgICAgLSBVc2VkIHRvIHJlZGlyZWN0IHRoZSB1c2VyIHRvIHRoaXMgbG9jYXRpb24gYWZ0ZXIgbG9nb3V0LiBEZWZhdWx0cyB0byBgd2luZG93LmxvY2F0aW9uLmhyZWZgLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQXV0aE9wdGlvbnMgPSB7XHJcbiAgICBjbGllbnRJZDogc3RyaW5nO1xyXG4gICAgYXV0aG9yaXR5Pzogc3RyaW5nO1xyXG4gICAgcmVkaXJlY3RVcmk/OiBzdHJpbmcgfCAoKCkgPT4gc3RyaW5nKTtcclxuICAgIHBvc3RMb2dvdXRSZWRpcmVjdFVyaT86IHN0cmluZyB8ICgoKSA9PiBzdHJpbmcpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFVzZSB0aGUgY29uZmlndXJhdGlvbiBvYmplY3QgdG8gY29uZmlndXJlIE1TQUwgYW5kIGluaXRpYWxpemUgdGhlIEF1dGhvcml6YXRpb25Db2RlTW9kdWxlLlxyXG4gKlxyXG4gKiBUaGlzIG9iamVjdCBhbGxvd3MgeW91IHRvIGNvbmZpZ3VyZSBpbXBvcnRhbnQgZWxlbWVudHMgb2YgTVNBTCBmdW5jdGlvbmFsaXR5OlxyXG4gKiAtIGF1dGg6IHRoaXMgaXMgd2hlcmUgeW91IGNvbmZpZ3VyZSBhdXRoIGVsZW1lbnRzIGxpa2UgY2xpZW50SUQsIGF1dGhvcml0eSB1c2VkIGZvciBhdXRoZW50aWNhdGluZyBhZ2FpbnN0IHRoZSBNaWNyb3NvZnQgSWRlbnRpdHkgUGxhdGZvcm1cclxuICovXHJcbmV4cG9ydCB0eXBlIFB1YmxpY0NsaWVudFNQQUNvbmZpZ3VyYXRpb24gPSBNb2R1bGVDb25maWd1cmF0aW9uICYge1xyXG4gICAgYXV0aDogQXV0aE9wdGlvbnNcclxufTtcclxuXHJcbmNvbnN0IERFRkFVTFRfQVVUSF9PUFRJT05TOiBBdXRoT3B0aW9ucyA9IHtcclxuICAgIGNsaWVudElkOiBcIlwiLFxyXG4gICAgYXV0aG9yaXR5OiBudWxsLFxyXG4gICAgcmVkaXJlY3RVcmk6IFwiXCIsXHJcbiAgICBwb3N0TG9nb3V0UmVkaXJlY3RVcmk6IFwiXCJcclxufTtcclxuXHJcbi8qKlxyXG4gKiBGdW5jdGlvbiB0aGF0IHNldHMgdGhlIGRlZmF1bHQgb3B0aW9ucyB3aGVuIG5vdCBleHBsaWNpdGx5IGNvbmZpZ3VyZWQgZnJvbSBhcHAgZGV2ZWxvcGVyXHJcbiAqXHJcbiAqIEBwYXJhbSBUQXV0aE9wdGlvbnNcclxuICogQHBhcmFtIFRTdG9yYWdlT3B0aW9uc1xyXG4gKiBAcGFyYW0gVFN5c3RlbU9wdGlvbnNcclxuICogQHBhcmFtIFRGcmFtZXdvcmtPcHRpb25zXHJcbiAqXHJcbiAqIEByZXR1cm5zIFRDb25maWd1cmF0aW9uIG9iamVjdFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvbih7IGF1dGgsIGxvZ2dlck9wdGlvbnMsIHN0b3JhZ2VJbnRlcmZhY2UsIG5ldHdvcmtJbnRlcmZhY2UsIGNyeXB0b0ludGVyZmFjZSB9OiBQdWJsaWNDbGllbnRTUEFDb25maWd1cmF0aW9uKTogUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvbiB7XHJcbiAgICBjb25zdCBiYXNlQ29uZmlnID0gYnVpbGRNb2R1bGVDb25maWd1cmF0aW9uKHtsb2dnZXJPcHRpb25zLCBzdG9yYWdlSW50ZXJmYWNlLCBuZXR3b3JrSW50ZXJmYWNlLCBjcnlwdG9JbnRlcmZhY2V9KTtcclxuICAgIGNvbnN0IG92ZXJsYXllZENvbmZpZzogUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvbiA9IHtcclxuICAgICAgICBhdXRoOiB7IC4uLkRFRkFVTFRfQVVUSF9PUFRJT05TLCAuLi5hdXRoIH0sXHJcbiAgICAgICAgLi4uYmFzZUNvbmZpZ1xyXG4gICAgfTtcclxuICAgIHJldHVybiBvdmVybGF5ZWRDb25maWc7XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IENsaWVudEF1dGhFcnJvciB9IGZyb20gXCIuL0NsaWVudEF1dGhFcnJvclwiO1xyXG5cclxuLyoqXHJcbiAqIENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UgPSB7XHJcbiAgICByZWRpcmVjdFVyaU5vdFNldDoge1xyXG4gICAgICAgIGNvZGU6IFwicmVkaXJlY3RfdXJpX2VtcHR5XCIsXHJcbiAgICAgICAgZGVzYzogXCJBIHJlZGlyZWN0IFVSSSBpcyByZXF1aXJlZCBmb3IgYWxsIGNhbGxzLCBhbmQgbm9uZSBoYXMgYmVlbiBzZXQuXCJcclxuICAgIH0sXHJcbiAgICBwb3N0TG9nb3V0VXJpTm90U2V0OiB7XHJcbiAgICAgICAgY29kZTogXCJwb3N0X2xvZ291dF91cmlfZW1wdHlcIixcclxuICAgICAgICBkZXNjOiBcIkEgcG9zdCBsb2dvdXQgcmVkaXJlY3QgaGFzIG5vdCBiZWVuIHNldC5cIlxyXG4gICAgfSxcclxuICAgIGNsYWltc1JlcXVlc3RQYXJzaW5nRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImNsYWltc19yZXF1ZXN0X3BhcnNpbmdfZXJyb3JcIixcclxuICAgICAgICBkZXNjOiBcIkNvdWxkIG5vdCBwYXJzZSB0aGUgZ2l2ZW4gY2xhaW1zIHJlcXVlc3Qgb2JqZWN0LlwiXHJcbiAgICB9LFxyXG4gICAgYXV0aG9yaXR5VXJpSW5zZWN1cmU6IHtcclxuICAgICAgICBjb2RlOiBcImF1dGhvcml0eV91cmlfaW5zZWN1cmVcIixcclxuICAgICAgICBkZXNjOiBcIkF1dGhvcml0eSBVUklzIG11c3QgdXNlIGh0dHBzLiAgUGxlYXNlIHNlZSBoZXJlIGZvciB2YWxpZCBhdXRob3JpdHkgY29uZmlndXJhdGlvbiBvcHRpb25zOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9hY3RpdmUtZGlyZWN0b3J5L2RldmVsb3AvbXNhbC1qcy1pbml0aWFsaXppbmctY2xpZW50LWFwcGxpY2F0aW9ucyNjb25maWd1cmF0aW9uLW9wdGlvbnNcIlxyXG4gICAgfSxcclxuICAgIHVybFBhcnNlRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcInVybF9wYXJzZV9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVVJMIGNvdWxkIG5vdCBiZSBwYXJzZWQgaW50byBhcHByb3ByaWF0ZSBzZWdtZW50cy5cIlxyXG4gICAgfSxcclxuICAgIHVybEVtcHR5RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImVtcHR5X3VybF9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVVJMIHdhcyBlbXB0eSBvciBudWxsLlwiXHJcbiAgICB9LFxyXG4gICAgZW1wdHlTY29wZXNFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwiZW1wdHlfaW5wdXRfc2NvcGVzX2Vycm9yXCIsXHJcbiAgICAgICAgZGVzYzogXCJTY29wZXMgY2Fubm90IGJlIHBhc3NlZCBhcyBudWxsLCB1bmRlZmluZWQgb3IgZW1wdHkgYXJyYXkgYmVjYXVzZSB0aGV5IGFyZSByZXF1aXJlZCB0byBvYnRhaW4gYW4gYWNjZXNzIHRva2VuLlwiXHJcbiAgICB9LFxyXG4gICAgbm9uQXJyYXlTY29wZXNFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwibm9uYXJyYXlfaW5wdXRfc2NvcGVzX2Vycm9yXCIsXHJcbiAgICAgICAgZGVzYzogXCJTY29wZXMgY2Fubm90IGJlIHBhc3NlZCBhcyBub24tYXJyYXkuXCJcclxuICAgIH0sXHJcbiAgICBjbGllbnRJZFNpbmdsZVNjb3BlRXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcImNsaWVudGlkX2lucHV0X3Njb3Blc19lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiQ2xpZW50IElEIGNhbiBvbmx5IGJlIHByb3ZpZGVkIGFzIGEgc2luZ2xlIHNjb3BlLlwiXHJcbiAgICB9LFxyXG4gICAgaW52YWxpZFByb21wdDoge1xyXG4gICAgICAgIGNvZGU6IFwiaW52YWxpZF9wcm9tcHRfdmFsdWVcIixcclxuICAgICAgICBkZXNjOiBcIlN1cHBvcnRlZCBwcm9tcHQgdmFsdWVzIGFyZSAnbG9naW4nLCAnc2VsZWN0X2FjY291bnQnLCAnY29uc2VudCcgYW5kICdub25lJy4gIFBsZWFzZSBzZWUgaGVyZSBmb3IgdmFsaWQgY29uZmlndXJhdGlvbiBvcHRpb25zOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9hY3RpdmUtZGlyZWN0b3J5L2RldmVsb3AvbXNhbC1qcy1pbml0aWFsaXppbmctY2xpZW50LWFwcGxpY2F0aW9ucyNjb25maWd1cmF0aW9uLW9wdGlvbnNcIixcclxuICAgIH0sXHJcbiAgICB0b2tlblJlcXVlc3RFbXB0eUVycm9yOiB7XHJcbiAgICAgICAgY29kZTogXCJ0b2tlbl9yZXF1ZXN0X2VtcHR5XCIsXHJcbiAgICAgICAgZGVzYzogXCJUb2tlbiByZXF1ZXN0IHdhcyBlbXB0eSBhbmQgbm90IGZvdW5kIGluIGNhY2hlLlwiXHJcbiAgICB9XHJcbn07XHJcblxyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3IgaW4gY29uZmlndXJhdGlvbiBvZiB0aGUgTVNBTC5qcyBsaWJyYXJ5LlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIENsaWVudENvbmZpZ3VyYXRpb25FcnJvciBleHRlbmRzIENsaWVudEF1dGhFcnJvciB7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZTogc3RyaW5nLCBlcnJvck1lc3NhZ2U/OiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJDbGllbnRDb25maWd1cmF0aW9uRXJyb3JcIjtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLnByb3RvdHlwZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biB3aGVuIHRoZSByZWRpcmVjdCB1cmkgaXMgZW1wdHkgKG5vdCBzZXQgYnkgY2FsbGVyKVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlUmVkaXJlY3RVcmlFbXB0eUVycm9yKCk6IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZS5yZWRpcmVjdFVyaU5vdFNldC5jb2RlLFxyXG4gICAgICAgICAgICBDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLnJlZGlyZWN0VXJpTm90U2V0LmRlc2MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiB0aGUgcG9zdC1sb2dvdXQgcmVkaXJlY3QgdXJpIGlzIGVtcHR5IChub3Qgc2V0IGJ5IGNhbGxlcilcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZVBvc3RMb2dvdXRSZWRpcmVjdFVyaUVtcHR5RXJyb3IoKTogQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudENvbmZpZ3VyYXRpb25FcnJvcihDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLnBvc3RMb2dvdXRVcmlOb3RTZXQuY29kZSxcclxuICAgICAgICAgICAgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZS5wb3N0TG9nb3V0VXJpTm90U2V0LmRlc2MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiB0aGUgY2xhaW1zIHJlcXVlc3QgY291bGQgbm90IGJlIHN1Y2Nlc3NmdWxseSBwYXJzZWRcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZUNsYWltc1JlcXVlc3RQYXJzaW5nRXJyb3IoY2xhaW1zUmVxdWVzdFBhcnNlRXJyb3I6IHN0cmluZyk6IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZS5jbGFpbXNSZXF1ZXN0UGFyc2luZ0Vycm9yLmNvZGUsXHJcbiAgICAgICAgICAgIGAke0NsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UuY2xhaW1zUmVxdWVzdFBhcnNpbmdFcnJvci5kZXNjfSBHaXZlbiB2YWx1ZTogJHtjbGFpbXNSZXF1ZXN0UGFyc2VFcnJvcn1gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIGlmIGF1dGhvcml0eSB1cmkgaXMgZ2l2ZW4gYW4gaW5zZWN1cmUgcHJvdG9jb2wuXHJcbiAgICAgKiBAcGFyYW0gdXJsU3RyaW5nIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlSW5zZWN1cmVBdXRob3JpdHlVcmlFcnJvcih1cmxTdHJpbmc6IHN0cmluZyk6IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZS5hdXRob3JpdHlVcmlJbnNlY3VyZS5jb2RlLFxyXG4gICAgICAgICAgICBgJHtDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLmF1dGhvcml0eVVyaUluc2VjdXJlLmRlc2N9IEdpdmVuIFVSSTogJHt1cmxTdHJpbmd9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biBpZiBVUkwgc3RyaW5nIGRvZXMgbm90IHBhcnNlIGludG8gc2VwYXJhdGUgc2VnbWVudHMuXHJcbiAgICAgKiBAcGFyYW0gdXJsU3RyaW5nIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlVXJsUGFyc2VFcnJvcih1cmxQYXJzZUVycm9yOiBzdHJpbmcpOiBDbGllbnRDb25maWd1cmF0aW9uRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UudXJsUGFyc2VFcnJvci5jb2RlLFxyXG4gICAgICAgICAgICBgJHtDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLnVybFBhcnNlRXJyb3IuZGVzY30gR2l2ZW4gRXJyb3I6ICR7dXJsUGFyc2VFcnJvcn1gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIGlmIFVSTCBzdHJpbmcgaXMgZW1wdHkgb3IgbnVsbC5cclxuICAgICAqIEBwYXJhbSB1cmxTdHJpbmcgXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVVcmxFbXB0eUVycm9yKCk6IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZS51cmxFbXB0eUVycm9yLmNvZGUsIENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UudXJsRW1wdHlFcnJvci5kZXNjKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEVycm9yIHRocm93biB3aGVuIHNjb3BlcyBhcmUgbm90IGFuIGFycmF5XHJcbiAgICAgKiBAcGFyYW0gaW5wdXRTY29wZXMgXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVTY29wZXNOb25BcnJheUVycm9yKGlucHV0U2NvcGVzOiBBcnJheTxzdHJpbmc+KTogQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yIHtcclxuICAgICAgICByZXR1cm4gbmV3IENsaWVudENvbmZpZ3VyYXRpb25FcnJvcihDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLm5vbkFycmF5U2NvcGVzRXJyb3IuY29kZSxcclxuICAgICAgICAgICAgYCR7Q2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZS5ub25BcnJheVNjb3Blc0Vycm9yLmRlc2N9IEdpdmVuIFNjb3BlczogJHtpbnB1dFNjb3Blc31gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEVycm9yIHRocm93biB3aGVuIHNjb3BlcyBhcmUgZW1wdHkuXHJcbiAgICAgKiBAcGFyYW0gc2NvcGVzVmFsdWUgXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVFbXB0eVNjb3Blc0FycmF5RXJyb3IoaW5wdXRTY29wZXM6IEFycmF5PHN0cmluZz4pOiBDbGllbnRDb25maWd1cmF0aW9uRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UuZW1wdHlTY29wZXNFcnJvci5jb2RlLFxyXG4gICAgICAgICAgICBgJHtDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLmVtcHR5U2NvcGVzRXJyb3IuZGVzY30gR2l2ZW4gU2NvcGVzOiAke2lucHV0U2NvcGVzfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXJyb3IgdGhyb3duIHdoZW4gY2xpZW50IGlkIHNjb3BlIGlzIG5vdCBwcm92aWRlZCBhcyBzaW5nbGUgc2NvcGUuXHJcbiAgICAgKiBAcGFyYW0gaW5wdXRTY29wZXMgXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjcmVhdGVDbGllbnRJZFNpbmdsZVNjb3BlRXJyb3IoaW5wdXRTY29wZXM6IEFycmF5PHN0cmluZz4pOiBDbGllbnRDb25maWd1cmF0aW9uRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UuY2xpZW50SWRTaW5nbGVTY29wZUVycm9yLmNvZGUsXHJcbiAgICAgICAgICAgIGAke0NsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UuY2xpZW50SWRTaW5nbGVTY29wZUVycm9yLmRlc2N9IEdpdmVuIFNjb3BlczogJHtpbnB1dFNjb3Blc31gKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEVycm9yIHRocm93biB3aGVuIHByb21wdCBpcyBub3QgYW4gYWxsb3dlZCB0eXBlLlxyXG4gICAgICogQHBhcmFtIHByb21wdFZhbHVlIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlSW52YWxpZFByb21wdEVycm9yKHByb21wdFZhbHVlOiBzdHJpbmcpOiBDbGllbnRDb25maWd1cmF0aW9uRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UuaW52YWxpZFByb21wdC5jb2RlLFxyXG4gICAgICAgICAgICBgJHtDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLmludmFsaWRQcm9tcHQuZGVzY30gR2l2ZW4gdmFsdWU6ICR7cHJvbXB0VmFsdWV9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaHJvd3MgZXJyb3Igd2hlbiB0b2tlbiByZXF1ZXN0IGlzIGVtcHR5IGFuZCBub3RoaW5nIGNhY2hlZCBpbiBzdG9yYWdlLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlRW1wdHlUb2tlblJlcXVlc3RFcnJvcigpOiBDbGllbnRDb25maWd1cmF0aW9uRXJyb3Ige1xyXG4gICAgICAgIHJldHVybiBuZXcgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvck1lc3NhZ2UudG9rZW5SZXF1ZXN0RW1wdHlFcnJvci5jb2RlLCBDbGllbnRDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlLnRva2VuUmVxdWVzdEVtcHR5RXJyb3IuZGVzYyk7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gXCIuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JcIjtcclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvU3RyaW5nVXRpbHNcIjtcclxuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSBcIi4uL3V0aWxzL0NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yXCI7XHJcblxyXG4vKipcclxuICogVGhlIFNjb3BlU2V0IGNsYXNzIGNyZWF0ZXMgYSBzZXQgb2Ygc2NvcGVzLiBTY29wZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmUsIHVuaXF1ZSB2YWx1ZXMsIHNvIHRoZSBTZXQgb2JqZWN0IGluIEpTIG1ha2VzXHJcbiAqIHRoZSBtb3N0IHNlbnNlIHRvIGltcGxlbWVudCBmb3IgdGhpcyBjbGFzcy4gQWxsIHNjb3BlcyBhcmUgdHJpbW1lZCBhbmQgY29udmVydGVkIHRvIGxvd2VyIGNhc2Ugc3RyaW5ncyB0byBlbnN1cmUgdW5pcXVlbmVzcyBvZiBzdHJpbmdzLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFNjb3BlU2V0IHtcclxuICAgIC8vIENsaWVudCBJRCBvZiBhcHBsaWNhdGlvblxyXG4gICAgcHJpdmF0ZSBjbGllbnRJZDogc3RyaW5nO1xyXG4gICAgLy8gU2NvcGVzIGFzIGEgU2V0IG9mIHN0cmluZ3NcclxuICAgIHByaXZhdGUgc2NvcGVzOiBTZXQ8c3RyaW5nPjtcclxuICAgIC8vIE9yaWdpbmFsIHNjb3BlcyBwYXNzZWQgdG8gY29uc3RydWN0b3IuIFVzdWFsbHkgdXNlZCBmb3IgY2FjaGluZyBvciB0ZWxlbWV0cnkuXHJcbiAgICBwcml2YXRlIG9yaWdpbmFsU2NvcGVzOiBTZXQ8c3RyaW5nPjtcclxuICAgIC8vIEJvb2xlYW4gZGVub3Rpbmcgd2hldGhlciBzY29wZXMgYXJlIHJlcXVpcmVkLiBVc3VhbGx5IHVzZWQgZm9yIHZhbGlkYXRpb24uXHJcbiAgICBwcml2YXRlIHNjb3Blc1JlcXVpcmVkOiBib29sZWFuO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGlucHV0U2NvcGVzOiBBcnJheTxzdHJpbmc+LCBhcHBDbGllbnRJZDogc3RyaW5nLCBzY29wZXNSZXF1aXJlZDogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuY2xpZW50SWQgPSBhcHBDbGllbnRJZDtcclxuICAgICAgICB0aGlzLnNjb3Blc1JlcXVpcmVkID0gc2NvcGVzUmVxdWlyZWQ7XHJcbiAgICAgICAgLy8gRmlsdGVyIGVtcHR5IHN0cmluZyBhbmQgbnVsbC91bmRlZmluZWQgYXJyYXkgaXRlbXNcclxuICAgICAgICBjb25zdCBmaWx0ZXJlZElucHV0ID0gaW5wdXRTY29wZXMgPyBTdHJpbmdVdGlscy5yZW1vdmVFbXB0eVN0cmluZ3NGcm9tQXJyYXkoaW5wdXRTY29wZXMpIDogaW5wdXRTY29wZXM7XHJcbiAgICAgICAgLy8gVmFsaWRhdGUgYW5kIGZpbHRlciBzY29wZXMgKHZhbGlkYXRlIGZ1bmN0aW9uIHRocm93cyBpZiB2YWxpZGF0aW9uIGZhaWxzKVxyXG4gICAgICAgIHRoaXMudmFsaWRhdGVJbnB1dFNjb3BlcyhmaWx0ZXJlZElucHV0KTtcclxuICAgICAgICBjb25zdCBzY29wZUFyciA9IGZpbHRlcmVkSW5wdXQgPyBTdHJpbmdVdGlscy50cmltQW5kQ29udmVydEFycmF5RW50cmllc1RvTG93ZXJDYXNlKFsuLi5maWx0ZXJlZElucHV0XSkgOiBbXTtcclxuICAgICAgICB0aGlzLnNjb3BlcyA9IG5ldyBTZXQ8c3RyaW5nPihzY29wZUFycik7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNjb3Blc1JlcXVpcmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kU2NvcGUodGhpcy5jbGllbnRJZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMub3JpZ2luYWxTY29wZXMgPSBuZXcgU2V0PHN0cmluZz4odGhpcy5zY29wZXMpO1xyXG4gICAgICAgIHRoaXMucmVwbGFjZURlZmF1bHRTY29wZXMoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZhY3RvcnkgbWV0aG9kIHRvIGNyZWF0ZSBTY29wZVNldCBmcm9tIHNwYWNlLWRlbGltaXRlZCBzdHJpbmdcclxuICAgICAqIEBwYXJhbSBpbnB1dFNjb3BlU3RyaW5nIFxyXG4gICAgICogQHBhcmFtIGFwcENsaWVudElkIFxyXG4gICAgICogQHBhcmFtIHNjb3Blc1JlcXVpcmVkIFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZnJvbVN0cmluZyhpbnB1dFNjb3BlU3RyaW5nOiBzdHJpbmcsIGFwcENsaWVudElkOiBzdHJpbmcsIHNjb3Blc1JlcXVpcmVkOiBib29sZWFuKTogU2NvcGVTZXQge1xyXG4gICAgICAgIGlucHV0U2NvcGVTdHJpbmcgPSBpbnB1dFNjb3BlU3RyaW5nIHx8IFwiXCI7XHJcbiAgICAgICAgY29uc3QgaW5wdXRTY29wZXM6IEFycmF5PHN0cmluZz4gPSBpbnB1dFNjb3BlU3RyaW5nLnNwbGl0KFwiIFwiKTtcclxuICAgICAgICByZXR1cm4gbmV3IFNjb3BlU2V0KGlucHV0U2NvcGVzLCBhcHBDbGllbnRJZCwgc2NvcGVzUmVxdWlyZWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVwbGFjZSBjbGllbnQgaWQgd2l0aCB0aGUgZGVmYXVsdCBzY29wZXMgdXNlZCBmb3IgdG9rZW4gYWNxdWlzaXRpb24uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmVwbGFjZURlZmF1bHRTY29wZXMoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuc2NvcGVzLmhhcyh0aGlzLmNsaWVudElkKSkge1xyXG4gICAgICAgICAgICB0aGlzLnJlbW92ZVNjb3BlKHRoaXMuY2xpZW50SWQpO1xyXG4gICAgICAgICAgICB0aGlzLmFwcGVuZFNjb3BlKENvbnN0YW50cy5PUEVOSURfU0NPUEUpO1xyXG4gICAgICAgICAgICB0aGlzLmFwcGVuZFNjb3BlKENvbnN0YW50cy5QUk9GSUxFX1NDT1BFKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hcHBlbmRTY29wZShDb25zdGFudHMuT0ZGTElORV9BQ0NFU1NfU0NPUEUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXNlZCB0byB2YWxpZGF0ZSB0aGUgc2NvcGVzIGlucHV0IHBhcmFtZXRlciByZXF1ZXN0ZWQgIGJ5IHRoZSBkZXZlbG9wZXIuXHJcbiAgICAgKiBAcGFyYW0ge0FycmF5PHN0cmluZz59IGlucHV0U2NvcGVzIC0gRGV2ZWxvcGVyIHJlcXVlc3RlZCBwZXJtaXNzaW9ucy4gTm90IGFsbCBzY29wZXMgYXJlIGd1YXJhbnRlZWQgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIGFjY2VzcyB0b2tlbiByZXR1cm5lZC5cclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2NvcGVzUmVxdWlyZWQgLSBCb29sZWFuIGluZGljYXRpbmcgd2hldGhlciB0aGUgc2NvcGVzIGFycmF5IGlzIHJlcXVpcmVkIG9yIG5vdFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHZhbGlkYXRlSW5wdXRTY29wZXMoaW5wdXRTY29wZXM6IEFycmF5PHN0cmluZz4pOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5zY29wZXNSZXF1aXJlZCkge1xyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBzY29wZXMgYXJlIHJlcXVpcmVkIGJ1dCBub3QgZ2l2ZW4gb3IgaXMgYW4gZW1wdHkgYXJyYXlcclxuICAgICAgICAgICAgaWYgKCFpbnB1dFNjb3BlcyB8fCBpbnB1dFNjb3Blcy5sZW5ndGggPCAxKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlRW1wdHlTY29wZXNBcnJheUVycm9yKGlucHV0U2NvcGVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2hlY2sgdGhhdCBzY29wZXMgaXMgYW4gYXJyYXkgb2JqZWN0XHJcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGlucHV0U2NvcGVzKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlU2NvcGVzTm9uQXJyYXlFcnJvcihpbnB1dFNjb3Blcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgaWYgYSBnaXZlbiBzY29wZSBpcyBwcmVzZW50IGluIHRoaXMgc2V0IG9mIHNjb3Blcy5cclxuICAgICAqIEBwYXJhbSBzY29wZSBcclxuICAgICAqL1xyXG4gICAgY29udGFpbnNTY29wZShzY29wZTogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICFTdHJpbmdVdGlscy5pc0VtcHR5KHNjb3BlKSA/IHRoaXMuc2NvcGVzLmhhcyhzY29wZSkgOiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIGEgc2V0IG9mIHNjb3BlcyBpcyBwcmVzZW50IGluIHRoaXMgc2V0IG9mIHNjb3Blcy5cclxuICAgICAqIEBwYXJhbSBzY29wZVNldCBcclxuICAgICAqL1xyXG4gICAgY29udGFpbnNTY29wZVNldChzY29wZVNldDogU2NvcGVTZXQpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAoIXNjb3BlU2V0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NvcGVzLnNpemUgPj0gc2NvcGVTZXQuc2NvcGVzLnNpemUgJiYgc2NvcGVTZXQuYXNBcnJheSgpLmV2ZXJ5KHNjb3BlID0+IHRoaXMuY29udGFpbnNTY29wZShzY29wZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQXBwZW5kcyBzaW5nbGUgc2NvcGUgaWYgcGFzc2VkXHJcbiAgICAgKiBAcGFyYW0gbmV3U2NvcGUgXHJcbiAgICAgKi9cclxuICAgIGFwcGVuZFNjb3BlKG5ld1Njb3BlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShuZXdTY29wZSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUFwcGVuZEVtcHR5U2NvcGVUb1NldEVycm9yKG5ld1Njb3BlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zY29wZXMuYWRkKG5ld1Njb3BlLnRyaW0oKS50b0xvd2VyQ2FzZSgpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFwcGVuZHMgbXVsdGlwbGUgc2NvcGVzIGlmIHBhc3NlZFxyXG4gICAgICogQHBhcmFtIG5ld1Njb3BlcyBcclxuICAgICAqL1xyXG4gICAgYXBwZW5kU2NvcGVzKG5ld1Njb3BlczogQXJyYXk8c3RyaW5nPik6IHZvaWQge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1Njb3BlU2V0ID0gbmV3IFNjb3BlU2V0KG5ld1Njb3BlcywgdGhpcy5jbGllbnRJZCwgdGhpcy5zY29wZXNSZXF1aXJlZCk7XHJcbiAgICAgICAgICAgIHRoaXMuc2NvcGVzID0gdGhpcy51bmlvblNjb3BlU2V0cyhuZXdTY29wZVNldCk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlQXBwZW5kU2NvcGVTZXRFcnJvcihlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmVzIGVsZW1lbnQgZnJvbSBzZXQgb2Ygc2NvcGVzLlxyXG4gICAgICogQHBhcmFtIHNjb3BlIFxyXG4gICAgICovXHJcbiAgICByZW1vdmVTY29wZShzY29wZTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKFN0cmluZ1V0aWxzLmlzRW1wdHkoc2NvcGUpKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVSZW1vdmVFbXB0eVNjb3BlRnJvbVNldEVycm9yKHNjb3BlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zY29wZXMuZGVsZXRlKHNjb3BlLnRyaW0oKS50b0xvd2VyQ2FzZSgpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbWJpbmVzIGFuIGFycmF5IG9mIHNjb3BlcyB3aXRoIHRoZSBjdXJyZW50IHNldCBvZiBzY29wZXMuXHJcbiAgICAgKiBAcGFyYW0gb3RoZXJTY29wZXMgXHJcbiAgICAgKi9cclxuICAgIHVuaW9uU2NvcGVTZXRzKG90aGVyU2NvcGVzOiBTY29wZVNldCk6IFNldDxzdHJpbmc+IHtcclxuICAgICAgICBpZiAoIW90aGVyU2NvcGVzKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVFbXB0eUlucHV0U2NvcGVTZXRFcnJvcihvdGhlclNjb3Blcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgU2V0PHN0cmluZz4oWy4uLm90aGVyU2NvcGVzLmFzQXJyYXkoKSwgLi4uQXJyYXkuZnJvbSh0aGlzLnNjb3BlcyldKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIHNjb3BlcyBpbnRlcnNlY3QgYmV0d2VlbiB0aGlzIHNldCBhbmQgYW5vdGhlci5cclxuICAgICAqIEBwYXJhbSBvdGhlclNjb3BlcyBcclxuICAgICAqL1xyXG4gICAgaW50ZXJzZWN0aW5nU2NvcGVTZXRzKG90aGVyU2NvcGVzOiBTY29wZVNldCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmICghb3RoZXJTY29wZXMpIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUVtcHR5SW5wdXRTY29wZVNldEVycm9yKG90aGVyU2NvcGVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pb25TY29wZVNldHMob3RoZXJTY29wZXMpLnNpemUgPCAodGhpcy5zY29wZXMuc2l6ZSArIG90aGVyU2NvcGVzLmdldFNjb3BlQ291bnQoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHNpemUgb2Ygc2V0IG9mIHNjb3Blcy5cclxuICAgICAqL1xyXG4gICAgZ2V0U2NvcGVDb3VudCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNjb3Blcy5zaXplO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBzZXQgb2Ygb3JpZ2luYWwgc2NvcGVzIG9ubHkgY29udGFpbmVkIGNsaWVudC1pZFxyXG4gICAgICovXHJcbiAgICBpc0xvZ2luU2NvcGVTZXQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3QgaGFzTG9naW5TY29wZXMgPSAoXHJcbiAgICAgICAgICAgIHRoaXMub3JpZ2luYWxTY29wZXMuaGFzKHRoaXMuY2xpZW50SWQpIHx8XHJcbiAgICAgICAgICAgIHRoaXMub3JpZ2luYWxTY29wZXMuaGFzKENvbnN0YW50cy5PUEVOSURfU0NPUEUpIHx8XHJcbiAgICAgICAgICAgIHRoaXMub3JpZ2luYWxTY29wZXMuaGFzKENvbnN0YW50cy5QUk9GSUxFX1NDT1BFKVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luYWxTY29wZXMgJiYgaGFzTG9naW5TY29wZXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBzY29wZXMgYXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlc1xyXG4gICAgICovXHJcbiAgICBhc0FycmF5KCk6IEFycmF5PHN0cmluZz4ge1xyXG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuc2NvcGVzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIG9yaWdpbmFsIHNjb3BlcyBhcyBhbiBhcnJheSAobm8gZXh0cmEgc2NvcGVzIHRvIGNvbnNlbnQpXHJcbiAgICAgKi9cclxuICAgIGdldE9yaWdpbmFsU2NvcGVzQXNBcnJheSgpOiBBcnJheTxzdHJpbmc+IHtcclxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLm9yaWdpbmFsU2NvcGVzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaW50cyBzY29wZXMgaW50byBhIHNwYWNlLWRlbGltaXRlZCBzdHJpbmdcclxuICAgICAqL1xyXG4gICAgcHJpbnRTY29wZXMoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5zY29wZXMpIHtcclxuICAgICAgICAgICAgY29uc3Qgc2NvcGVBcnIgPSB0aGlzLmFzQXJyYXkoKTtcclxuICAgICAgICAgICAgcmV0dXJuIHNjb3BlQXJyLmpvaW4oXCIgXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQ2xpZW50UmVxdWVzdFBhcmFtZXRlcnMgfSBmcm9tIFwiLi9DbGllbnRSZXF1ZXN0UGFyYW1ldGVyc1wiO1xyXG5pbXBvcnQgeyBBY2NvdW50IH0gZnJvbSBcIi4uL2F1dGgvQWNjb3VudFwiO1xyXG5pbXBvcnQgeyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yXCI7XHJcblxyXG4vKipcclxuICogQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzIHBhc3NlZCBieSB1c2VyIHRvIHJldHJpZXZlIGEgdG9rZW4gZnJvbSB0aGUgc2VydmVyLlxyXG4gKiAtIHNjb3BlczogcmVxdWVzdGVkIHRva2VuIHNjb3Blc1xyXG4gKiAtIHJlc291cmNlOiByZXF1ZXN0ZWQgcmVzb3VyY2UgdXJpXHJcbiAqIC0gZXh0cmFTY29wZXNUb0NvbnNlbnQ6IGFkZGl0aW9uYWwgc2NvcGVzIHRvIGNvbnNlbnQgXHJcbiAqIC0gcHJvbXB0OiB0aGUgdmFsdWUgb2YgdGhlIE9BdXRoIHByb21wdCBwYXJhbWV0ZXJcclxuICogLSBleHRyYVF1ZXJ5UGFyYW1ldGVyczogc3RyaW5nIHRvIHN0cmluZyBtYXAgb2YgY3VzdG9tIHF1ZXJ5IHBhcmFtZXRlcnNcclxuICogLSBjbGFpbXNSZXF1ZXN0OiBzdHJpbmdpZmllZCBjbGFpbXMgb2JqZWN0IHRvIHJlcXVlc3QgYWRkaXRpb25hbCBjbGFpbXMgaW4gYSB0b2tlblxyXG4gKiAtIGF1dGhvcml0eTogYXV0aG9yaXR5IHRvIHJlcXVlc3QgdG9rZW5zIGZyb21cclxuICogLSB1c2VyUmVxdWVzdFN0YXRlOiBzdGF0ZSBwYXJhbWV0ZXIgdG8gZW5zdXJlIHJlcXVlc3QvcmVzcG9uc2UgaW50ZWdyaXR5XHJcbiAqIC0gY29ycmVsYXRpb25JZDogY3VzdG9tIGNvcnJlbGF0aW9uSWQgZ2l2ZW4gYnkgdXNlclxyXG4gKiAtIGFjY291bnQ6IEFjY291bnQgb2JqZWN0IHRvIHBlcmZvcm0gU1NPXHJcbiAqIC0gc2lkOiBzZXNzaW9uIGlkIGZvciBTU09cclxuICogLSBsb2dpbkhpbnQ6IGxvZ2luIGhpbnQgZm9yIFNTT1xyXG4gKi9cclxuZXhwb3J0IHR5cGUgQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzID0gQ2xpZW50UmVxdWVzdFBhcmFtZXRlcnMgJiB7XHJcbiAgICBleHRyYVNjb3Blc1RvQ29uc2VudD86IEFycmF5PHN0cmluZz47XHJcbiAgICBwcm9tcHQ/OiBzdHJpbmc7XHJcbiAgICBjbGFpbXNSZXF1ZXN0Pzogc3RyaW5nO1xyXG4gICAgdXNlclJlcXVlc3RTdGF0ZT86IHN0cmluZztcclxuICAgIGFjY291bnQ/OiBBY2NvdW50O1xyXG4gICAgc2lkPzogc3RyaW5nO1xyXG4gICAgbG9naW5IaW50Pzogc3RyaW5nO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEZ1bmN0aW9uIHdoaWNoIHZhbGlkYXRlcyBjbGFpbXMgcmVxdWVzdCBwYXNzZWQgaW4gYnkgdGhlIHVzZXIuXHJcbiAqIEBwYXJhbSByZXF1ZXN0IFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQ2xhaW1zUmVxdWVzdChyZXF1ZXN0OiBBdXRoZW50aWNhdGlvblBhcmFtZXRlcnMpOiB2b2lkIHtcclxuICAgIGlmICghcmVxdWVzdC5jbGFpbXNSZXF1ZXN0KSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgICBKU09OLnBhcnNlKHJlcXVlc3QuY2xhaW1zUmVxdWVzdCk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUNsYWltc1JlcXVlc3RQYXJzaW5nRXJyb3IoZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVE9ETzogTW9yZSB2YWxpZGF0aW9uIHdpbGwgYmUgYWRkZWQgd2hlbiB0aGUgc2VydmVyIHRlYW0gdGVsbHMgdXMgaG93IHRoZXkgaGF2ZSBhY3R1YWxseSBpbXBsZW1lbnRlZCBjbGFpbXNcclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi9Db25zdGFudHNcIjtcclxuXHJcbi8qKlxyXG4gKiBDbGFzcyB3aGljaCBwcm92aWRlcyBoZWxwZXJzIGZvciBPQXV0aCAyLjAgcHJvdG9jb2wgc3BlY2lmaWMgdmFsdWVzXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUHJvdG9jb2xVdGlscyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIHVzZXIgc3RhdGUgd2l0aCByYW5kb20gZ3VpZCwgb3IgcmV0dXJucyByYW5kb20gZ3VpZC5cclxuICAgICAqIEBwYXJhbSB1c2VyU3RhdGUgXHJcbiAgICAgKiBAcGFyYW0gcmFuZG9tR3VpZCBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHNldFJlcXVlc3RTdGF0ZSh1c2VyU3RhdGU6IHN0cmluZywgcmFuZG9tR3VpZDogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gIVN0cmluZ1V0aWxzLmlzRW1wdHkodXNlclN0YXRlKSA/IGAke3JhbmRvbUd1aWR9JHtDb25zdGFudHMuUkVTT1VSQ0VfREVMSU19JHt1c2VyU3RhdGV9YCA6IHJhbmRvbUd1aWQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogRXh0cmFjdHMgdXNlciBzdGF0ZSB2YWx1ZSBmcm9tIHRoZSBzdGF0ZSBzZW50IHdpdGggdGhlIGF1dGhlbnRpY2F0aW9uIHJlcXVlc3QuXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBzY29wZS5cclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdldFVzZXJSZXF1ZXN0U3RhdGUoc2VydmVyUmVzcG9uc2VTdGF0ZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIVN0cmluZ1V0aWxzLmlzRW1wdHkoc2VydmVyUmVzcG9uc2VTdGF0ZSkpIHtcclxuICAgICAgICAgICAgY29uc3Qgc3BsaXRJbmRleCA9IHNlcnZlclJlc3BvbnNlU3RhdGUuaW5kZXhPZihDb25zdGFudHMuUkVTT1VSQ0VfREVMSU0pO1xyXG4gICAgICAgICAgICBpZiAoc3BsaXRJbmRleCA+IC0xICYmIHNwbGl0SW5kZXggKyAxIDwgc2VydmVyUmVzcG9uc2VTdGF0ZS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBzZXJ2ZXJSZXNwb25zZVN0YXRlLnN1YnN0cmluZyhzcGxpdEluZGV4ICsgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCBwa2cgZnJvbSBcIi4uLy4uL3BhY2thZ2UuanNvblwiO1xyXG5pbXBvcnQgeyBBdXRob3JpdHkgfSBmcm9tIFwiLi4vYXV0aC9hdXRob3JpdHkvQXV0aG9yaXR5XCI7XHJcbmltcG9ydCB7IEFjY291bnQgfSBmcm9tIFwiLi4vYXV0aC9BY2NvdW50XCI7XHJcbmltcG9ydCB7IElDcnlwdG8sIFBrY2VDb2RlcyB9IGZyb20gXCIuLi9jcnlwdG8vSUNyeXB0b1wiO1xyXG5pbXBvcnQgeyBTY29wZVNldCB9IGZyb20gXCIuLi9hdXRoL1Njb3BlU2V0XCI7XHJcbmltcG9ydCB7IElkVG9rZW4gfSBmcm9tIFwiLi4vYXV0aC9JZFRva2VuXCI7XHJcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycywgdmFsaWRhdGVDbGFpbXNSZXF1ZXN0IH0gZnJvbSBcIi4uL3JlcXVlc3QvQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzXCI7XHJcbmltcG9ydCB7IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gXCIuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JcIjtcclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvU3RyaW5nVXRpbHNcIjtcclxuaW1wb3J0IHsgUHJvdG9jb2xVdGlscyB9IGZyb20gXCIuLi91dGlscy9Qcm90b2NvbFV0aWxzXCI7XHJcbmltcG9ydCB7IENvbnN0YW50cywgQmxhY2tsaXN0ZWRFUVBhcmFtcywgU1NPVHlwZXMsIFByb21wdFZhbHVlLCBBQURTZXJ2ZXJQYXJhbUtleXMgfSBmcm9tIFwiLi4vdXRpbHMvQ29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IFN0cmluZ0RpY3QgfSBmcm9tIFwiLi4vdXRpbHMvTXNhbFR5cGVzXCI7XHJcblxyXG4vKipcclxuICogVGhpcyBjbGFzcyBleHRlbmRzIHRoZSBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycyBjbGFzcy4gVGhpcyBjbGFzcyB2YWxpZGF0ZXMgVVJMIHJlcXVlc3QgcGFyYW1ldGVycywgY2hlY2tzIGZvciBTU08gYW5kIGdlbmVyYXRlcyByZXF1aXJlZCBVUkwuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgU2VydmVyQ29kZVJlcXVlc3RQYXJhbWV0ZXJzIHtcclxuXHJcbiAgICAvLyBDcnlwdG8gZnVuY3Rpb25zXHJcbiAgICBwcml2YXRlIGNyeXB0b09iajogSUNyeXB0bzsgICAgXHJcblxyXG4gICAgLy8gVGVsZW1ldHJ5IEluZm9cclxuICAgIHhDbGllbnRWZXI6IHN0cmluZztcclxuICAgIHhDbGllbnRTa3U6IHN0cmluZztcclxuICAgIGNvcnJlbGF0aW9uSWQ6IHN0cmluZztcclxuXHJcbiAgICAvLyBQYXJhbXNcclxuICAgIGNsaWVudElkOiBzdHJpbmc7XHJcbiAgICBzY29wZXM6IFNjb3BlU2V0O1xyXG4gICAgcmVkaXJlY3RVcmk6IHN0cmluZztcclxuICAgIGF1dGhvcml0eUluc3RhbmNlOiBBdXRob3JpdHk7XHJcbiAgICByZXNwb25zZVR5cGU6IHN0cmluZztcclxuICAgIHVzZXJSZXF1ZXN0OiBBdXRoZW50aWNhdGlvblBhcmFtZXRlcnM7XHJcbiAgICBxdWVyeVBhcmFtZXRlcnM6IHN0cmluZztcclxuICAgIGV4dHJhUXVlcnlQYXJhbWV0ZXJzOiBzdHJpbmc7XHJcblxyXG4gICAgLy8gR2VuZXJhdGVkIFBhcmFtc1xyXG4gICAgZ2VuZXJhdGVkUGtjZTogUGtjZUNvZGVzO1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGl0eSBjaGVja3NcclxuICAgIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBub25jZTogc3RyaW5nO1xyXG5cclxuICAgIC8vIEFjY291bnRcclxuICAgIGFjY291bnQ6IEFjY291bnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYXV0aG9yaXR5OiBBdXRob3JpdHksIGNsaWVudElkOiBzdHJpbmcsIHVzZXJSZXF1ZXN0OiBBdXRoZW50aWNhdGlvblBhcmFtZXRlcnMsIGNhY2hlZEFjY291bnQ6IEFjY291bnQsIHJlZGlyZWN0VXJpOiBzdHJpbmcsIGNyeXB0b0ltcGw6IElDcnlwdG8sIGlzTG9naW5DYWxsOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5jbGllbnRJZCA9IGNsaWVudElkO1xyXG4gICAgICAgIHRoaXMuY3J5cHRvT2JqID0gY3J5cHRvSW1wbDtcclxuICAgICAgICB0aGlzLnJlZGlyZWN0VXJpID0gcmVkaXJlY3RVcmk7XHJcblxyXG4gICAgICAgIC8vIFRlbGVtZXRyeSBJbmZvXHJcbiAgICAgICAgdGhpcy54Q2xpZW50U2t1ID0gQ29uc3RhbnRzLkxJQlJBUllfTkFNRTtcclxuICAgICAgICB0aGlzLnhDbGllbnRWZXIgPSBwa2cudmVyc2lvbjtcclxuXHJcbiAgICAgICAgdGhpcy5hdXRob3JpdHlJbnN0YW5jZSA9IGF1dGhvcml0eTtcclxuICAgICAgICB0aGlzLnVzZXJSZXF1ZXN0ID0gdXNlclJlcXVlc3Q7XHJcbiAgICAgICAgdGhpcy5yZXNwb25zZVR5cGUgPSBDb25zdGFudHMuQ09ERV9SRVNQT05TRV9UWVBFO1xyXG4gICAgICAgIHRoaXMuYWNjb3VudCA9ICh1c2VyUmVxdWVzdCAmJiB1c2VyUmVxdWVzdC5hY2NvdW50KSB8fCBjYWNoZWRBY2NvdW50O1xyXG5cclxuICAgICAgICAvLyBTZXQgc2NvcGVzLCBhcHBlbmQgZXh0cmEgc2NvcGVzIGlmIHRoZXJlIGlzIGEgbG9naW4gY2FsbC5cclxuICAgICAgICB0aGlzLnNjb3BlcyA9IG5ldyBTY29wZVNldChcclxuICAgICAgICAgICAgKHRoaXMudXNlclJlcXVlc3QgJiYgdGhpcy51c2VyUmVxdWVzdC5zY29wZXMpIHx8IFtdLCBcclxuICAgICAgICAgICAgdGhpcy5jbGllbnRJZCwgXHJcbiAgICAgICAgICAgICFpc0xvZ2luQ2FsbFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGlzTG9naW5DYWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kRXh0cmFTY29wZXMoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNldCByYW5kb20gdmFyc1xyXG4gICAgICAgIGNvbnN0IHJhbmRvbUd1aWQgPSB0aGlzLmNyeXB0b09iai5jcmVhdGVOZXdHdWlkKCk7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IFByb3RvY29sVXRpbHMuc2V0UmVxdWVzdFN0YXRlKHRoaXMudXNlclJlcXVlc3QgJiYgdGhpcy51c2VyUmVxdWVzdC51c2VyUmVxdWVzdFN0YXRlLCByYW5kb21HdWlkKTtcclxuICAgICAgICB0aGlzLm5vbmNlID0gdGhpcy5jcnlwdG9PYmouY3JlYXRlTmV3R3VpZCgpO1xyXG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9IHRoaXMudXNlclJlcXVlc3QuY29ycmVsYXRpb25JZCB8fCB0aGlzLmNyeXB0b09iai5jcmVhdGVOZXdHdWlkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIGV4dHJhU2NvcGVzVG9Db25zZW50IGlmIHBhc3NlZFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFwcGVuZEV4dHJhU2NvcGVzKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnVzZXJSZXF1ZXN0ICYmIHRoaXMuc2NvcGVzKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVzZXJSZXF1ZXN0LmV4dHJhU2NvcGVzVG9Db25zZW50KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNjb3Blcy5hcHBlbmRTY29wZXModGhpcy51c2VyUmVxdWVzdC5leHRyYVNjb3Blc1RvQ29uc2VudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIFNTTyBwYXJhbXMgc2V0IGluIHRoZSBSZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBoYXNTU09QYXJhbSgpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBpc1NTT1JlcXVlc3QgPSB0aGlzLnVzZXJSZXF1ZXN0ICYmICh0aGlzLmFjY291bnQgfHwgdGhpcy51c2VyUmVxdWVzdC5zaWQgfHwgdGhpcy51c2VyUmVxdWVzdC5sb2dpbkhpbnQpO1xyXG4gICAgICAgIHJldHVybiAhIXRoaXMuYWNjb3VudCB8fCAhIWlzU1NPUmVxdWVzdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgU1NPIHBhcmFtZXRlciB0byBxdWVyeSBwYXJhbWV0ZXJzOlxyXG4gICAgICogLSBzaWQgb2YgdGhlIGFjY291bnQgb2JqZWN0IHVzZWQgdG8gaWRlbnRpZnkgdGhlIHNlc3Npb24gb2YgdGhlIHVzZXIgb24gdGhlIHNlcnZpY2VcclxuICAgICAqIC0gbG9naW5faGludCB0byBhdXRob3JpemF0aW9uIFVSTCB3aGljaCBpcyB1c2VkIHRvIHByZS1maWxsIHRoZSB1c2VybmFtZSBmaWVsZCBvZiBzaWduIGluIHBhZ2UgZm9yIHRoZSB1c2VyIGlmIGtub3duIGFoZWFkIG9mIHRpbWVcclxuICAgICAqIEFsc28gZG9lcyBhIHNhbml0eSBjaGVjayBmb3IgZXh0cmFRdWVyeVBhcmFtZXRlcnMgcGFzc2VkIGJ5IHRoZSB1c2VyIHRvIGVuc3VyZSBubyByZXBlYXQgcXVlcnlQYXJhbWV0ZXJzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtAbGluayBBY2NvdW50fSBhY2NvdW50IC0gQWNjb3VudCBmb3Igd2hpY2ggdGhlIHRva2VuIGlzIHJlcXVlc3RlZFxyXG4gICAgICogQHBhcmFtIHF1ZXJ5cGFyYW1zXHJcbiAgICAgKiBAcGFyYW0ge0BsaW5rIFNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzfVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFkZFNTT1F1ZXJ5UGFyYW1ldGVycyhhZGFsSWRUb2tlbjogSWRUb2tlbik6IFN0cmluZ0RpY3Qge1xyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogVGhpcyBpcyBhIGZpbmFsIGNoZWNrIGZvciBhbGwgcXVlcnlQYXJhbXMgYWRkZWQgc28gZmFyOyBwcmVmZXJlbmNlIG9yZGVyOiBzaWQgPiBsb2dpbl9oaW50XHJcbiAgICAgICAgICogc2lkIGNhbm5vdCBiZSBwYXNzZWQgYWxvbmcgd2l0aCBsb2dpbl9oaW50IG9yIGRvbWFpbl9oaW50LCBoZW5jZSB3ZSBjaGVjayBib3RoIGFyZSBub3QgcG9wdWxhdGVkIHlldCBpbiBxdWVyeVBhcmFtZXRlcnNcclxuICAgICAgICAgKi9cclxuICAgICAgICAvLyBwcmVmZXJlbmNlIG9yZGVyOiBhY2NvdW50ID4gc2lkID4gbG9naW5faGludFxyXG4gICAgICAgIGNvbnN0IHNlcnZlclJlcVBhcmFtOiBTdHJpbmdEaWN0ID0ge307XHJcblxyXG4gICAgICAgIC8vIGlmIGFjY291bnQgaW5mbyBpcyBwYXNzZWQsIGFjY291bnQuc2lkID4gYWNjb3VudC5sb2dpbl9oaW50XHJcbiAgICAgICAgaWYgKHRoaXMuYWNjb3VudCkge1xyXG4gICAgICAgICAgICAvLyBzaWQgY2FuIG9ubHkgYmUgcGFzc2VkIGlmIHByb21wdCA9IG5vbmVcclxuICAgICAgICAgICAgaWYgKHRoaXMuYWNjb3VudC5zaWQgJiYgdGhpcy51c2VyUmVxdWVzdCAmJiB0aGlzLnVzZXJSZXF1ZXN0LnByb21wdCA9PT0gUHJvbXB0VmFsdWUuTk9ORSkge1xyXG4gICAgICAgICAgICAgICAgc2VydmVyUmVxUGFyYW1bU1NPVHlwZXMuU0lEXSA9IHRoaXMuYWNjb3VudC5zaWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5hY2NvdW50LnVzZXJOYW1lKSB7XHJcbiAgICAgICAgICAgICAgICBzZXJ2ZXJSZXFQYXJhbVtTU09UeXBlcy5MT0dJTl9ISU5UXSA9IHRoaXMuYWNjb3VudC51c2VyTmFtZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpZiBubyBhY2NvdW50IGluZm8gYXZhaWxhYmxlLCByZXF1ZXN0LnNpZCA+IHJlcXVlc3QubG9naW5faGludFxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMudXNlclJlcXVlc3QpIHtcclxuICAgICAgICAgICAgLy8gc2lkIGZyb20gcmVxdWVzdCAtIGNhbiBvbmx5IGJlIHBhc3NlZCBpZiBwcm9tcHQgPSBub25lXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVzZXJSZXF1ZXN0LnNpZCAmJiB0aGlzLnVzZXJSZXF1ZXN0LnByb21wdCA9PT0gUHJvbXB0VmFsdWUuTk9ORSkge1xyXG4gICAgICAgICAgICAgICAgc2VydmVyUmVxUGFyYW1bU1NPVHlwZXMuU0lEXSA9IHRoaXMudXNlclJlcXVlc3Quc2lkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIGxvZ2luSGludCBmcm9tIHJlcXVlc3RcclxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy51c2VyUmVxdWVzdC5sb2dpbkhpbnQpIHtcclxuICAgICAgICAgICAgICAgIHNlcnZlclJlcVBhcmFtW1NTT1R5cGVzLkxPR0lOX0hJTlRdID0gdGhpcy51c2VyUmVxdWVzdC5sb2dpbkhpbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gYWRhbElkVG9rZW4gcmV0cmlldmVkIGZyb20gY2FjaGVcclxuICAgICAgICBpZiAoYWRhbElkVG9rZW4gJiYgU3RyaW5nVXRpbHMuaXNFbXB0eShzZXJ2ZXJSZXFQYXJhbVtTU09UeXBlcy5TSURdKSAmJiBTdHJpbmdVdGlscy5pc0VtcHR5KHNlcnZlclJlcVBhcmFtW1NTT1R5cGVzLkxPR0lOX0hJTlRdKSkge1xyXG4gICAgICAgICAgICBpZiAoYWRhbElkVG9rZW4uY2xhaW1zICYmIGFkYWxJZFRva2VuLmNsYWltcy51cG4pIHtcclxuICAgICAgICAgICAgICAgIHNlcnZlclJlcVBhcmFtW1NTT1R5cGVzLkxPR0lOX0hJTlRdID0gYWRhbElkVG9rZW4uY2xhaW1zLnVwbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHNlcnZlclJlcVBhcmFtO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXRpbGl0eSB0byBwb3B1bGF0ZSBRdWVyeVBhcmFtZXRlcnMgYW5kIEV4dHJhUXVlcnlQYXJhbWV0ZXJzIHRvIFNlcnZlclJlcXVlc3RQYXJhbWVyZXJzXHJcbiAgICAgKiBAcGFyYW0gYWRhbElkVG9rZW5PYmplY3QgXHJcbiAgICAgKi9cclxuICAgIHBvcHVsYXRlUXVlcnlQYXJhbXMoYWRhbElkVG9rZW5PYmplY3Q/OiBJZFRva2VuKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHF1ZXJ5UGFyYW1ldGVyczogU3RyaW5nRGljdCA9IHt9O1xyXG5cclxuICAgICAgICBpZiAodGhpcy51c2VyUmVxdWVzdCkge1xyXG4gICAgICAgICAgICAvLyBhZGQgdGhlIHByb21wdCBwYXJhbWV0ZXIgdG8gc2VydmVyUmVxdWVzdFBhcmFtZXRlcnMgaWYgcGFzc2VkXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVzZXJSZXF1ZXN0LnByb21wdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZVByb21wdFBhcmFtZXRlcih0aGlzLnVzZXJSZXF1ZXN0LnByb21wdCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIEFkZCBjbGFpbXMgY2hhbGxlbmdlIHRvIHNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzIGlmIHBhc3NlZFxyXG4gICAgICAgICAgICBpZiAodGhpcy51c2VyUmVxdWVzdC5jbGFpbXNSZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZUNsYWltc1JlcXVlc3QodGhpcy51c2VyUmVxdWVzdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogYWRkcyBzaWQvbG9naW5faGludCBpZiBhbiBTU08gUGFyYW1ldGVyIGlzIGF2YWlsYWJsZVxyXG4gICAgICAgICAqIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJDYWxsaW5nIGFkZEhpbnQgcGFyYW1ldGVyc1wiKTtcclxuICAgICAgICAgKi9cclxuICAgICAgICBpZiAodGhpcy5oYXNTU09QYXJhbSgpIHx8IGFkYWxJZFRva2VuT2JqZWN0KSB7XHJcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1ldGVycyA9IHRoaXMuYWRkU1NPUXVlcnlQYXJhbWV0ZXJzKGFkYWxJZFRva2VuT2JqZWN0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHNhbml0eSBjaGVjayBmb3IgZGV2ZWxvcGVyIHBhc3NlZCBleHRyYVF1ZXJ5UGFyYW1ldGVyc1xyXG4gICAgICAgIGxldCBlUVBhcmFtczogU3RyaW5nRGljdDtcclxuICAgICAgICBpZiAodGhpcy51c2VyUmVxdWVzdCkge1xyXG4gICAgICAgICAgICBlUVBhcmFtcyA9IHRoaXMuc2FuaXRpemVFUVBhcmFtcyh0aGlzLnVzZXJSZXF1ZXN0LCBxdWVyeVBhcmFtZXRlcnMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gUG9wdWxhdGUgdGhlIGV4dHJhUXVlcnlQYXJhbWV0ZXJzIHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlclxyXG4gICAgICAgIHRoaXMucXVlcnlQYXJhbWV0ZXJzID0gdGhpcy5nZW5lcmF0ZVF1ZXJ5UGFyYW1ldGVyc1N0cmluZyhxdWVyeVBhcmFtZXRlcnMpO1xyXG4gICAgICAgIHRoaXMuZXh0cmFRdWVyeVBhcmFtZXRlcnMgPSB0aGlzLmdlbmVyYXRlUXVlcnlQYXJhbWV0ZXJzU3RyaW5nKGVRUGFyYW1zKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSBuYXZpZ2F0aW9uIHVybC5cclxuICAgICAqL1xyXG4gICAgYXN5bmMgY3JlYXRlTmF2aWdhdGVVcmwoKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICAgICAgICBjb25zdCBwYXJhbVN0cmluZ3MgPSBhd2FpdCB0aGlzLmNyZWF0ZVBhcmFtU3RyaW5nKCk7XHJcbiAgICAgICAgbGV0IGF1dGhFbmRwb2ludDogc3RyaW5nID0gdGhpcy5hdXRob3JpdHlJbnN0YW5jZS5hdXRob3JpemF0aW9uRW5kcG9pbnQ7XHJcbiAgICAgICAgLy8gaWYgdGhlIGVuZHBvaW50IGFscmVhZHkgaGFzIHF1ZXJ5cGFyYW1zLCBsZXRzIGFkZCB0byBpdCwgb3RoZXJ3aXNlIGFkZCB0aGUgZmlyc3Qgb25lXHJcbiAgICAgICAgaWYgKGF1dGhFbmRwb2ludC5pbmRleE9mKFwiP1wiKSA8IDApIHtcclxuICAgICAgICAgICAgYXV0aEVuZHBvaW50ICs9IFwiP1wiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGF1dGhFbmRwb2ludCArPSBcIiZcIjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHJlcXVlc3RVcmw6IHN0cmluZyA9IGAke2F1dGhFbmRwb2ludH0ke3BhcmFtU3RyaW5ncy5qb2luKFwiJlwiKX1gO1xyXG4gICAgICAgIHJldHVybiByZXF1ZXN0VXJsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgcXVlcnkgcGFyYW1ldGVyIHN0cmluZy5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBhc3luYyBjcmVhdGVQYXJhbVN0cmluZygpOiBQcm9taXNlPEFycmF5PHN0cmluZz4+IHtcclxuICAgICAgICBjb25zdCBzdHI6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgICAgICBzdHIucHVzaChgJHtBQURTZXJ2ZXJQYXJhbUtleXMuUkVTUE9OU0VfVFlQRX09JHt0aGlzLnJlc3BvbnNlVHlwZX1gKTtcclxuICAgICAgICBzdHIucHVzaChgJHtBQURTZXJ2ZXJQYXJhbUtleXMuU0NPUEV9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMuc2NvcGVzLnByaW50U2NvcGVzKCkpfWApO1xyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSUR9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMuY2xpZW50SWQpfWApO1xyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5SRURJUkVDVF9VUkl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMucmVkaXJlY3RVcmkpfWApO1xyXG5cclxuICAgICAgICBzdHIucHVzaChgJHtBQURTZXJ2ZXJQYXJhbUtleXMuU1RBVEV9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMuc3RhdGUpfWApO1xyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5OT05DRX09JHtlbmNvZGVVUklDb21wb25lbnQodGhpcy5ub25jZSl9YCk7XHJcblxyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSU5GT309MWApO1xyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5YX0NMSUVOVF9TS1V9PSR7dGhpcy54Q2xpZW50U2t1fWApO1xyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5YX0NMSUVOVF9WRVJ9PSR7dGhpcy54Q2xpZW50VmVyfWApO1xyXG5cclxuICAgICAgICAvLyBBZGQgY29kZXMgaGVyZS4gTWF5IHdhbnQgdG8gYWRkIG9wdGlvbmFsIHN0ZXAgdG8gYWxsb3cgZm9yIG5vbi1QS0NFIGF1dGggY29kZSBmbG93c1xyXG4gICAgICAgIHRoaXMuZ2VuZXJhdGVkUGtjZSA9IGF3YWl0IHRoaXMuY3J5cHRvT2JqLmdlbmVyYXRlUGtjZUNvZGVzKCk7XHJcbiAgICAgICAgc3RyLnB1c2goYCR7QUFEU2VydmVyUGFyYW1LZXlzLkNPREVfQ0hBTExFTkdFfT0ke2VuY29kZVVSSUNvbXBvbmVudCh0aGlzLmdlbmVyYXRlZFBrY2UuY2hhbGxlbmdlKX1gKTtcclxuICAgICAgICBzdHIucHVzaChgJHtBQURTZXJ2ZXJQYXJhbUtleXMuQ09ERV9DSEFMTEVOR0VfTUVUSE9EfT0ke0NvbnN0YW50cy5TMjU2X0NPREVfQ0hBTExFTkdFX01FVEhPRH1gKTtcclxuXHJcbiAgICAgICAgLy8gQXBwZW5kIHJlc291cmNlXHJcbiAgICAgICAgaWYgKHRoaXMudXNlclJlcXVlc3QgJiYgdGhpcy51c2VyUmVxdWVzdC5yZXNvdXJjZSkge1xyXG4gICAgICAgICAgICBzdHIucHVzaChgJHtBQURTZXJ2ZXJQYXJhbUtleXMuUkVTT1VSQ0V9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMudXNlclJlcXVlc3QucmVzb3VyY2UpfWApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQXBwZW5kIHByb21wdFxyXG4gICAgICAgIGlmICh0aGlzLnVzZXJSZXF1ZXN0ICYmIHRoaXMudXNlclJlcXVlc3QucHJvbXB0KSB7XHJcbiAgICAgICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5QUk9NUFR9PSR7KGVuY29kZVVSSUNvbXBvbmVudCh0aGlzLnVzZXJSZXF1ZXN0LnByb21wdCkpfWApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQXBwZW5kIGNsYWltcyByZXF1ZXN0XHJcbiAgICAgICAgaWYgKHRoaXMudXNlclJlcXVlc3QgJiYgdGhpcy51c2VyUmVxdWVzdC5jbGFpbXNSZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5DTEFJTVN9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMudXNlclJlcXVlc3QuY2xhaW1zUmVxdWVzdCl9YCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBcHBlbmQgcXVlcnkgcGFyYW1zXHJcbiAgICAgICAgaWYgKHRoaXMucXVlcnlQYXJhbWV0ZXJzKSB7XHJcbiAgICAgICAgICAgIHN0ci5wdXNoKHRoaXMucXVlcnlQYXJhbWV0ZXJzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEFwcGVuZCBleHRyYSBxdWVyeSBwYXJhbXNcclxuICAgICAgICBpZiAodGhpcy5leHRyYVF1ZXJ5UGFyYW1ldGVycykge1xyXG4gICAgICAgICAgICBzdHIucHVzaCh0aGlzLmV4dHJhUXVlcnlQYXJhbWV0ZXJzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfUkVRVUVTVF9JRH09JHtlbmNvZGVVUklDb21wb25lbnQodGhpcy5jb3JyZWxhdGlvbklkKX1gKTtcclxuICAgICAgICBzdHIucHVzaChgJHtBQURTZXJ2ZXJQYXJhbUtleXMuUkVTUE9OU0VfTU9ERX09JHtDb25zdGFudHMuRlJBR01FTlRfUkVTUE9OU0VfTU9ERX1gKTtcclxuICAgICAgICByZXR1cm4gc3RyO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXRpbGl0eSB0byB0ZXN0IGlmIHZhbGlkIHByb21wdCB2YWx1ZSBpcyBwYXNzZWQgaW4gdGhlIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgdmFsaWRhdGVQcm9tcHRQYXJhbWV0ZXIocHJvbXB0OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBpZiAoW1Byb21wdFZhbHVlLkxPR0lOLCBQcm9tcHRWYWx1ZS5TRUxFQ1RfQUNDT1VOVCwgUHJvbXB0VmFsdWUuQ09OU0VOVCwgUHJvbXB0VmFsdWUuTk9ORV0uaW5kZXhPZihwcm9tcHQpIDwgMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlSW52YWxpZFByb21wdEVycm9yKHByb21wdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyB1bm5lY2Vzc2FyeSBvciBkdXBsaWNhdGUgcXVlcnkgcGFyYW1ldGVycyBmcm9tIGV4dHJhUXVlcnlQYXJhbWV0ZXJzXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHNhbml0aXplRVFQYXJhbXMocmVxdWVzdDogQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzLCBzc29RdWVyeVBhcmFtczogU3RyaW5nRGljdCkgOiBTdHJpbmdEaWN0IHtcclxuICAgICAgICBjb25zdCBlUVBhcmFtcyA6IFN0cmluZ0RpY3QgPSByZXF1ZXN0LmV4dHJhUXVlcnlQYXJhbWV0ZXJzO1xyXG4gICAgICAgIGlmICghZVFQYXJhbXMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAocmVxdWVzdC5jbGFpbXNSZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgIC8vIFRPRE86IHRoaXMubG9nZ2VyLmVycm9yKFwiUmVtb3ZlZCBkdXBsaWNhdGUgY2xhaW1zIGZyb20gZXh0cmFRdWVyeVBhcmFtZXRlcnMuIFBsZWFzZSB1c2UgZWl0aGVyIHRoZSBjbGFpbXNSZXF1ZXN0IGZpZWxkIE9SIHBhc3MgYXMgZXh0cmFRdWVyeVBhcmFtZXRlciAtIG5vdCBib3RoLlwiKTtcclxuICAgICAgICAgICAgZGVsZXRlIGVRUGFyYW1zW0NvbnN0YW50cy5DTEFJTVNdO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gUmVtb3ZlIGFueSBxdWVyeSBwYXJhbWV0ZXJzIHRoYXQgYXJlIGJsYWNrbGlzdGVkXHJcbiAgICAgICAgQmxhY2tsaXN0ZWRFUVBhcmFtcy5mb3JFYWNoKHBhcmFtID0+IHtcclxuICAgICAgICAgICAgaWYgKGVRUGFyYW1zW3BhcmFtXSkge1xyXG4gICAgICAgICAgICAgICAgLy8gVE9ETzogdGhpcy5sb2dnZXIuZXJyb3IoXCJSZW1vdmVkIGR1cGxpY2F0ZSBcIiArIHBhcmFtICsgXCIgZnJvbSBleHRyYVF1ZXJ5UGFyYW1ldGVycy4gUGxlYXNlIHVzZSB0aGUgXCIgKyBwYXJhbSArIFwiIGZpZWxkIGluIHJlcXVlc3Qgb2JqZWN0LlwiKTtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSBlUVBhcmFtc1twYXJhbV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gUmVtb3ZlIGFueSBxdWVyeSBwYXJhbWV0ZXJzIGFscmVhZHkgaW5jbHVkZWQgaW4gU1NPIHBhcmFtc1xyXG4gICAgICAgIE9iamVjdC5rZXlzKHNzb1F1ZXJ5UGFyYW1zKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlUVBhcmFtc1trZXldKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiB0aGlzLmxvZ2dlci5lcnJvcihcIlJlbW92ZWQgcGFyYW0gXCIgKyBrZXkgKyBcIiBmcm9tIGV4dHJhUXVlcnlQYXJhbWV0ZXJzIHNpbmNlIGl0IHdhcyBhbHJlYWR5IHByZXNlbnQgaW4gbGlicmFyeSBxdWVyeSBwYXJhbWV0ZXJzLlwiKVxyXG4gICAgICAgICAgICAgICAgZGVsZXRlIGVRUGFyYW1zW2tleV07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFNTT1R5cGVzLlNJRCkge1xyXG4gICAgICAgICAgICAgICAgLy8gVE9ETzogdGhpcy5sb2dnZXIuZXJyb3IoXCJSZW1vdmVkIGRvbWFpbiBoaW50IHNpbmNlIHNpZCB3YXMgcHJvdmlkZWQuXCIpXHJcbiAgICAgICAgICAgICAgICBkZWxldGUgZVFQYXJhbXNbU1NPVHlwZXMuRE9NQUlOX0hJTlRdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBlUVBhcmFtcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFV0aWxpdHkgdG8gZ2VuZXJhdGUgYSBRdWVyeVBhcmFtZXRlclN0cmluZyBmcm9tIGEgS2V5LVZhbHVlIG1hcHBpbmcgb2YgZXh0cmFRdWVyeVBhcmFtZXRlcnMgcGFzc2VkXHJcbiAgICAgKiBAcGFyYW0gZXh0cmFRdWVyeVBhcmFtZXRlcnNcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBnZW5lcmF0ZVF1ZXJ5UGFyYW1ldGVyc1N0cmluZyhxdWVyeVBhcmFtZXRlcnM6IFN0cmluZ0RpY3QpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCBwYXJhbXNTdHJpbmc6IHN0cmluZyA9IFwiXCI7XHJcblxyXG4gICAgICAgIGlmIChxdWVyeVBhcmFtZXRlcnMpIHtcclxuICAgICAgICAgICAgT2JqZWN0LmtleXMocXVlcnlQYXJhbWV0ZXJzKS5mb3JFYWNoKChrZXk6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKFN0cmluZ1V0aWxzLmlzRW1wdHkocGFyYW1zU3RyaW5nKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtc1N0cmluZyA9IGAke2tleX09JHtlbmNvZGVVUklDb21wb25lbnQocXVlcnlQYXJhbWV0ZXJzW2tleV0pfWA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBwYXJhbXNTdHJpbmcgKz0gYCYke2tleX09JHtlbmNvZGVVUklDb21wb25lbnQocXVlcnlQYXJhbWV0ZXJzW2tleV0pfWA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHBhcmFtc1N0cmluZztcclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHBrZyBmcm9tIFwiLi4vLi4vcGFja2FnZS5qc29uXCI7XHJcbmltcG9ydCB7IFNjb3BlU2V0IH0gZnJvbSBcIi4uL2F1dGgvU2NvcGVTZXRcIjtcclxuaW1wb3J0IHsgVG9rZW5FeGNoYW5nZVBhcmFtZXRlcnMgfSBmcm9tIFwiLi4vcmVxdWVzdC9Ub2tlbkV4Y2hhbmdlUGFyYW1ldGVyc1wiO1xyXG5pbXBvcnQgeyBDb2RlUmVzcG9uc2UgfSBmcm9tIFwiLi4vcmVzcG9uc2UvQ29kZVJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IENsaWVudEF1dGhFcnJvciB9IGZyb20gXCIuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JcIjtcclxuaW1wb3J0IHsgSUNyeXB0byB9IGZyb20gXCIuLi9jcnlwdG8vSUNyeXB0b1wiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBDb25zdGFudHMsIEhFQURFUl9OQU1FUywgQUFEU2VydmVyUGFyYW1LZXlzIH0gZnJvbSBcIi4uL3V0aWxzL0NvbnN0YW50c1wiO1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgY2xhc3MgZXh0ZW5kcyB0aGUgU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMgY2xhc3MuIFRoaXMgY2xhc3MgdmFsaWRhdGVzIHRva2VuIHJlcXVlc3QgcGFyYW1ldGVycyBhbmQgZ2VuZXJhdGVzIGEgZm9ybSBib2R5IGFuZCBoZWFkZXJzIHJlcXVpcmVkIGZvciB0aGUgcmVxdWVzdC5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTZXJ2ZXJUb2tlblJlcXVlc3RQYXJhbWV0ZXJzIHtcclxuXHJcbiAgICAvLyBDcnlwdG8gZnVuY3Rpb25zXHJcbiAgICBwcml2YXRlIGNyeXB0b09iajogSUNyeXB0bztcclxuXHJcbiAgICAvLyBUZWxlbWV0cnkgSW5mb1xyXG4gICAgeENsaWVudFZlcjogc3RyaW5nO1xyXG4gICAgeENsaWVudFNrdTogc3RyaW5nO1xyXG4gICAgY29ycmVsYXRpb25JZDogc3RyaW5nO1xyXG5cclxuICAgIC8vIFBhcmFtc1xyXG4gICAgY2xpZW50SWQ6IHN0cmluZztcclxuICAgIHNjb3BlczogU2NvcGVTZXQ7XHJcbiAgICByZWRpcmVjdFVyaTogc3RyaW5nO1xyXG4gICAgdG9rZW5SZXF1ZXN0OiBUb2tlbkV4Y2hhbmdlUGFyYW1ldGVycztcclxuICAgIGNvZGVSZXNwb25zZTogQ29kZVJlc3BvbnNlO1xyXG4gICAgcmVmcmVzaFRva2VuOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY2xpZW50SWQ6IHN0cmluZywgdG9rZW5SZXF1ZXN0OiBUb2tlbkV4Y2hhbmdlUGFyYW1ldGVycywgY29kZVJlc3BvbnNlOiBDb2RlUmVzcG9uc2UsIHJlZGlyZWN0VXJpOiBzdHJpbmcsIGNyeXB0b0ltcGw6IElDcnlwdG8sIHJlZnJlc2hUb2tlbj86IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuY2xpZW50SWQgPSBjbGllbnRJZDtcclxuICAgICAgICB0aGlzLmNyeXB0b09iaiA9IGNyeXB0b0ltcGw7XHJcbiAgICAgICAgdGhpcy5yZWRpcmVjdFVyaSA9IHJlZGlyZWN0VXJpO1xyXG5cclxuICAgICAgICAvLyBUZWxlbWV0cnkgSW5mb1xyXG4gICAgICAgIHRoaXMueENsaWVudFNrdSA9IENvbnN0YW50cy5MSUJSQVJZX05BTUU7XHJcbiAgICAgICAgdGhpcy54Q2xpZW50VmVyID0gcGtnLnZlcnNpb247XHJcblxyXG4gICAgICAgIHRoaXMudG9rZW5SZXF1ZXN0ID0gdG9rZW5SZXF1ZXN0O1xyXG4gICAgICAgIHRoaXMuY29kZVJlc3BvbnNlID0gY29kZVJlc3BvbnNlO1xyXG4gICAgICAgIHRoaXMucmVmcmVzaFRva2VuID0gcmVmcmVzaFRva2VuO1xyXG5cclxuICAgICAgICAvLyBTZXQgc2NvcGVzLCBhbHdheXMgcmVxdWlyZWQgZm9yIHRva2VuIHJlcXVlc3QvZXhjaGFuZ2VcclxuICAgICAgICB0aGlzLnNjb3BlcyA9IG5ldyBTY29wZVNldChcclxuICAgICAgICAgICAgKHRoaXMudG9rZW5SZXF1ZXN0ICYmIHRoaXMudG9rZW5SZXF1ZXN0LnNjb3BlcykgfHwgW10sIFxyXG4gICAgICAgICAgICB0aGlzLmNsaWVudElkLCBcclxuICAgICAgICAgICAgdHJ1ZVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIC8vIFNldCBjb3JyZWxhdGlvbiBpZFxyXG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9IHRoaXMudG9rZW5SZXF1ZXN0LmNvcnJlbGF0aW9uSWQgfHwgdGhpcy5jcnlwdG9PYmouY3JlYXRlTmV3R3VpZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBoZWFkZXJzIHJlcXVpcmVkIGZvciB0b2tlbiByZXF1ZXN0LlxyXG4gICAgICovXHJcbiAgICBjcmVhdGVSZXF1ZXN0SGVhZGVycygpOiBNYXA8c3RyaW5nLCBzdHJpbmc+IHtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZz4oKTtcclxuICAgICAgICBoZWFkZXJzLnNldChIRUFERVJfTkFNRVMuQ09OVEVOVF9UWVBFLCBDb25zdGFudHMuVVJMX0ZPUk1fQ09OVEVOVF9UWVBFKTtcclxuICAgICAgICByZXR1cm4gaGVhZGVycztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgc3RyaW5nIG9mIHBhcmFtZXRlcnMgdG8gc2VuZCB0byBzZXJ2ZXIgaW4gcmVxdWVzdCBib2R5LlxyXG4gICAgICovXHJcbiAgICBjcmVhdGVSZXF1ZXN0Qm9keSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHBhcmFtU3RyaW5nID0gdGhpcy5jcmVhdGVQYXJhbVN0cmluZygpO1xyXG4gICAgICAgIHJldHVybiBwYXJhbVN0cmluZy5qb2luKFwiJlwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBjcmVhdGVzIGFuIGFycmF5IG9mIGtleSB2YWx1ZSBzdHJpbmcgcGFpcnMuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY3JlYXRlUGFyYW1TdHJpbmcoKTogQXJyYXk8c3RyaW5nPiB7XHJcbiAgICAgICAgY29uc3Qgc3RyOiBBcnJheTxzdHJpbmc+ID0gW107XHJcblxyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSUR9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMuY2xpZW50SWQpfWApO1xyXG4gICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5TQ09QRX09JHtlbmNvZGVVUklDb21wb25lbnQodGhpcy5zY29wZXMucHJpbnRTY29wZXMoKSl9YCk7XHJcbiAgICAgICAgc3RyLnB1c2goYCR7QUFEU2VydmVyUGFyYW1LZXlzLlJFRElSRUNUX1VSSX09JHtlbmNvZGVVUklDb21wb25lbnQodGhpcy5yZWRpcmVjdFVyaSl9YCk7XHJcbiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBjb2RlIHJlc3BvbnNlIG9yIHJlZnJlc2ggdG9rZW4sIHB1c2ggcmVsZXZhbnQgdmFyaWFibGVzLiBUaHJvdyBlcnJvciBvdGhlcndpc2UuXHJcbiAgICAgICAgaWYgKHRoaXMuY29kZVJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5DT0RFfT0ke2VuY29kZVVSSUNvbXBvbmVudCh0aGlzLmNvZGVSZXNwb25zZS5jb2RlKX1gKTtcclxuICAgICAgICAgICAgc3RyLnB1c2goYCR7QUFEU2VydmVyUGFyYW1LZXlzLkNPREVfVkVSSUZJRVJ9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMudG9rZW5SZXF1ZXN0LmNvZGVWZXJpZmllcil9YCk7XHJcbiAgICAgICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5HUkFOVF9UWVBFfT0ke0NvbnN0YW50cy5DT0RFX0dSQU5UX1RZUEV9YCk7XHJcbiAgICAgICAgfSBlbHNlIGlmICghU3RyaW5nVXRpbHMuaXNFbXB0eSh0aGlzLnJlZnJlc2hUb2tlbikpIHtcclxuICAgICAgICAgICAgc3RyLnB1c2goYCR7QUFEU2VydmVyUGFyYW1LZXlzLlJFRlJFU0hfVE9LRU59PSR7dGhpcy5yZWZyZXNoVG9rZW59YCk7XHJcbiAgICAgICAgICAgIHN0ci5wdXNoKGAke0FBRFNlcnZlclBhcmFtS2V5cy5HUkFOVF9UWVBFfT0ke0NvbnN0YW50cy5SVF9HUkFOVF9UWVBFfWApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVUb2tlblJlcXVlc3RDYW5ub3RCZU1hZGVFcnJvcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHN0cjtcclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBVdGlsaXR5IGNsYXNzIHdoaWNoIGV4cG9zZXMgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBkYXRlIGFuZCB0aW1lIG9wZXJhdGlvbnMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgVGltZVV0aWxzIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybiB0aGUgY3VycmVudCB0aW1lIGluIFVuaXggdGltZSAoc2Vjb25kcykuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBub3dTZWNvbmRzKCk6IG51bWJlciB7XHJcbiAgICAgICAgLy8gRGF0ZS5nZXRUaW1lKCkgcmV0dXJucyBpbiBtaWxsaXNlY29uZHMuXHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQobmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwLjApO1xyXG4gICAgfVxyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyBTZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlIH0gZnJvbSBcIi4uL3NlcnZlci9TZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gXCIuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JcIjtcclxuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSBcIi4uL2Vycm9yL0NsaWVudEF1dGhFcnJvclwiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBJVXJpIH0gZnJvbSBcIi4vSVVyaVwiO1xyXG5pbXBvcnQgeyBBQURBdXRob3JpdHlDb25zdGFudHMgfSBmcm9tIFwiLi4vdXRpbHMvQ29uc3RhbnRzXCI7XHJcblxyXG4vKipcclxuICogVXJsIG9iamVjdCBjbGFzcyB3aGljaCBjYW4gcGVyZm9ybSB2YXJpb3VzIHRyYW5zZm9ybWF0aW9ucyBvbiB1cmwgc3RyaW5ncy5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBVcmxTdHJpbmcge1xyXG5cclxuICAgIC8vIGludGVybmFsIHVybCBzdHJpbmcgZmllbGRcclxuICAgIHByaXZhdGUgX3VybFN0cmluZzogc3RyaW5nO1xyXG4gICAgcHVibGljIGdldCB1cmxTdHJpbmcoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdXJsU3RyaW5nO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3Rvcih1cmw6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX3VybFN0cmluZyA9IHVybDtcclxuICAgICAgICBpZiAoIVN0cmluZ1V0aWxzLmlzRW1wdHkodGhpcy5fdXJsU3RyaW5nKSAmJiBTdHJpbmdVdGlscy5pc0VtcHR5KHRoaXMuZ2V0SGFzaCgpKSkge1xyXG4gICAgICAgICAgICB0aGlzLl91cmxTdHJpbmcgPSB0aGlzLmNhbm9uaWNhbGl6ZVVyaSh1cmwpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eSh0aGlzLl91cmxTdHJpbmcpKSB7XHJcbiAgICAgICAgICAgIC8vIFRocm93cyBlcnJvciBpZiB1cmwgaXMgZW1wdHlcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZVVybEVtcHR5RXJyb3IoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFbnN1cmUgdXJscyBhcmUgbG93ZXIgY2FzZSBhbmQgZW5kIHdpdGggYSAvIGNoYXJhY3Rlci5cclxuICAgICAqIEBwYXJhbSB1cmwgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2Fub25pY2FsaXplVXJpKHVybDogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodXJsKSB7XHJcbiAgICAgICAgICAgIHVybCA9IHVybC50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHVybCAmJiAhdXJsLmVuZHNXaXRoKFwiL1wiKSkge1xyXG4gICAgICAgICAgICB1cmwgKz0gXCIvXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdXJsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhyb3dzIGlmIHVybFN0cmluZyBwYXNzZWQgaXMgbm90IGEgdmFsaWQgYXV0aG9yaXR5IFVSSSBzdHJpbmcuXHJcbiAgICAgKi9cclxuICAgIHZhbGlkYXRlQXNVcmkoKTogdm9pZCB7XHJcbiAgICAgICAgLy8gQXR0ZW1wdHMgdG8gcGFyc2UgdXJsIGZvciB1cmkgY29tcG9uZW50c1xyXG4gICAgICAgIGxldCBjb21wb25lbnRzO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbXBvbmVudHMgPSB0aGlzLmdldFVybENvbXBvbmVudHMoKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudENvbmZpZ3VyYXRpb25FcnJvci5jcmVhdGVVcmxQYXJzZUVycm9yKGUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gVGhyb3cgZXJyb3IgaWYgVVJJIG9yIHBhdGggc2VnbWVudHMgYXJlIG5vdCBwYXJzZWFibGUuXHJcbiAgICAgICAgaWYgKCFjb21wb25lbnRzLkhvc3ROYW1lQW5kUG9ydCB8fCAhY29tcG9uZW50cy5QYXRoU2VnbWVudHMgfHwgY29tcG9uZW50cy5QYXRoU2VnbWVudHMubGVuZ3RoIDwgMSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlVXJsUGFyc2VFcnJvcihgR2l2ZW4gdXJsIHN0cmluZzogJHt0aGlzLnVybFN0cmluZ31gKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFRocm93IGVycm9yIGlmIHVyaSBpcyBpbnNlY3VyZS5cclxuICAgICAgICBpZighY29tcG9uZW50cy5Qcm90b2NvbCB8fCBjb21wb25lbnRzLlByb3RvY29sLnRvTG93ZXJDYXNlKCkgIT09IFwiaHR0cHM6XCIpIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUluc2VjdXJlQXV0aG9yaXR5VXJpRXJyb3IodGhpcy51cmxTdHJpbmcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZ1bmN0aW9uIHRvIHJlbW92ZSBxdWVyeSBzdHJpbmcgcGFyYW1zIGZyb20gdXJsLiBSZXR1cm5zIHRoZSBuZXcgdXJsLlxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIG5hbWVcclxuICAgICAqL1xyXG4gICAgdXJsUmVtb3ZlUXVlcnlTdHJpbmdQYXJhbWV0ZXIobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgcmVnZXggPSBuZXcgUmVnRXhwKFwiKFxcXFwmXCIgKyBuYW1lICsgXCI9KVteXFwmXStcIik7XHJcbiAgICAgICAgdGhpcy5fdXJsU3RyaW5nID0gdGhpcy51cmxTdHJpbmcucmVwbGFjZShyZWdleCwgXCJcIik7XHJcbiAgICAgICAgLy8gbmFtZT12YWx1ZSZcclxuICAgICAgICByZWdleCA9IG5ldyBSZWdFeHAoXCIoXCIgKyBuYW1lICsgXCI9KVteXFwmXSsmXCIpO1xyXG4gICAgICAgIHRoaXMuX3VybFN0cmluZyA9IHRoaXMudXJsU3RyaW5nLnJlcGxhY2UocmVnZXgsIFwiXCIpO1xyXG4gICAgICAgIC8vIG5hbWU9dmFsdWVcclxuICAgICAgICByZWdleCA9IG5ldyBSZWdFeHAoXCIoXCIgKyBuYW1lICsgXCI9KVteXFwmXStcIik7XHJcbiAgICAgICAgdGhpcy5fdXJsU3RyaW5nID0gdGhpcy51cmxTdHJpbmcucmVwbGFjZShyZWdleCwgXCJcIik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudXJsU3RyaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2l2ZW4gYSB1cmwgbGlrZSBodHRwczovL2E6Yi9jb21tb24vZD9lPWYjZywgYW5kIGEgdGVuYW50SWQsIHJldHVybnMgaHR0cHM6Ly9hOmIvdGVuYW50SWQvZFxyXG4gICAgICogQHBhcmFtIGhyZWYgVGhlIHVybFxyXG4gICAgICogQHBhcmFtIHRlbmFudElkIFRoZSB0ZW5hbnQgaWQgdG8gcmVwbGFjZVxyXG4gICAgICovXHJcbiAgICByZXBsYWNlVGVuYW50UGF0aCh0ZW5hbnRJZDogc3RyaW5nKTogVXJsU3RyaW5nIHtcclxuICAgICAgICBjb25zdCB1cmxPYmplY3QgPSB0aGlzLmdldFVybENvbXBvbmVudHMoKTtcclxuICAgICAgICBjb25zdCBwYXRoQXJyYXkgPSB1cmxPYmplY3QuUGF0aFNlZ21lbnRzO1xyXG4gICAgICAgIGlmICh0ZW5hbnRJZCAmJiAocGF0aEFycmF5Lmxlbmd0aCAhPT0gMCAmJiAocGF0aEFycmF5WzBdID09PSBBQURBdXRob3JpdHlDb25zdGFudHMuQ09NTU9OIHx8IHBhdGhBcnJheVswXSA9PT0gQUFEQXV0aG9yaXR5Q29uc3RhbnRzLk9SR0FOSVpBVElPTlMpKSkge1xyXG4gICAgICAgICAgICBwYXRoQXJyYXlbMF0gPSB0ZW5hbnRJZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFVybFN0cmluZy5jb25zdHJ1Y3RBdXRob3JpdHlVcmlGcm9tT2JqZWN0KHVybE9iamVjdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBhbmNob3IgcGFydCgjKSBvZiB0aGUgVVJMXHJcbiAgICAgKi9cclxuICAgIGdldEhhc2goKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBoYXNoSW5kZXgxID0gdGhpcy51cmxTdHJpbmcuaW5kZXhPZihcIiNcIik7XHJcbiAgICAgICAgY29uc3QgaGFzaEluZGV4MiA9IHRoaXMudXJsU3RyaW5nLmluZGV4T2YoXCIjL1wiKTtcclxuICAgICAgICBpZiAoaGFzaEluZGV4MiA+IC0xKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnVybFN0cmluZy5zdWJzdHJpbmcoaGFzaEluZGV4MiArIDIpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaGFzaEluZGV4MSA+IC0xKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnVybFN0cmluZy5zdWJzdHJpbmcoaGFzaEluZGV4MSArIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgZGVzZXJpYWxpemVkIHBvcnRpb24gb2YgVVJMIGhhc2hcclxuICAgICAqL1xyXG4gICAgZ2V0RGVzZXJpYWxpemVkSGFzaDxUPigpOiBUIHtcclxuICAgICAgICBjb25zdCBoYXNoID0gdGhpcy5nZXRIYXNoKCk7XHJcbiAgICAgICAgY29uc3QgZGVzZXJpYWxpemVkSGFzaDogVCA9IFN0cmluZ1V0aWxzLnF1ZXJ5U3RyaW5nVG9PYmplY3Q8VD4oaGFzaCk7XHJcbiAgICAgICAgaWYgKCFkZXNlcmlhbGl6ZWRIYXNoKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVIYXNoTm90RGVzZXJpYWxpemVkRXJyb3IoSlNPTi5zdHJpbmdpZnkoZGVzZXJpYWxpemVkSGFzaCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGVzZXJpYWxpemVkSGFzaDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlcyBvdXQgdGhlIGNvbXBvbmVudHMgZnJvbSBhIHVybCBzdHJpbmcuXHJcbiAgICAgKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCB0aGUgdmFyaW91cyBjb21wb25lbnRzLiBQbGVhc2UgY2FjaGUgdGhpcyB2YWx1ZSBpbnN0ZWQgb2YgY2FsbGluZyB0aGlzIG11bHRpcGxlIHRpbWVzIG9uIHRoZSBzYW1lIHVybC5cclxuICAgICAqL1xyXG4gICAgZ2V0VXJsQ29tcG9uZW50cygpOiBJVXJpIHtcclxuICAgICAgICAvLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9jdXJ0aXN6LzExMTM5YjJjZmNhZWY0YTI2MWUwXHJcbiAgICAgICAgY29uc3QgcmVnRXggPSBSZWdFeHAoXCJeKChbXjovPyNdKyk6KT8oLy8oW14vPyNdKikpPyhbXj8jXSopKFxcXFw/KFteI10qKSk/KCMoLiopKT9cIik7XHJcblxyXG4gICAgICAgIC8vIElmIHVybCBzdHJpbmcgZG9lcyBub3QgbWF0Y2ggcmVnRXgsIHdlIHRocm93IGFuIGVycm9yXHJcbiAgICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLnVybFN0cmluZy5tYXRjaChyZWdFeCk7XHJcbiAgICAgICAgaWYgKCFtYXRjaCkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlVXJsUGFyc2VFcnJvcihgR2l2ZW4gdXJsIHN0cmluZzogJHt0aGlzLnVybFN0cmluZ31gKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFVybCBjb21wb25lbnQgb2JqZWN0XHJcbiAgICAgICAgY29uc3QgdXJsQ29tcG9uZW50cyA9IHtcclxuICAgICAgICAgICAgUHJvdG9jb2w6IG1hdGNoWzFdLFxyXG4gICAgICAgICAgICBIb3N0TmFtZUFuZFBvcnQ6IG1hdGNoWzRdLFxyXG4gICAgICAgICAgICBBYnNvbHV0ZVBhdGg6IG1hdGNoWzVdXHJcbiAgICAgICAgfSBhcyBJVXJpO1xyXG5cclxuICAgICAgICBsZXQgcGF0aFNlZ21lbnRzID0gdXJsQ29tcG9uZW50cy5BYnNvbHV0ZVBhdGguc3BsaXQoXCIvXCIpO1xyXG4gICAgICAgIHBhdGhTZWdtZW50cyA9IHBhdGhTZWdtZW50cy5maWx0ZXIoKHZhbCkgPT4gdmFsICYmIHZhbC5sZW5ndGggPiAwKTsgLy8gcmVtb3ZlIGVtcHR5IGVsZW1lbnRzXHJcbiAgICAgICAgdXJsQ29tcG9uZW50cy5QYXRoU2VnbWVudHMgPSBwYXRoU2VnbWVudHM7XHJcbiAgICAgICAgcmV0dXJuIHVybENvbXBvbmVudHM7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNvbnN0cnVjdEF1dGhvcml0eVVyaUZyb21PYmplY3QodXJsT2JqZWN0OiBJVXJpKTogVXJsU3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gbmV3IFVybFN0cmluZyh1cmxPYmplY3QuUHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxPYmplY3QuSG9zdE5hbWVBbmRQb3J0ICsgXCIvXCIgKyB1cmxPYmplY3QuUGF0aFNlZ21lbnRzLmpvaW4oXCIvXCIpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIHRoZSBoYXNoIG9mIHRoZSBVUkwgc3RyaW5nIGNvbnRhaW5zIGtub3duIHByb3BlcnRpZXNcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGhhc2hDb250YWluc0tub3duUHJvcGVydGllcyh1cmw6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmIChTdHJpbmdVdGlscy5pc0VtcHR5KHVybCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCB1cmxTdHJpbmcgPSBuZXcgVXJsU3RyaW5nKHVybCk7XHJcbiAgICAgICAgY29uc3QgcGFyYW1ldGVycyA9IHVybFN0cmluZy5nZXREZXNlcmlhbGl6ZWRIYXNoPFNlcnZlckF1dGhvcml6YXRpb25Db2RlUmVzcG9uc2U+KCk7XHJcbiAgICAgICAgcmV0dXJuICEhKFxyXG4gICAgICAgICAgICBwYXJhbWV0ZXJzLmVycm9yX2Rlc2NyaXB0aW9uIHx8XHJcbiAgICAgICAgICAgIHBhcmFtZXRlcnMuZXJyb3IgfHxcclxuICAgICAgICAgICAgcGFyYW1ldGVycy5zdGF0ZVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IElDcnlwdG8gfSBmcm9tIFwiLi4vY3J5cHRvL0lDcnlwdG9cIjtcclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvU3RyaW5nVXRpbHNcIjtcclxuaW1wb3J0IHsgVXJsU3RyaW5nIH0gZnJvbSBcIi4uL3VybC9VcmxTdHJpbmdcIjtcclxuXHJcbi8qKlxyXG4gKiBLZXkgdG8gY2FjaGUgYWNjZXNzIHRva2VucywgaWQgdG9rZW5zLCBhbmQgcmVmcmVzaCB0b2tlbnMuIEhlbHBzIG1hbmFnZSB0b2tlbiByZW5ld2FsLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEFjY2Vzc1Rva2VuS2V5IHtcclxuXHJcbiAgICBhdXRob3JpdHk6IHN0cmluZztcclxuICAgIGNsaWVudElkOiBzdHJpbmc7XHJcbiAgICBzY29wZXM6IHN0cmluZztcclxuICAgIHJlc291cmNlOiBzdHJpbmc7XHJcbiAgICBob21lQWNjb3VudElkZW50aWZpZXI6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihhdXRob3JpdHk6IHN0cmluZywgY2xpZW50SWQ6IHN0cmluZywgc2NvcGVzOiBzdHJpbmcsIHJlc291cmNlOiBzdHJpbmcsIHVpZDogc3RyaW5nLCB1dGlkOiBzdHJpbmcsIGNyeXB0b09iajogSUNyeXB0bykge1xyXG4gICAgICAgIGNvbnN0IGF1dGhvcml0eVVyaSA9IG5ldyBVcmxTdHJpbmcoYXV0aG9yaXR5KTtcclxuICAgICAgICB0aGlzLmF1dGhvcml0eSA9IGF1dGhvcml0eVVyaS51cmxTdHJpbmc7XHJcbiAgICAgICAgdGhpcy5jbGllbnRJZCA9IGNsaWVudElkO1xyXG4gICAgICAgIHRoaXMuc2NvcGVzID0gc2NvcGVzO1xyXG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByZXNvdXJjZTtcclxuICAgICAgICBpZiAoIVN0cmluZ1V0aWxzLmlzRW1wdHkodWlkKSAmJiAhU3RyaW5nVXRpbHMuaXNFbXB0eSh1dGlkKSkge1xyXG4gICAgICAgICAgICB0aGlzLmhvbWVBY2NvdW50SWRlbnRpZmllciA9IGAke2NyeXB0b09iai5iYXNlNjRFbmNvZGUodWlkKX0uJHtjcnlwdG9PYmouYmFzZTY0RW5jb2RlKHV0aWQpfWA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFZhbHVlIG9mIGFjY2VzcyB0b2tlbiBjYWNoZSBpdGVtIHdoaWNoIGlzIHN0b3JlZCBpbiBjYWNoZS4gSGVscHMgbWFuYWdlIHRva2VuIHJlbmV3YWwuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQWNjZXNzVG9rZW5WYWx1ZSB7XHJcblxyXG4gICAgdG9rZW5UeXBlOiBzdHJpbmc7XHJcbiAgICBhY2Nlc3NUb2tlbjogc3RyaW5nO1xyXG4gICAgaWRUb2tlbjogc3RyaW5nO1xyXG4gICAgcmVmcmVzaFRva2VuOiBzdHJpbmc7XHJcbiAgICBleHBpcmVzT25TZWM6IHN0cmluZztcclxuICAgIGV4dEV4cGlyZXNPblNlYzogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHRva2VuVHlwZTogc3RyaW5nLCBhY2Nlc3NUb2tlbjogc3RyaW5nLCBpZFRva2VuOiBzdHJpbmcsIHJlZnJlc2hUb2tlbjogc3RyaW5nLCBleHBpcmVzT246IHN0cmluZywgZXh0RXhwaXJlc09uOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLnRva2VuVHlwZSA9IHRva2VuVHlwZTtcclxuICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gYWNjZXNzVG9rZW47XHJcbiAgICAgICAgdGhpcy5pZFRva2VuID0gaWRUb2tlbjtcclxuICAgICAgICB0aGlzLnJlZnJlc2hUb2tlbiA9IHJlZnJlc2hUb2tlbjtcclxuICAgICAgICB0aGlzLmV4cGlyZXNPblNlYyA9IGV4cGlyZXNPbjtcclxuICAgICAgICB0aGlzLmV4dEV4cGlyZXNPblNlYyA9IGV4dEV4cGlyZXNPbjtcclxuICAgIH1cclxufVxyXG4iLCIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSBcIi4vQXV0aEVycm9yXCI7XHJcblxyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3Igd2l0aCB0aGUgc2VydmVyIGNvZGUsIGZvciBleGFtcGxlLCB1bmF2YWlsYWJpbGl0eS5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlOiBzdHJpbmcsIGVycm9yTWVzc2FnZT86IHN0cmluZykge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIlNlcnZlckVycm9yXCI7XHJcblxyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBTZXJ2ZXJFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgfVxyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyBJZFRva2VuIH0gZnJvbSBcIi4uL2F1dGgvSWRUb2tlblwiO1xyXG5pbXBvcnQgeyBDYWNoZUhlbHBlcnMgfSBmcm9tIFwiLi4vY2FjaGUvQ2FjaGVIZWxwZXJzXCI7XHJcbmltcG9ydCB7IFNlcnZlckF1dGhvcml6YXRpb25Ub2tlblJlc3BvbnNlIH0gZnJvbSBcIi4uL3NlcnZlci9TZXJ2ZXJBdXRob3JpemF0aW9uVG9rZW5SZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBTY29wZVNldCB9IGZyb20gXCIuLi9hdXRoL1Njb3BlU2V0XCI7XHJcbmltcG9ydCB7IGJ1aWxkQ2xpZW50SW5mbywgQ2xpZW50SW5mbyB9IGZyb20gXCIuLi9hdXRoL0NsaWVudEluZm9cIjtcclxuaW1wb3J0IHsgQWNjb3VudCB9IGZyb20gXCIuLi9hdXRoL0FjY291bnRcIjtcclxuaW1wb3J0IHsgUHJvdG9jb2xVdGlscyB9IGZyb20gXCIuLi91dGlscy9Qcm90b2NvbFV0aWxzXCI7XHJcbmltcG9ydCB7IElDcnlwdG8gfSBmcm9tIFwiLi4vY3J5cHRvL0lDcnlwdG9cIjtcclxuaW1wb3J0IHsgSUNhY2hlU3RvcmFnZSB9IGZyb20gXCIuLi9jYWNoZS9JQ2FjaGVTdG9yYWdlXCI7XHJcbmltcG9ydCB7IFRva2VuUmVzcG9uc2UgfSBmcm9tIFwiLi9Ub2tlblJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IFBlcnNpc3RlbnRDYWNoZUtleXMsIFRlbXBvcmFyeUNhY2hlS2V5cyB9IGZyb20gXCIuLi91dGlscy9Db25zdGFudHNcIjtcclxuaW1wb3J0IHsgQ2xpZW50QXV0aEVycm9yIH0gZnJvbSBcIi4uL2Vycm9yL0NsaWVudEF1dGhFcnJvclwiO1xyXG5pbXBvcnQgeyBUaW1lVXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvVGltZVV0aWxzXCI7XHJcbmltcG9ydCB7IEFjY2Vzc1Rva2VuS2V5IH0gZnJvbSBcIi4uL2NhY2hlL0FjY2Vzc1Rva2VuS2V5XCI7XHJcbmltcG9ydCB7IEFjY2Vzc1Rva2VuVmFsdWUgfSBmcm9tIFwiLi4vY2FjaGUvQWNjZXNzVG9rZW5WYWx1ZVwiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlIH0gZnJvbSBcIi4uL3NlcnZlci9TZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IENvZGVSZXNwb25zZSB9IGZyb20gXCIuL0NvZGVSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tIFwiLi4vbG9nZ2VyL0xvZ2dlclwiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJFcnJvciB9IGZyb20gXCIuLi9lcnJvci9TZXJ2ZXJFcnJvclwiO1xyXG5cclxuLyoqXHJcbiAqIENsYXNzIHRoYXQgaGFuZGxlcyByZXNwb25zZSBwYXJzaW5nLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFJlc3BvbnNlSGFuZGxlciB7XHJcbiAgICBwcml2YXRlIGNsaWVudElkOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGNhY2hlU3RvcmFnZTogSUNhY2hlU3RvcmFnZTtcclxuICAgIHByaXZhdGUgY2FjaGVNYW5hZ2VyOiBDYWNoZUhlbHBlcnM7XHJcbiAgICBwcml2YXRlIGNyeXB0b09iajogSUNyeXB0bztcclxuICAgIHByaXZhdGUgbG9nZ2VyOiBMb2dnZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY2xpZW50SWQ6IHN0cmluZywgY2FjaGVTdG9yYWdlOiBJQ2FjaGVTdG9yYWdlLCBjYWNoZU1hbmFnZXI6IENhY2hlSGVscGVycywgY3J5cHRvT2JqOiBJQ3J5cHRvLCBsb2dnZXI6IExvZ2dlcikge1xyXG4gICAgICAgIHRoaXMuY2xpZW50SWQgPSBjbGllbnRJZDtcclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZSA9IGNhY2hlU3RvcmFnZTtcclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlciA9IGNhY2hlTWFuYWdlcjtcclxuICAgICAgICB0aGlzLmNyeXB0b09iaiA9IGNyeXB0b09iajtcclxuICAgICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBuZXcgcmVzcG9uc2Ugd2l0aCB0aGUgZGF0YSBmcm9tIG9yaWdpbmFsIHJlc3BvbnNlIGZpbGxlZCB3aXRoIHRoZSByZWxldmFudCBJZFRva2VuIGRhdGEuXHJcbiAgICAgKiAtIHJhdyBpZCB0b2tlblxyXG4gICAgICogLSBpZCB0b2tlbiBjbGFpbXNcclxuICAgICAqIC0gdW5pcXVlIGlkIChvaWQgb3Igc3ViIGNsYWltIG9mIHRva2VuKVxyXG4gICAgICogLSB0ZW5hbnQgaWQgKHRpZCBjbGFpbSBvZiB0b2tlbilcclxuICAgICAqIEBwYXJhbSBvcmlnaW5hbFJlc3BvbnNlIFxyXG4gICAgICogQHBhcmFtIGlkVG9rZW5PYmogXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzZXRSZXNwb25zZUlkVG9rZW4ob3JpZ2luYWxSZXNwb25zZTogVG9rZW5SZXNwb25zZSwgaWRUb2tlbk9iajogSWRUb2tlbikgOiBUb2tlblJlc3BvbnNlIHtcclxuICAgICAgICBpZiAoIW9yaWdpbmFsUmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfSBlbHNlIGlmICghaWRUb2tlbk9iaikge1xyXG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxSZXNwb25zZTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBjb25zdCBleHBpcmVzU2Vjb25kcyA9IE51bWJlcihpZFRva2VuT2JqLmNsYWltcy5leHApO1xyXG4gICAgICAgIGlmIChleHBpcmVzU2Vjb25kcyAmJiAhb3JpZ2luYWxSZXNwb25zZS5leHBpcmVzT24pIHtcclxuICAgICAgICAgICAgb3JpZ2luYWxSZXNwb25zZS5leHBpcmVzT24gPSBuZXcgRGF0ZShleHBpcmVzU2Vjb25kcyAqIDEwMDApO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIC4uLm9yaWdpbmFsUmVzcG9uc2UsXHJcbiAgICAgICAgICAgIGlkVG9rZW46IGlkVG9rZW5PYmoucmF3SWRUb2tlbixcclxuICAgICAgICAgICAgaWRUb2tlbkNsYWltczogaWRUb2tlbk9iai5jbGFpbXMsXHJcbiAgICAgICAgICAgIHVuaXF1ZUlkOiBpZFRva2VuT2JqLmNsYWltcy5vaWQgfHwgaWRUb2tlbk9iai5jbGFpbXMuc3ViLFxyXG4gICAgICAgICAgICB0ZW5hbnRJZDogaWRUb2tlbk9iai5jbGFpbXMudGlkLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBWYWxpZGF0ZXMgYW5kIGhhbmRsZXMgYSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIsIGFuZCByZXR1cm5zIGEgY29uc3RydWN0ZWQgb2JqZWN0IHdpdGggdGhlIGF1dGhvcml6YXRpb24gY29kZSBhbmQgc3RhdGUuXHJcbiAgICAgKiBAcGFyYW0gc2VydmVyUGFyYW1zIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaGFuZGxlU2VydmVyQ29kZVJlc3BvbnNlKHNlcnZlclBhcmFtczogU2VydmVyQXV0aG9yaXphdGlvbkNvZGVSZXNwb25zZSk6IENvZGVSZXNwb25zZSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gVmFsaWRhdGUgaGFzaCBmcmFnbWVudCByZXNwb25zZSBwYXJhbWV0ZXJzXHJcbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVTZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlKHNlcnZlclBhcmFtcywgdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0SXRlbShUZW1wb3JhcnlDYWNoZUtleXMuUkVRVUVTVF9TVEFURSksIHRoaXMuY3J5cHRvT2JqKTtcclxuXHJcbiAgICAgICAgICAgIC8vIENhY2hlIGNsaWVudCBpbmZvXHJcbiAgICAgICAgICAgIGlmIChzZXJ2ZXJQYXJhbXMuY2xpZW50X2luZm8pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVTdG9yYWdlLnNldEl0ZW0oUGVyc2lzdGVudENhY2hlS2V5cy5DTElFTlRfSU5GTywgc2VydmVyUGFyYW1zLmNsaWVudF9pbmZvKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gQ3JlYXRlIHJlc3BvbnNlIG9iamVjdFxyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZTogQ29kZVJlc3BvbnNlID0ge1xyXG4gICAgICAgICAgICAgICAgY29kZTogc2VydmVyUGFyYW1zLmNvZGUsXHJcbiAgICAgICAgICAgICAgICB1c2VyUmVxdWVzdFN0YXRlOiBzZXJ2ZXJQYXJhbXMuc3RhdGVcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgICAgICB9IGNhdGNoKGUpIHtcclxuICAgICAgICAgICAgdGhpcy5jYWNoZU1hbmFnZXIucmVzZXRUZW1wQ2FjaGVJdGVtcyhzZXJ2ZXJQYXJhbXMgJiYgc2VydmVyUGFyYW1zLnN0YXRlKTtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGdW5jdGlvbiB3aGljaCB2YWxpZGF0ZXMgc2VydmVyIGF1dGhvcml6YXRpb24gY29kZSByZXNwb25zZS5cclxuICAgICAqIEBwYXJhbSBzZXJ2ZXJSZXNwb25zZUhhc2ggXHJcbiAgICAgKiBAcGFyYW0gY2FjaGVkU3RhdGUgXHJcbiAgICAgKiBAcGFyYW0gY3J5cHRvT2JqIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHZhbGlkYXRlU2VydmVyQXV0aG9yaXphdGlvbkNvZGVSZXNwb25zZShzZXJ2ZXJSZXNwb25zZUhhc2g6IFNlcnZlckF1dGhvcml6YXRpb25Db2RlUmVzcG9uc2UsIGNhY2hlZFN0YXRlOiBzdHJpbmcsIGNyeXB0b09iajogSUNyeXB0byk6IHZvaWQge1xyXG4gICAgICAgIGlmIChzZXJ2ZXJSZXNwb25zZUhhc2guc3RhdGUgIT09IGNhY2hlZFN0YXRlKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVTdGF0ZU1pc21hdGNoRXJyb3IoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAvLyBDaGVjayBmb3IgZXJyb3JcclxuICAgICAgICBpZiAoc2VydmVyUmVzcG9uc2VIYXNoLmVycm9yIHx8IHNlcnZlclJlc3BvbnNlSGFzaC5lcnJvcl9kZXNjcmlwdGlvbikge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VydmVyRXJyb3Ioc2VydmVyUmVzcG9uc2VIYXNoLmVycm9yLCBzZXJ2ZXJSZXNwb25zZUhhc2guZXJyb3JfZGVzY3JpcHRpb24pO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGlmIChzZXJ2ZXJSZXNwb25zZUhhc2guY2xpZW50X2luZm8pIHtcclxuICAgICAgICAgICAgYnVpbGRDbGllbnRJbmZvKHNlcnZlclJlc3BvbnNlSGFzaC5jbGllbnRfaW5mbywgY3J5cHRvT2JqKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGdW5jdGlvbiB3aGljaCB2YWxpZGF0ZXMgc2VydmVyIGF1dGhvcml6YXRpb24gdG9rZW4gcmVzcG9uc2UuXHJcbiAgICAgKiBAcGFyYW0gc2VydmVyUmVzcG9uc2UgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB2YWxpZGF0ZVNlcnZlckF1dGhvcml6YXRpb25Ub2tlblJlc3BvbnNlKHNlcnZlclJlc3BvbnNlOiBTZXJ2ZXJBdXRob3JpemF0aW9uVG9rZW5SZXNwb25zZSk6IHZvaWQge1xyXG4gICAgICAgIC8vIENoZWNrIGZvciBlcnJvclxyXG4gICAgICAgIGlmIChzZXJ2ZXJSZXNwb25zZS5lcnJvciB8fCBzZXJ2ZXJSZXNwb25zZS5lcnJvcl9kZXNjcmlwdGlvbikge1xyXG4gICAgICAgICAgICBjb25zdCBlcnJTdHJpbmcgPSBgJHtzZXJ2ZXJSZXNwb25zZS5lcnJvcl9jb2Rlc30gLSBbJHtzZXJ2ZXJSZXNwb25zZS50aW1lc3RhbXB9XTogJHtzZXJ2ZXJSZXNwb25zZS5lcnJvcl9kZXNjcmlwdGlvbn0gLSBDb3JyZWxhdGlvbiBJRDogJHtzZXJ2ZXJSZXNwb25zZS5jb3JyZWxhdGlvbl9pZH0gLSBUcmFjZSBJRDogJHtzZXJ2ZXJSZXNwb25zZS50cmFjZV9pZH1gO1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VydmVyRXJyb3Ioc2VydmVyUmVzcG9uc2UuZXJyb3IsIGVyclN0cmluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIGZ1bmN0aW9uIHdoaWNoIHNhdmVzIG9yIHVwZGF0ZXMgdGhlIHRva2VuIGluIHRoZSBjYWNoZSBhbmQgY29uc3RydWN0cyB0aGUgZmluYWwgdG9rZW4gcmVzcG9uc2UgdG8gc2VuZCBiYWNrIHRvIHRoZSB1c2VyLlxyXG4gICAgICogQHBhcmFtIG9yaWdpbmFsVG9rZW5SZXNwb25zZSBcclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHkgXHJcbiAgICAgKiBAcGFyYW0gcmVzb3VyY2UgXHJcbiAgICAgKiBAcGFyYW0gc2VydmVyVG9rZW5SZXNwb25zZSBcclxuICAgICAqIEBwYXJhbSBjbGllbnRJbmZvIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHNhdmVUb2tlbihvcmlnaW5hbFRva2VuUmVzcG9uc2U6IFRva2VuUmVzcG9uc2UsIGF1dGhvcml0eTogc3RyaW5nLCByZXNvdXJjZTogc3RyaW5nLCBzZXJ2ZXJUb2tlblJlc3BvbnNlOiBTZXJ2ZXJBdXRob3JpemF0aW9uVG9rZW5SZXNwb25zZSwgY2xpZW50SW5mbzogQ2xpZW50SW5mbyk6IFRva2VuUmVzcG9uc2Uge1xyXG4gICAgICAgIC8vIFNldCBjb25zZW50ZWQgc2NvcGVzIGluIHJlc3BvbnNlXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2VTY29wZXMgPSBTY29wZVNldC5mcm9tU3RyaW5nKHNlcnZlclRva2VuUmVzcG9uc2Uuc2NvcGUsIHRoaXMuY2xpZW50SWQsIHRydWUpO1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlU2NvcGVBcnJheSA9IHJlc3BvbnNlU2NvcGVzLmFzQXJyYXkoKTtcclxuXHJcbiAgICAgICAgLy8gRXhwaXJhdGlvbiBjYWxjdWxhdGlvblxyXG4gICAgICAgIGNvbnN0IGV4cGlyZXNJbiA9IHNlcnZlclRva2VuUmVzcG9uc2UuZXhwaXJlc19pbjtcclxuICAgICAgICBjb25zdCBleHBpcmF0aW9uU2VjID0gVGltZVV0aWxzLm5vd1NlY29uZHMoKSArIGV4cGlyZXNJbjtcclxuICAgICAgICBjb25zdCBleHRlbmRlZEV4cGlyYXRpb25TZWMgPSBleHBpcmF0aW9uU2VjICsgc2VydmVyVG9rZW5SZXNwb25zZS5leHRfZXhwaXJlc19pbjtcclxuXHJcbiAgICAgICAgLy8gR2V0IGlkIHRva2VuXHJcbiAgICAgICAgaWYgKCFTdHJpbmdVdGlscy5pc0VtcHR5KG9yaWdpbmFsVG9rZW5SZXNwb25zZS5pZFRva2VuKSkge1xyXG4gICAgICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5zZXRJdGVtKFBlcnNpc3RlbnRDYWNoZUtleXMuSURfVE9LRU4sIG9yaWdpbmFsVG9rZW5SZXNwb25zZS5pZFRva2VuKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNhdmUgYWNjZXNzIHRva2VuIGluIGNhY2hlXHJcbiAgICAgICAgY29uc3QgbmV3QWNjZXNzVG9rZW5WYWx1ZSA9IG5ldyBBY2Nlc3NUb2tlblZhbHVlKHNlcnZlclRva2VuUmVzcG9uc2UudG9rZW5fdHlwZSwgc2VydmVyVG9rZW5SZXNwb25zZS5hY2Nlc3NfdG9rZW4sIG9yaWdpbmFsVG9rZW5SZXNwb25zZS5pZFRva2VuLCBzZXJ2ZXJUb2tlblJlc3BvbnNlLnJlZnJlc2hfdG9rZW4sIGV4cGlyYXRpb25TZWMudG9TdHJpbmcoKSwgZXh0ZW5kZWRFeHBpcmF0aW9uU2VjLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIGNvbnN0IGhvbWVBY2NvdW50SWRlbnRpZmllciA9IG9yaWdpbmFsVG9rZW5SZXNwb25zZS5hY2NvdW50ICYmIG9yaWdpbmFsVG9rZW5SZXNwb25zZS5hY2NvdW50LmhvbWVBY2NvdW50SWRlbnRpZmllcjtcclxuICAgICAgICBjb25zdCBhY2Nlc3NUb2tlbkNhY2hlSXRlbXMgPSB0aGlzLmNhY2hlTWFuYWdlci5nZXRBbGxBY2Nlc3NUb2tlbnModGhpcy5jbGllbnRJZCwgYXV0aG9yaXR5IHx8IFwiXCIsIHJlc291cmNlIHx8IFwiXCIsIGhvbWVBY2NvdW50SWRlbnRpZmllciB8fCBcIlwiKTtcclxuXHJcbiAgICAgICAgLy8gSWYgbm8gaXRlbXMgaW4gY2FjaGUgd2l0aCB0aGVzZSBwYXJhbWV0ZXJzLCBzZXQgbmV3IGl0ZW0uXHJcbiAgICAgICAgaWYgKGFjY2Vzc1Rva2VuQ2FjaGVJdGVtcy5sZW5ndGggPCAxKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJObyB0b2tlbnMgZm91bmQsIGNyZWF0aW5nIG5ldyBpdGVtLlwiKTtcclxuICAgICAgICAgICAgY29uc3QgbmV3VG9rZW5LZXkgPSBuZXcgQWNjZXNzVG9rZW5LZXkoXHJcbiAgICAgICAgICAgICAgICBhdXRob3JpdHksIFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jbGllbnRJZCwgXHJcbiAgICAgICAgICAgICAgICBzZXJ2ZXJUb2tlblJlc3BvbnNlLnNjb3BlLCBcclxuICAgICAgICAgICAgICAgIHJlc291cmNlLCBcclxuICAgICAgICAgICAgICAgIGNsaWVudEluZm8gJiYgY2xpZW50SW5mby51aWQsIFxyXG4gICAgICAgICAgICAgICAgY2xpZW50SW5mbyAmJiBjbGllbnRJbmZvLnV0aWQsIFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jcnlwdG9PYmpcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgdGhpcy5jYWNoZVN0b3JhZ2Uuc2V0SXRlbShKU09OLnN0cmluZ2lmeShuZXdUb2tlbktleSksIEpTT04uc3RyaW5naWZ5KG5ld0FjY2Vzc1Rva2VuVmFsdWUpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBzY29wZXMgYXJlIGludGVyc2VjdGluZy4gSWYgdGhleSBhcmUsIGNvbWJpbmUgc2NvcGVzIGFuZCByZXBsYWNlIGNhY2hlIGl0ZW0uXHJcbiAgICAgICAgICAgIGFjY2Vzc1Rva2VuQ2FjaGVJdGVtcy5mb3JFYWNoKGFjY2Vzc1Rva2VuQ2FjaGVJdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlZFNjb3BlcyA9IFNjb3BlU2V0LmZyb21TdHJpbmcoYWNjZXNzVG9rZW5DYWNoZUl0ZW0ua2V5LnNjb3BlcywgdGhpcy5jbGllbnRJZCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBpZihjYWNoZWRTY29wZXMuaW50ZXJzZWN0aW5nU2NvcGVTZXRzKHJlc3BvbnNlU2NvcGVzKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVTdG9yYWdlLnJlbW92ZUl0ZW0oSlNPTi5zdHJpbmdpZnkoYWNjZXNzVG9rZW5DYWNoZUl0ZW0ua2V5KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVkU2NvcGVzLmFwcGVuZFNjb3BlcyhyZXNwb25zZVNjb3BlQXJyYXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuQ2FjaGVJdGVtLmtleS5zY29wZXMgPSBjYWNoZWRTY29wZXMucHJpbnRTY29wZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoU3RyaW5nVXRpbHMuaXNFbXB0eShuZXdBY2Nlc3NUb2tlblZhbHVlLmlkVG9rZW4pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FjY2Vzc1Rva2VuVmFsdWUuaWRUb2tlbiA9IGFjY2Vzc1Rva2VuQ2FjaGVJdGVtLnZhbHVlLmlkVG9rZW47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVTdG9yYWdlLnNldEl0ZW0oSlNPTi5zdHJpbmdpZnkoYWNjZXNzVG9rZW5DYWNoZUl0ZW0ua2V5KSwgSlNPTi5zdHJpbmdpZnkobmV3QWNjZXNzVG9rZW5WYWx1ZSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNhdmUgdG9rZW5zIGluIHJlc3BvbnNlIGFuZCByZXR1cm5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAuLi5vcmlnaW5hbFRva2VuUmVzcG9uc2UsXHJcbiAgICAgICAgICAgIHRva2VuVHlwZTogc2VydmVyVG9rZW5SZXNwb25zZS50b2tlbl90eXBlLFxyXG4gICAgICAgICAgICBzY29wZXM6IHJlc3BvbnNlU2NvcGVBcnJheSxcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IHNlcnZlclRva2VuUmVzcG9uc2UuYWNjZXNzX3Rva2VuLFxyXG4gICAgICAgICAgICByZWZyZXNoVG9rZW46IHNlcnZlclRva2VuUmVzcG9uc2UucmVmcmVzaF90b2tlbixcclxuICAgICAgICAgICAgZXhwaXJlc09uOiBuZXcgRGF0ZShleHBpcmF0aW9uU2VjICogMTAwMClcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBhY2NvdW50IGNhY2hlZCB3aXRoIGdpdmVuIGtleS4gUmV0dXJucyBudWxsIGlmIHBhcnNpbmcgY291bGQgbm90IGJlIGNvbXBsZXRlZC5cclxuICAgICAqIEBwYXJhbSBhY2NvdW50S2V5IFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGdldENhY2hlZEFjY291bnQoYWNjb3VudEtleTogc3RyaW5nKTogQWNjb3VudCB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5jYWNoZVN0b3JhZ2UuZ2V0SXRlbShhY2NvdW50S2V5KSkgYXMgQWNjb3VudDtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoYEFjY291bnQgY291bGQgbm90IGJlIHBhcnNlZDogJHtKU09OLnN0cmluZ2lmeShlKX1gKTtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIGNvbnN0cnVjdGVkIHRva2VuIHJlc3BvbnNlIGJhc2VkIG9uIGdpdmVuIHN0cmluZy4gQWxzbyBtYW5hZ2VzIHRoZSBjYWNoZSB1cGRhdGVzIGFuZCBjbGVhbnVwcy5cclxuICAgICAqIEBwYXJhbSBzZXJ2ZXJUb2tlblJlc3BvbnNlIFxyXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVN0cmluZyBcclxuICAgICAqIEBwYXJhbSByZXNvdXJjZSBcclxuICAgICAqIEBwYXJhbSBzdGF0ZSBcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNyZWF0ZVRva2VuUmVzcG9uc2Uoc2VydmVyVG9rZW5SZXNwb25zZTogU2VydmVyQXV0aG9yaXphdGlvblRva2VuUmVzcG9uc2UsIGF1dGhvcml0eVN0cmluZzogc3RyaW5nLCByZXNvdXJjZTogc3RyaW5nLCBzdGF0ZT86IHN0cmluZyk6IFRva2VuUmVzcG9uc2Uge1xyXG4gICAgICAgIGxldCB0b2tlblJlc3BvbnNlOiBUb2tlblJlc3BvbnNlID0ge1xyXG4gICAgICAgICAgICB1bmlxdWVJZDogXCJcIixcclxuICAgICAgICAgICAgdGVuYW50SWQ6IFwiXCIsXHJcbiAgICAgICAgICAgIHRva2VuVHlwZTogXCJcIixcclxuICAgICAgICAgICAgaWRUb2tlbjogbnVsbCxcclxuICAgICAgICAgICAgaWRUb2tlbkNsYWltczogbnVsbCxcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IFwiXCIsXHJcbiAgICAgICAgICAgIHJlZnJlc2hUb2tlbjogXCJcIixcclxuICAgICAgICAgICAgc2NvcGVzOiBbXSxcclxuICAgICAgICAgICAgZXhwaXJlc09uOiBudWxsLFxyXG4gICAgICAgICAgICBhY2NvdW50OiBudWxsLFxyXG4gICAgICAgICAgICB1c2VyUmVxdWVzdFN0YXRlOiBcIlwiXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgLy8gUmV0cmlldmUgY3VycmVudCBpZCB0b2tlbiBvYmplY3RcclxuICAgICAgICBsZXQgaWRUb2tlbk9iajogSWRUb2tlbjtcclxuICAgICAgICBjb25zdCBjYWNoZWRJZFRva2VuOiBzdHJpbmcgPSB0aGlzLmNhY2hlU3RvcmFnZS5nZXRJdGVtKFBlcnNpc3RlbnRDYWNoZUtleXMuSURfVE9LRU4pO1xyXG4gICAgICAgIGlmIChzZXJ2ZXJUb2tlblJlc3BvbnNlLmlkX3Rva2VuKSB7XHJcbiAgICAgICAgICAgIGlkVG9rZW5PYmogPSBuZXcgSWRUb2tlbihzZXJ2ZXJUb2tlblJlc3BvbnNlLmlkX3Rva2VuLCB0aGlzLmNyeXB0b09iaik7XHJcbiAgICAgICAgICAgIHRva2VuUmVzcG9uc2UgPSBSZXNwb25zZUhhbmRsZXIuc2V0UmVzcG9uc2VJZFRva2VuKHRva2VuUmVzcG9uc2UsIGlkVG9rZW5PYmopO1xyXG5cclxuICAgICAgICAgICAgLy8gSWYgc3RhdGUgaXMgZW1wdHksIHJlZnJlc2ggdG9rZW4gaXMgYmVpbmcgdXNlZFxyXG4gICAgICAgICAgICBpZiAoIVN0cmluZ1V0aWxzLmlzRW1wdHkoc3RhdGUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiU3RhdGUgd2FzIGRldGVjdGVkIC0gbm9uY2Ugc2hvdWxkIGJlIGF2YWlsYWJsZS5cIik7XHJcbiAgICAgICAgICAgICAgICAvLyBjaGVjayBub25jZSBpbnRlZ3JpdHkgaWYgcmVmcmVzaCB0b2tlbiBpcyBub3QgdXNlZCAtIHRocm93IGFuIGVycm9yIGlmIG5vdCBtYXRjaGVkICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmIChTdHJpbmdVdGlscy5pc0VtcHR5KGlkVG9rZW5PYmouY2xhaW1zLm5vbmNlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVJbnZhbGlkSWRUb2tlbkVycm9yKGlkVG9rZW5PYmopO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IG5vbmNlID0gdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmNhY2hlTWFuYWdlci5nZW5lcmF0ZU5vbmNlS2V5KHN0YXRlKSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaWRUb2tlbk9iai5jbGFpbXMubm9uY2UgIT09IG5vbmNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZU5vbmNlTWlzbWF0Y2hFcnJvcigpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChjYWNoZWRJZFRva2VuKSB7XHJcbiAgICAgICAgICAgIGlkVG9rZW5PYmogPSBuZXcgSWRUb2tlbihjYWNoZWRJZFRva2VuLCB0aGlzLmNyeXB0b09iaik7XHJcbiAgICAgICAgICAgIHRva2VuUmVzcG9uc2UgPSBSZXNwb25zZUhhbmRsZXIuc2V0UmVzcG9uc2VJZFRva2VuKHRva2VuUmVzcG9uc2UsIGlkVG9rZW5PYmopO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlkVG9rZW5PYmogPSBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGNsaWVudEluZm86IENsaWVudEluZm8gPSBudWxsO1xyXG4gICAgICAgIGxldCBjYWNoZWRBY2NvdW50OiBBY2NvdW50ID0gbnVsbDtcclxuICAgICAgICBpZiAoaWRUb2tlbk9iaikge1xyXG4gICAgICAgICAgICAvLyBSZXRyaWV2ZSBjbGllbnQgaW5mb1xyXG4gICAgICAgICAgICBjbGllbnRJbmZvID0gYnVpbGRDbGllbnRJbmZvKHRoaXMuY2FjaGVTdG9yYWdlLmdldEl0ZW0oUGVyc2lzdGVudENhY2hlS2V5cy5DTElFTlRfSU5GTyksIHRoaXMuY3J5cHRvT2JqKTtcclxuXHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhY2NvdW50IG9iamVjdCBmb3IgcmVxdWVzdFxyXG4gICAgICAgICAgICB0b2tlblJlc3BvbnNlLmFjY291bnQgPSBBY2NvdW50LmNyZWF0ZUFjY291bnQoaWRUb2tlbk9iaiwgY2xpZW50SW5mbywgdGhpcy5jcnlwdG9PYmopO1xyXG5cclxuICAgICAgICAgICAgLy8gU2F2ZSB0aGUgYWNjZXNzIHRva2VuIGlmIGl0IGV4aXN0c1xyXG4gICAgICAgICAgICBjb25zdCBhY2NvdW50S2V5ID0gdGhpcy5jYWNoZU1hbmFnZXIuZ2VuZXJhdGVBY3F1aXJlVG9rZW5BY2NvdW50S2V5KHRva2VuUmVzcG9uc2UuYWNjb3VudC5ob21lQWNjb3VudElkZW50aWZpZXIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gR2V0IGNhY2hlZCBhY2NvdW50XHJcbiAgICAgICAgICAgIGNhY2hlZEFjY291bnQgPSB0aGlzLmdldENhY2hlZEFjY291bnQoYWNjb3VudEtleSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBSZXR1cm4gdXNlciBzZXQgc3RhdGUgaW4gdGhlIHJlc3BvbnNlXHJcbiAgICAgICAgdG9rZW5SZXNwb25zZS51c2VyUmVxdWVzdFN0YXRlID0gUHJvdG9jb2xVdGlscy5nZXRVc2VyUmVxdWVzdFN0YXRlKHN0YXRlKTtcclxuXHJcbiAgICAgICAgdGhpcy5jYWNoZU1hbmFnZXIucmVzZXRUZW1wQ2FjaGVJdGVtcyhzdGF0ZSk7XHJcbiAgICAgICAgaWYgKCFjYWNoZWRBY2NvdW50IHx8ICF0b2tlblJlc3BvbnNlLmFjY291bnQgfHwgQWNjb3VudC5jb21wYXJlQWNjb3VudHMoY2FjaGVkQWNjb3VudCwgdG9rZW5SZXNwb25zZS5hY2NvdW50KSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zYXZlVG9rZW4odG9rZW5SZXNwb25zZSwgYXV0aG9yaXR5U3RyaW5nLCByZXNvdXJjZSwgc2VydmVyVG9rZW5SZXNwb25zZSwgY2xpZW50SW5mbyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXCJBY2NvdW50cyBkbyBub3QgbWF0Y2guXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvclBpaShgQ2FjaGVkIEFjY291bnQ6ICR7SlNPTi5zdHJpbmdpZnkoY2FjaGVkQWNjb3VudCl9LCBOZXcgQWNjb3VudDogJHtKU09OLnN0cmluZ2lmeSh0b2tlblJlc3BvbnNlLmFjY291bnQpfWApO1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlQWNjb3VudE1pc21hdGNoRXJyb3IoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IEF1dGhvcml0eVR5cGUgfSBmcm9tIFwiLi9BdXRob3JpdHlUeXBlXCI7XHJcbmltcG9ydCB7IFRlbmFudERpc2NvdmVyeVJlc3BvbnNlIH0gZnJvbSBcIi4vVGVuYW50RGlzY292ZXJ5UmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgVXJsU3RyaW5nIH0gZnJvbSBcIi4uLy4uL3VybC9VcmxTdHJpbmdcIjtcclxuaW1wb3J0IHsgSVVyaSB9IGZyb20gXCIuLi8uLi91cmwvSVVyaVwiO1xyXG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yXCI7XHJcbmltcG9ydCB7IElOZXR3b3JrTW9kdWxlIH0gZnJvbSBcIi4uLy4uL25ldHdvcmsvSU5ldHdvcmtNb2R1bGVcIjtcclxuXHJcbi8qKlxyXG4gKiBUaGUgYXV0aG9yaXR5IGNsYXNzIHZhbGlkYXRlcyB0aGUgYXV0aG9yaXR5IFVSSXMgdXNlZCBieSB0aGUgdXNlciwgYW5kIHJldHJpZXZlcyB0aGUgT3BlbklEIENvbmZpZ3VyYXRpb24gRGF0YSBmcm9tIHRoZVxyXG4gKiBlbmRwb2ludC4gSXQgd2lsbCBzdG9yZSB0aGUgcGVydGluZW50IGNvbmZpZyBkYXRhIGluIHRoaXMgb2JqZWN0IGZvciB1c2UgZHVyaW5nIHRva2VuIGNhbGxzLlxyXG4gKi9cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEF1dGhvcml0eSB7XHJcblxyXG4gICAgLy8gQ2Fub25pY2FsIGF1dGhvcml0eSB1cmwgc3RyaW5nXHJcbiAgICBwcml2YXRlIF9jYW5vbmljYWxBdXRob3JpdHk6IFVybFN0cmluZztcclxuICAgIC8vIENhbm9uaWNhbHkgYXV0aG9yaXR5IHVybCBjb21wb25lbnRzXHJcbiAgICBwcml2YXRlIF9jYW5vbmljYWxBdXRob3JpdHlVcmxDb21wb25lbnRzOiBJVXJpO1xyXG4gICAgLy8gVGVuYW50IGRpc2NvdmVyeSByZXNwb25zZSByZXRyaWV2ZWQgZnJvbSBPcGVuSUQgQ29uZmlndXJhdGlvbiBFbmRwb2ludFxyXG4gICAgcHJpdmF0ZSB0ZW5hbnREaXNjb3ZlcnlSZXNwb25zZTogVGVuYW50RGlzY292ZXJ5UmVzcG9uc2U7XHJcbiAgICAvLyBOZXR3b3JrIGludGVyZmFjZSB0byBtYWtlIHJlcXVlc3RzIHdpdGguXHJcbiAgICBwcm90ZWN0ZWQgbmV0d29ya0ludGVyZmFjZTogSU5ldHdvcmtNb2R1bGU7XHJcblxyXG4gICAgLy8gU2VlIGFib3ZlIGZvciBBdXRob3JpdHlUeXBlXHJcbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0IGF1dGhvcml0eVR5cGUoKTogQXV0aG9yaXR5VHlwZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEEgVVJMIHRoYXQgaXMgdGhlIGF1dGhvcml0eSBzZXQgYnkgdGhlIGRldmVsb3BlclxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IGNhbm9uaWNhbEF1dGhvcml0eSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jYW5vbmljYWxBdXRob3JpdHkudXJsU3RyaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyBjYW5vbmljYWwgYXV0aG9yaXR5LlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0IGNhbm9uaWNhbEF1dGhvcml0eSh1cmw6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2Nhbm9uaWNhbEF1dGhvcml0eSA9IG5ldyBVcmxTdHJpbmcodXJsKTtcclxuICAgICAgICB0aGlzLl9jYW5vbmljYWxBdXRob3JpdHkudmFsaWRhdGVBc1VyaSgpO1xyXG4gICAgICAgIHRoaXMuX2Nhbm9uaWNhbEF1dGhvcml0eVVybENvbXBvbmVudHMgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGF1dGhvcml0eSBjb21wb25lbnRzLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IGNhbm9uaWNhbEF1dGhvcml0eVVybENvbXBvbmVudHMoKTogSVVyaSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9jYW5vbmljYWxBdXRob3JpdHlVcmxDb21wb25lbnRzKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Nhbm9uaWNhbEF1dGhvcml0eVVybENvbXBvbmVudHMgPSB0aGlzLl9jYW5vbmljYWxBdXRob3JpdHkuZ2V0VXJsQ29tcG9uZW50cygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Nhbm9uaWNhbEF1dGhvcml0eVVybENvbXBvbmVudHM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGVuYW50IGZvciBhdXRob3JpdHkuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXQgdGVuYW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2Fub25pY2FsQXV0aG9yaXR5VXJsQ29tcG9uZW50cy5QYXRoU2VnbWVudHNbMF07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBPQXV0aCAvYXV0aG9yaXplIGVuZHBvaW50IGZvciByZXF1ZXN0c1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IGF1dGhvcml6YXRpb25FbmRwb2ludCgpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmKHRoaXMuZGlzY292ZXJ5Q29tcGxldGUoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZXBsYWNlVGVuYW50KHRoaXMudGVuYW50RGlzY292ZXJ5UmVzcG9uc2UuYXV0aG9yaXphdGlvbl9lbmRwb2ludCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUVuZHBvaW50RGlzY292ZXJ5SW5jb21wbGV0ZUVycm9yKFwiRGlzY292ZXJ5IGluY29tcGxldGUuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE9BdXRoIC90b2tlbiBlbmRwb2ludCBmb3IgcmVxdWVzdHNcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldCB0b2tlbkVuZHBvaW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYodGhpcy5kaXNjb3ZlcnlDb21wbGV0ZSgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlcGxhY2VUZW5hbnQodGhpcy50ZW5hbnREaXNjb3ZlcnlSZXNwb25zZS50b2tlbl9lbmRwb2ludCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUVuZHBvaW50RGlzY292ZXJ5SW5jb21wbGV0ZUVycm9yKFwiRGlzY292ZXJ5IGluY29tcGxldGUuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE9BdXRoIGxvZ291dCBlbmRwb2ludCBmb3IgcmVxdWVzdHNcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldCBlbmRTZXNzaW9uRW5kcG9pbnQoKTogc3RyaW5nIHtcclxuICAgICAgICBpZih0aGlzLmRpc2NvdmVyeUNvbXBsZXRlKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVwbGFjZVRlbmFudCh0aGlzLnRlbmFudERpc2NvdmVyeVJlc3BvbnNlLmVuZF9zZXNzaW9uX2VuZHBvaW50KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlRW5kcG9pbnREaXNjb3ZlcnlJbmNvbXBsZXRlRXJyb3IoXCJEaXNjb3ZlcnkgaW5jb21wbGV0ZS5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogT0F1dGggaXNzdWVyIGZvciByZXF1ZXN0c1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IHNlbGZTaWduZWRKd3RBdWRpZW5jZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmKHRoaXMuZGlzY292ZXJ5Q29tcGxldGUoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZXBsYWNlVGVuYW50KHRoaXMudGVuYW50RGlzY292ZXJ5UmVzcG9uc2UuaXNzdWVyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlRW5kcG9pbnREaXNjb3ZlcnlJbmNvbXBsZXRlRXJyb3IoXCJEaXNjb3ZlcnkgaW5jb21wbGV0ZS5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVwbGFjZXMgdGVuYW50IGluIHVybCBwYXRoIHdpdGggY3VycmVudCB0ZW5hbnQuIERlZmF1bHRzIHRvIGNvbW1vbi5cclxuICAgICAqIEBwYXJhbSB1cmxTdHJpbmcgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmVwbGFjZVRlbmFudCh1cmxTdHJpbmc6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHVybFN0cmluZy5yZXBsYWNlKFwie3RlbmFudH1cIiwgdGhpcy50ZW5hbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRlZmF1bHQgb3BlbiBpZCBjb25maWd1cmF0aW9uIGVuZHBvaW50IGZvciBhbnkgY2Fub25pY2FsIGF1dGhvcml0eS5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGdldCBkZWZhdWx0T3BlbklkQ29uZmlndXJhdGlvbkVuZHBvaW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuY2Fub25pY2FsQXV0aG9yaXR5fXYyLjAvLndlbGwta25vd24vb3BlbmlkLWNvbmZpZ3VyYXRpb25gO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKGF1dGhvcml0eTogc3RyaW5nLCBuZXR3b3JrSW50ZXJmYWNlOiBJTmV0d29ya01vZHVsZSkge1xyXG4gICAgICAgIHRoaXMuY2Fub25pY2FsQXV0aG9yaXR5ID0gYXV0aG9yaXR5O1xyXG5cclxuICAgICAgICB0aGlzLl9jYW5vbmljYWxBdXRob3JpdHkudmFsaWRhdGVBc1VyaSgpO1xyXG4gICAgICAgIHRoaXMubmV0d29ya0ludGVyZmFjZSA9IG5ldHdvcmtJbnRlcmZhY2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBCb29sZWFuIHRoYXQgcmV0dXJucyB3aGV0aHIgb3Igbm90IHRlbmFudCBkaXNjb3ZlcnkgaGFzIGJlZW4gY29tcGxldGVkLlxyXG4gICAgICovXHJcbiAgICBkaXNjb3ZlcnlDb21wbGV0ZSgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gISF0aGlzLnRlbmFudERpc2NvdmVyeVJlc3BvbnNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBPQXV0aCBlbmRwb2ludHMgZnJvbSB0aGUgZ2l2ZW4gT3BlbklEIGNvbmZpZ3VyYXRpb24gZW5kcG9pbnQuXHJcbiAgICAgKiBAcGFyYW0gb3BlbklkQ29uZmlndXJhdGlvbkVuZHBvaW50IFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFzeW5jIGRpc2NvdmVyRW5kcG9pbnRzKG9wZW5JZENvbmZpZ3VyYXRpb25FbmRwb2ludDogc3RyaW5nKTogUHJvbWlzZTxUZW5hbnREaXNjb3ZlcnlSZXNwb25zZT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm5ldHdvcmtJbnRlcmZhY2Uuc2VuZEdldFJlcXVlc3RBc3luYzxUZW5hbnREaXNjb3ZlcnlSZXNwb25zZT4ob3BlbklkQ29uZmlndXJhdGlvbkVuZHBvaW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFic3RyYWN0IGZ1bmN0aW9uIHdoaWNoIHdpbGwgZ2V0IHRoZSBPcGVuSUQgY29uZmlndXJhdGlvbiBlbmRwb2ludC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGFic3RyYWN0IGFzeW5jIGdldE9wZW5JZENvbmZpZ3VyYXRpb25FbmRwb2ludEFzeW5jKCk6IFByb21pc2U8c3RyaW5nPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBlcmZvcm0gZW5kcG9pbnQgZGlzY292ZXJ5IHRvIGRpc2NvdmVyIHRoZSAvYXV0aG9yaXplLCAvdG9rZW4gYW5kIGxvZ291dCBlbmRwb2ludHMuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhc3luYyByZXNvbHZlRW5kcG9pbnRzQXN5bmMoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAgICAgY29uc3Qgb3BlbklkQ29uZmlnRW5kcG9pbnQgPSBhd2FpdCB0aGlzLmdldE9wZW5JZENvbmZpZ3VyYXRpb25FbmRwb2ludEFzeW5jKCk7XHJcbiAgICAgICAgdGhpcy50ZW5hbnREaXNjb3ZlcnlSZXNwb25zZSA9IGF3YWl0IHRoaXMuZGlzY292ZXJFbmRwb2ludHMob3BlbklkQ29uZmlnRW5kcG9pbnQpO1xyXG4gICAgfVxyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEF1dGhvcml0eSB0eXBlcyBzdXBwb3J0ZWQgYnkgTVNBTC5cclxuICovXHJcbmV4cG9ydCBlbnVtIEF1dGhvcml0eVR5cGUge1xyXG4gICAgQWFkLFxyXG4gICAgQWRmcyxcclxuICAgIEIyQ1xyXG59XHJcbiIsIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyBBdXRob3JpdHkgfSBmcm9tIFwiLi9BdXRob3JpdHlcIjtcclxuaW1wb3J0IHsgT3BlbklkQ29uZmlnUmVzcG9uc2UgfSBmcm9tIFwiLi9PcGVuSWRDb25maWdSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBBdXRob3JpdHlUeXBlIH0gZnJvbSBcIi4vQXV0aG9yaXR5VHlwZVwiO1xyXG5pbXBvcnQgeyBBQURUcnVzdGVkSG9zdExpc3QsIENvbnN0YW50cyB9IGZyb20gXCIuLi8uLi91dGlscy9Db25zdGFudHNcIjtcclxuaW1wb3J0IHsgSU5ldHdvcmtNb2R1bGUgfSBmcm9tIFwiLi4vLi4vbmV0d29yay9JTmV0d29ya01vZHVsZVwiO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBBYWRBdXRob3JpdHkgY2xhc3MgZXh0ZW5kcyB0aGUgQXV0aG9yaXR5IGNsYXNzIGFuZCBhZGRzIGZ1bmN0aW9uYWxpdHkgc3BlY2lmaWMgdG8gdGhlIEF6dXJlIEFEIE9BdXRoIEF1dGhvcml0eS5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBBYWRBdXRob3JpdHkgZXh0ZW5kcyBBdXRob3JpdHkge1xyXG4gICAgLy8gU2V0IGF1dGhvcml0eSB0eXBlIHRvIEFBRFxyXG4gICAgcHVibGljIGdldCBhdXRob3JpdHlUeXBlKCk6IEF1dGhvcml0eVR5cGUge1xyXG4gICAgICAgIHJldHVybiBBdXRob3JpdHlUeXBlLkFhZDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBEZWZhdWx0IEFBRCBJbnN0YW5jZSBEaXNjb3ZlcnkgRW5kcG9pbnRcclxuICAgIHByaXZhdGUgZ2V0IGFhZEluc3RhbmNlRGlzY292ZXJ5RW5kcG9pbnRVcmwoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gYCR7Q29uc3RhbnRzLkFBRF9JTlNUQU5DRV9ESVNDT1ZFUllfRU5EUFR9P2FwaS12ZXJzaW9uPTEuMCZhdXRob3JpemF0aW9uX2VuZHBvaW50PSR7dGhpcy5jYW5vbmljYWxBdXRob3JpdHl9b2F1dGgyL3YyLjAvYXV0aG9yaXplYDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoYXV0aG9yaXR5OiBzdHJpbmcsIG5ldHdvcmtJbnRlcmZhY2U6IElOZXR3b3JrTW9kdWxlKSB7XHJcbiAgICAgICAgc3VwZXIoYXV0aG9yaXR5LCBuZXR3b3JrSW50ZXJmYWNlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBwcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIHRoZSBPSURDIGVuZHBvaW50XHJcbiAgICAgKiBPbmx5IHJlc3BvbmRzIHdpdGggdGhlIGVuZHBvaW50XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhc3luYyBnZXRPcGVuSWRDb25maWd1cmF0aW9uRW5kcG9pbnRBc3luYygpOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gICAgICAgIGlmICh0aGlzLmlzSW5UcnVzdGVkSG9zdExpc3QodGhpcy5jYW5vbmljYWxBdXRob3JpdHlVcmxDb21wb25lbnRzLkhvc3ROYW1lQW5kUG9ydCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVmYXVsdE9wZW5JZENvbmZpZ3VyYXRpb25FbmRwb2ludDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGZvciBjdXN0b20gZG9tYWlucyBpbiBBQUQgd2hlcmUgd2UgcXVlcnkgdGhlIHNlcnZpY2UgZm9yIHRoZSBJbnN0YW5jZSBkaXNjb3ZlcnlcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMubmV0d29ya0ludGVyZmFjZS5zZW5kR2V0UmVxdWVzdEFzeW5jPE9wZW5JZENvbmZpZ1Jlc3BvbnNlPih0aGlzLmFhZEluc3RhbmNlRGlzY292ZXJ5RW5kcG9pbnRVcmwpO1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS50ZW5hbnRfZGlzY292ZXJ5X2VuZHBvaW50O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaG9zdCBpcyBpbiBhIGxpc3Qgb2YgdHJ1c3RlZCBob3N0c1xyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFRoZSBob3N0IHRvIGxvb2sgdXBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBpc0luVHJ1c3RlZEhvc3RMaXN0KGhvc3Q6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBBQURUcnVzdGVkSG9zdExpc3QuaW5jbHVkZXMoaG9zdCk7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IEF1dGhvcml0eSB9IGZyb20gXCIuL0F1dGhvcml0eVwiO1xyXG5pbXBvcnQgeyBBYWRBdXRob3JpdHkgfSBmcm9tIFwiLi9BYWRBdXRob3JpdHlcIjtcclxuaW1wb3J0IHsgQXV0aG9yaXR5VHlwZSB9IGZyb20gXCIuL0F1dGhvcml0eVR5cGVcIjtcclxuaW1wb3J0IHsgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yIH0gZnJvbSBcIi4uLy4uL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvclwiO1xyXG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yXCI7XHJcbmltcG9ydCB7IElOZXR3b3JrTW9kdWxlIH0gZnJvbSBcIi4uLy4uL25ldHdvcmsvSU5ldHdvcmtNb2R1bGVcIjtcclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvU3RyaW5nVXRpbHNcIjtcclxuaW1wb3J0IHsgVXJsU3RyaW5nIH0gZnJvbSBcIi4uLy4uL3VybC9VcmxTdHJpbmdcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBdXRob3JpdHlGYWN0b3J5IHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIHRoZSB1cmwgYW5kIGRldGVybWluZSB0aGUgdHlwZSBvZiBhdXRob3JpdHlcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgZGV0ZWN0QXV0aG9yaXR5RnJvbVVybChhdXRob3JpdHlTdHJpbmc6IHN0cmluZyk6IEF1dGhvcml0eVR5cGUge1xyXG4gICAgICAgIGNvbnN0IGF1dGhvcml0eVVybCA9IG5ldyBVcmxTdHJpbmcoYXV0aG9yaXR5U3RyaW5nKTtcclxuICAgICAgICBjb25zdCBjb21wb25lbnRzID0gYXV0aG9yaXR5VXJsLmdldFVybENvbXBvbmVudHMoKTtcclxuICAgICAgICBjb25zdCBwYXRoU2VnbWVudHMgPSBjb21wb25lbnRzLlBhdGhTZWdtZW50cztcclxuICAgICAgICBzd2l0Y2ggKHBhdGhTZWdtZW50c1swXSkge1xyXG4gICAgICAgICAgICBjYXNlIFwidGZwXCI6XHJcbiAgICAgICAgICAgICAgICAvLyB0ZnAgZGVub3RlcyBhIGIyYyB1cmxcclxuICAgICAgICAgICAgICAgIHJldHVybiBBdXRob3JpdHlUeXBlLkIyQztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIC8vIGRlZmF1bHQgYXV0aG9yaXR5IGlzIGFsd2F5cyBBQURcclxuICAgICAgICAgICAgICAgIHJldHVybiBBdXRob3JpdHlUeXBlLkFhZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYW4gYXV0aG9yaXR5IG9iamVjdCBvZiB0aGUgY29ycmVjdCB0eXBlIGJhc2VkIG9uIHRoZSB1cmxcclxuICAgICAqIFBlcmZvcm1zIGJhc2ljIGF1dGhvcml0eSB2YWxpZGF0aW9uIC0gY2hlY2tzIHRvIHNlZSBpZiB0aGUgYXV0aG9yaXR5IGlzIG9mIGEgdmFsaWQgdHlwZSAoZWcgYWFkLCBiMmMpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlSW5zdGFuY2UoYXV0aG9yaXR5VXJsOiBzdHJpbmcsIG5ldHdvcmtJbnRlcmZhY2U6IElOZXR3b3JrTW9kdWxlKTogQXV0aG9yaXR5IHtcclxuICAgICAgICAvLyBUaHJvdyBlcnJvciBpZiBhdXRob3JpdHkgdXJsIGlzIGVtcHR5XHJcbiAgICAgICAgaWYgKFN0cmluZ1V0aWxzLmlzRW1wdHkoYXV0aG9yaXR5VXJsKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlVXJsRW1wdHlFcnJvcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgdHlwZSA9IEF1dGhvcml0eUZhY3RvcnkuZGV0ZWN0QXV0aG9yaXR5RnJvbVVybChhdXRob3JpdHlVcmwpO1xyXG4gICAgICAgIC8vIERlcGVuZGluZyBvbiBhYm92ZSBkZXRlY3Rpb24sIGNyZWF0ZSB0aGUgcmlnaHQgdHlwZS5cclxuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBBdXRob3JpdHlUeXBlLkFhZDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQWFkQXV0aG9yaXR5KGF1dGhvcml0eVVybCwgbmV0d29ya0ludGVyZmFjZSk7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlSW52YWxpZEF1dGhvcml0eVR5cGVFcnJvcihgR2l2ZW4gVXJsOiAke2F1dGhvcml0eVVybH1gKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IEF1dGhNb2R1bGUgfSBmcm9tIFwiLi9BdXRoTW9kdWxlXCI7XHJcbmltcG9ydCB7IFB1YmxpY0NsaWVudFNQQUNvbmZpZ3VyYXRpb24sIGJ1aWxkUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuLi9jb25maWcvUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvblwiO1xyXG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvblBhcmFtZXRlcnMgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9BdXRoZW50aWNhdGlvblBhcmFtZXRlcnNcIjtcclxuaW1wb3J0IHsgVG9rZW5FeGNoYW5nZVBhcmFtZXRlcnMgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9Ub2tlbkV4Y2hhbmdlUGFyYW1ldGVyc1wiO1xyXG5pbXBvcnQgeyBUb2tlblJlbmV3UGFyYW1ldGVycyB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L1Rva2VuUmVuZXdQYXJhbWV0ZXJzXCI7XHJcbmltcG9ydCB7IFNlcnZlckNvZGVSZXF1ZXN0UGFyYW1ldGVycyB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvU2VydmVyQ29kZVJlcXVlc3RQYXJhbWV0ZXJzXCI7XHJcbmltcG9ydCB7IFNlcnZlclRva2VuUmVxdWVzdFBhcmFtZXRlcnMgfSBmcm9tIFwiLi4vLi4vc2VydmVyL1NlcnZlclRva2VuUmVxdWVzdFBhcmFtZXRlcnNcIjtcclxuaW1wb3J0IHsgQ29kZVJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3Jlc3BvbnNlL0NvZGVSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBUb2tlblJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3Jlc3BvbnNlL1Rva2VuUmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgUmVzcG9uc2VIYW5kbGVyIH0gZnJvbSBcIi4uLy4uL3Jlc3BvbnNlL1Jlc3BvbnNlSGFuZGxlclwiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9TZXJ2ZXJBdXRob3JpemF0aW9uQ29kZVJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IFNlcnZlckF1dGhvcml6YXRpb25Ub2tlblJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9TZXJ2ZXJBdXRob3JpemF0aW9uVG9rZW5SZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBDbGllbnRBdXRoRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yXCI7XHJcbmltcG9ydCB7IENsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JcIjtcclxuaW1wb3J0IHsgQWNjZXNzVG9rZW5DYWNoZUl0ZW0gfSBmcm9tIFwiLi4vLi4vY2FjaGUvQWNjZXNzVG9rZW5DYWNoZUl0ZW1cIjtcclxuaW1wb3J0IHsgQXV0aG9yaXR5RmFjdG9yeSB9IGZyb20gXCIuLi8uLi9hdXRoL2F1dGhvcml0eS9BdXRob3JpdHlGYWN0b3J5XCI7XHJcbmltcG9ydCB7IElkVG9rZW4gfSBmcm9tIFwiLi4vLi4vYXV0aC9JZFRva2VuXCI7XHJcbmltcG9ydCB7IFNjb3BlU2V0IH0gZnJvbSBcIi4uLy4uL2F1dGgvU2NvcGVTZXRcIjtcclxuaW1wb3J0IHsgVGVtcG9yYXJ5Q2FjaGVLZXlzLCBQZXJzaXN0ZW50Q2FjaGVLZXlzLCBBQURTZXJ2ZXJQYXJhbUtleXMsIENvbnN0YW50cyB9IGZyb20gXCIuLi8uLi91dGlscy9Db25zdGFudHNcIjtcclxuaW1wb3J0IHsgVGltZVV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL1RpbWVVdGlsc1wiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBVcmxTdHJpbmcgfSBmcm9tIFwiLi4vLi4vdXJsL1VybFN0cmluZ1wiO1xyXG5cclxuLyoqXHJcbiAqIEF1dGhvcml6YXRpb25Db2RlTW9kdWxlIGNsYXNzXHJcbiAqIFxyXG4gKiBPYmplY3QgaW5zdGFuY2Ugd2hpY2ggd2lsbCBjb25zdHJ1Y3QgcmVxdWVzdHMgdG8gc2VuZCB0byBhbmQgaGFuZGxlIHJlc3BvbnNlc1xyXG4gKiBmcm9tIHRoZSBNaWNyb3NvZnQgU1RTIHVzaW5nIHRoZSBhdXRob3JpemF0aW9uIGNvZGUgZmxvdy4gXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQXV0aG9yaXphdGlvbkNvZGVNb2R1bGUgZXh0ZW5kcyBBdXRoTW9kdWxlIHtcclxuXHJcbiAgICAvLyBBcHBsaWNhdGlvbiBjb25maWdcclxuICAgIHByaXZhdGUgY2xpZW50Q29uZmlnOiBQdWJsaWNDbGllbnRTUEFDb25maWd1cmF0aW9uO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3VyYXRpb246IFB1YmxpY0NsaWVudFNQQUNvbmZpZ3VyYXRpb24pIHtcclxuICAgICAgICAvLyBJbXBsZW1lbnQgYmFzZSBtb2R1bGVcclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIHN5c3RlbU9wdGlvbnM6IGNvbmZpZ3VyYXRpb24uc3lzdGVtT3B0aW9ucyxcclxuICAgICAgICAgICAgbG9nZ2VyT3B0aW9uczogY29uZmlndXJhdGlvbi5sb2dnZXJPcHRpb25zLFxyXG4gICAgICAgICAgICBzdG9yYWdlSW50ZXJmYWNlOiBjb25maWd1cmF0aW9uLnN0b3JhZ2VJbnRlcmZhY2UsXHJcbiAgICAgICAgICAgIG5ldHdvcmtJbnRlcmZhY2U6IGNvbmZpZ3VyYXRpb24ubmV0d29ya0ludGVyZmFjZSxcclxuICAgICAgICAgICAgY3J5cHRvSW50ZXJmYWNlOiBjb25maWd1cmF0aW9uLmNyeXB0b0ludGVyZmFjZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIEltcGxlbWVudCBkZWZhdWx0cyBpbiBjb25maWdcclxuICAgICAgICB0aGlzLmNsaWVudENvbmZpZyA9IGJ1aWxkUHVibGljQ2xpZW50U1BBQ29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uKTtcclxuXHJcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBkZWZhdWx0IGF1dGhvcml0eSBpbnN0YW5jZVxyXG4gICAgICAgIHRoaXMuZGVmYXVsdEF1dGhvcml0eUluc3RhbmNlID0gQXV0aG9yaXR5RmFjdG9yeS5jcmVhdGVJbnN0YW5jZSh0aGlzLmNsaWVudENvbmZpZy5hdXRoLmF1dGhvcml0eSB8fCBDb25zdGFudHMuREVGQVVMVF9BVVRIT1JJVFksIHRoaXMubmV0d29ya0NsaWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgdXJsIGZvciBsb2dnaW5nIGluIGEgdXNlci4gVGhpcyB3aWxsIGJ5IGRlZmF1bHQgYXBwZW5kIHRoZSBjbGllbnQgaWQgdG8gdGhlIGxpc3Qgb2Ygc2NvcGVzLCBcclxuICAgICAqIGFsbG93aW5nIHlvdSB0byByZXRyaWV2ZSBhbiBpZCB0b2tlbiBpbiB0aGUgc3Vic2VxdWVudCBjb2RlIGV4Y2hhbmdlLiBBbHNvIHBlcmZvcm1zIHZhbGlkYXRpb24gb2YgdGhlIHJlcXVlc3QgcGFyYW1ldGVycy5cclxuICAgICAqIEluY2x1ZGluZyBhbnkgU1NPIHBhcmFtZXRlcnMgKGFjY291bnQsIHNpZCwgbG9naW5faGludCkgd2lsbCBzaG9ydCBjaXJjdWl0IHRoZSBhdXRoZW50aWNhdGlvbiBhbmQgYWxsb3cgeW91IHRvIHJldHJpZXZlIGEgY29kZSB3aXRob3V0IGludGVyYWN0aW9uLlxyXG4gICAgICogQHBhcmFtIHJlcXVlc3QgXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGNyZWF0ZUxvZ2luVXJsKHJlcXVlc3Q6IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycyk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlVXJsKHJlcXVlc3QsIHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIHVybCBmb3IgbG9nZ2luZyBpbiBhIHVzZXIuIEFsc28gcGVyZm9ybXMgdmFsaWRhdGlvbiBvZiB0aGUgcmVxdWVzdCBwYXJhbWV0ZXJzLlxyXG4gICAgICogSW5jbHVkaW5nIGFueSBTU08gcGFyYW1ldGVycyAoYWNjb3VudCwgc2lkLCBsb2dpbl9oaW50KSB3aWxsIHNob3J0IGNpcmN1aXQgdGhlIGF1dGhlbnRpY2F0aW9uIGFuZCBhbGxvdyB5b3UgdG8gcmV0cmlldmUgYSBjb2RlIHdpdGhvdXQgaW50ZXJhY3Rpb24uXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdCBcclxuICAgICAqL1xyXG4gICAgYXN5bmMgY3JlYXRlQWNxdWlyZVRva2VuVXJsKHJlcXVlc3Q6IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycyk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlVXJsKHJlcXVlc3QsIGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBmdW5jdGlvbiB3aGljaCBjcmVhdGVzIFVSTC4gSWYgaXNMb2dpbkNhbGwgaXMgdHJ1ZSwgTVNBTCBhcHBlbmRzIGNsaWVudCBpZCBzY29wZSB0byByZXRyaWV2ZSBpZCB0b2tlbiBmcm9tIHRoZSBzZXJ2aWNlLlxyXG4gICAgICogQHBhcmFtIHJlcXVlc3QgXHJcbiAgICAgKiBAcGFyYW0gaXNMb2dpbkNhbGwgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYXN5bmMgY3JlYXRlVXJsKHJlcXVlc3Q6IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycywgaXNMb2dpbkNhbGw6IGJvb2xlYW4pOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gICAgICAgIC8vIEluaXRpYWxpemUgYXV0aG9yaXR5IG9yIHVzZSBkZWZhdWx0LCBhbmQgcGVyZm9ybSBkaXNjb3ZlcnkgZW5kcG9pbnQgY2hlY2suXHJcbiAgICAgICAgY29uc3QgYWNxdWlyZVRva2VuQXV0aG9yaXR5ID0gKHJlcXVlc3QgJiYgcmVxdWVzdC5hdXRob3JpdHkpID8gQXV0aG9yaXR5RmFjdG9yeS5jcmVhdGVJbnN0YW5jZShyZXF1ZXN0LmF1dGhvcml0eSwgdGhpcy5uZXR3b3JrQ2xpZW50KSA6IHRoaXMuZGVmYXVsdEF1dGhvcml0eUluc3RhbmNlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGFjcXVpcmVUb2tlbkF1dGhvcml0eS5yZXNvbHZlRW5kcG9pbnRzQXN5bmMoKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVFbmRwb2ludERpc2NvdmVyeUluY29tcGxldGVFcnJvcihlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENyZWF0ZSBhbmQgdmFsaWRhdGUgcmVxdWVzdCBwYXJhbWV0ZXJzLlxyXG4gICAgICAgIGxldCByZXF1ZXN0UGFyYW1ldGVyczogU2VydmVyQ29kZVJlcXVlc3RQYXJhbWV0ZXJzO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJlcXVlc3RQYXJhbWV0ZXJzID0gbmV3IFNlcnZlckNvZGVSZXF1ZXN0UGFyYW1ldGVycyhcclxuICAgICAgICAgICAgICAgIGFjcXVpcmVUb2tlbkF1dGhvcml0eSxcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xpZW50Q29uZmlnLmF1dGguY2xpZW50SWQsXHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0LFxyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRBY2NvdW50KCksXHJcbiAgICAgICAgICAgICAgICB0aGlzLmdldFJlZGlyZWN0VXJpKCksXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNyeXB0b09iaixcclxuICAgICAgICAgICAgICAgIGlzTG9naW5DYWxsXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAvLyBDaGVjayBmb3IgU1NPLlxyXG4gICAgICAgICAgICBsZXQgYWRhbElkVG9rZW46IElkVG9rZW4gPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAoIXJlcXVlc3RQYXJhbWV0ZXJzLmhhc1NTT1BhcmFtKCkpIHtcclxuICAgICAgICAgICAgICAgIC8vIE9ubHkgY2hlY2sgZm9yIGFkYWwgdG9rZW4gaWYgbm8gU1NPIHBhcmFtcyBhcmUgYmVpbmcgdXNlZFxyXG4gICAgICAgICAgICAgICAgY29uc3QgYWRhbElkVG9rZW5TdHJpbmcgPSB0aGlzLmNhY2hlU3RvcmFnZS5nZXRJdGVtKFBlcnNpc3RlbnRDYWNoZUtleXMuQURBTF9JRF9UT0tFTik7XHJcbiAgICAgICAgICAgICAgICBpZiAoIVN0cmluZ1V0aWxzLmlzRW1wdHkoYWRhbElkVG9rZW5TdHJpbmcpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWRhbElkVG9rZW4gPSBuZXcgSWRUb2tlbihhZGFsSWRUb2tlblN0cmluZywgdGhpcy5jcnlwdG9PYmopO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVTdG9yYWdlLnJlbW92ZUl0ZW0oUGVyc2lzdGVudENhY2hlS2V5cy5BREFMX0lEX1RPS0VOKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gVXBkYXRlIHJlcXVpcmVkIGNhY2hlIGVudHJpZXMgZm9yIHJlcXVlc3QuXHJcbiAgICAgICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyLnVwZGF0ZUNhY2hlRW50cmllcyhyZXF1ZXN0UGFyYW1ldGVycywgcmVxdWVzdC5hY2NvdW50KTtcclxuXHJcbiAgICAgICAgICAgIC8vIFBvcHVsYXRlIHF1ZXJ5IHBhcmFtZXRlcnMgKHNpZC9sb2dpbl9oaW50L2RvbWFpbl9oaW50KSBhbmQgYW55IG90aGVyIGV4dHJhUXVlcnlQYXJhbWV0ZXJzIHNldCBieSB0aGUgZGV2ZWxvcGVyLlxyXG4gICAgICAgICAgICByZXF1ZXN0UGFyYW1ldGVycy5wb3B1bGF0ZVF1ZXJ5UGFyYW1zKGFkYWxJZFRva2VuKTtcclxuXHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSB1cmwgdG8gbmF2aWdhdGUgdG8uXHJcbiAgICAgICAgICAgIGNvbnN0IHVybE5hdmlnYXRlID0gYXdhaXQgcmVxdWVzdFBhcmFtZXRlcnMuY3JlYXRlTmF2aWdhdGVVcmwoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIENhY2hlIHRva2VuIHJlcXVlc3QuXHJcbiAgICAgICAgICAgIGNvbnN0IHRva2VuUmVxdWVzdDogVG9rZW5FeGNoYW5nZVBhcmFtZXRlcnMgPSB7XHJcbiAgICAgICAgICAgICAgICBzY29wZXM6IHJlcXVlc3RQYXJhbWV0ZXJzLnNjb3Blcy5nZXRPcmlnaW5hbFNjb3Blc0FzQXJyYXkoKSxcclxuICAgICAgICAgICAgICAgIHJlc291cmNlOiByZXF1ZXN0LnJlc291cmNlLFxyXG4gICAgICAgICAgICAgICAgY29kZVZlcmlmaWVyOiByZXF1ZXN0UGFyYW1ldGVycy5nZW5lcmF0ZWRQa2NlLnZlcmlmaWVyLFxyXG4gICAgICAgICAgICAgICAgZXh0cmFRdWVyeVBhcmFtZXRlcnM6IHJlcXVlc3QuZXh0cmFRdWVyeVBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgICAgICBhdXRob3JpdHk6IHJlcXVlc3RQYXJhbWV0ZXJzLmF1dGhvcml0eUluc3RhbmNlLmNhbm9uaWNhbEF1dGhvcml0eSxcclxuICAgICAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IHJlcXVlc3RQYXJhbWV0ZXJzLmNvcnJlbGF0aW9uSWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdGhpcy5jYWNoZVN0b3JhZ2Uuc2V0SXRlbShUZW1wb3JhcnlDYWNoZUtleXMuUkVRVUVTVF9QQVJBTVMsIHRoaXMuY3J5cHRvT2JqLmJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeSh0b2tlblJlcXVlc3QpKSk7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdXJsTmF2aWdhdGU7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAvLyBSZXNldCBjYWNoZSBpdGVtcyBiZWZvcmUgcmUtdGhyb3dpbmcuXHJcbiAgICAgICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyLnJlc2V0VGVtcENhY2hlSXRlbXMocmVxdWVzdFBhcmFtZXRlcnMgJiYgcmVxdWVzdFBhcmFtZXRlcnMuc3RhdGUpO1xyXG4gICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdpdmVuIGFuIGF1dGhvcml6YXRpb24gY29kZSwgaXQgd2lsbCBwZXJmb3JtIGEgdG9rZW4gZXhjaGFuZ2UgdXNpbmcgY2FjaGVkIHZhbHVlcyBmcm9tIGEgcHJldmlvdXMgY2FsbCB0b1xyXG4gICAgICogY3JlYXRlTG9naW5VcmwoKSBvciBjcmVhdGVBY3F1aXJlVG9rZW5VcmwoKS4gWW91IG11c3QgY2FsbCB0aGlzIEFGVEVSIHVzaW5nIG9uZSBvZiB0aG9zZSBBUElzIGZpcnN0LiBZb3Ugc2hvdWxkXHJcbiAgICAgKiBhbHNvIHVzZSB0aGUgaGFuZGxlRnJhZ21lbnRSZXNwb25zZSgpIEFQSSB0byBwYXNzIHRoZSBjb2RlUmVzcG9uc2UgdG8gdGhpcyBmdW5jdGlvbiBhZnRlcndhcmRzLlxyXG4gICAgICogQHBhcmFtIGNvZGVSZXNwb25zZSBcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2VuKGNvZGVSZXNwb25zZTogQ29kZVJlc3BvbnNlKTogUHJvbWlzZTxUb2tlblJlc3BvbnNlPiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gSWYgbm8gY29kZSByZXNwb25zZSBpcyBnaXZlbiwgd2UgY2Fubm90IGFjcXVpcmUgYSB0b2tlbi5cclxuICAgICAgICAgICAgaWYgKCFjb2RlUmVzcG9uc2UgfHwgU3RyaW5nVXRpbHMuaXNFbXB0eShjb2RlUmVzcG9uc2UuY29kZSkpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVUb2tlblJlcXVlc3RDYW5ub3RCZU1hZGVFcnJvcigpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBHZXQgcmVxdWVzdCBmcm9tIGNhY2hlXHJcbiAgICAgICAgICAgIGNvbnN0IHRva2VuUmVxdWVzdDogVG9rZW5FeGNoYW5nZVBhcmFtZXRlcnMgPSB0aGlzLmdldENhY2hlZFJlcXVlc3QoY29kZVJlc3BvbnNlLnVzZXJSZXF1ZXN0U3RhdGUpO1xyXG5cclxuICAgICAgICAgICAgLy8gSW5pdGlhbGl6ZSBhdXRob3JpdHkgb3IgdXNlIGRlZmF1bHQsIGFuZCBwZXJmb3JtIGRpc2NvdmVyeSBlbmRwb2ludCBjaGVjay5cclxuICAgICAgICAgICAgY29uc3QgYWNxdWlyZVRva2VuQXV0aG9yaXR5ID0gKHRva2VuUmVxdWVzdCAmJiB0b2tlblJlcXVlc3QuYXV0aG9yaXR5KSA/IEF1dGhvcml0eUZhY3RvcnkuY3JlYXRlSW5zdGFuY2UodG9rZW5SZXF1ZXN0LmF1dGhvcml0eSwgdGhpcy5uZXR3b3JrQ2xpZW50KSA6IHRoaXMuZGVmYXVsdEF1dGhvcml0eUluc3RhbmNlO1xyXG4gICAgICAgICAgICBpZiAoIWFjcXVpcmVUb2tlbkF1dGhvcml0eS5kaXNjb3ZlcnlDb21wbGV0ZSgpKSB7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IGFjcXVpcmVUb2tlbkF1dGhvcml0eS5yZXNvbHZlRW5kcG9pbnRzQXN5bmMoKTtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlRW5kcG9pbnREaXNjb3ZlcnlJbmNvbXBsZXRlRXJyb3IoZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIEdldCB0b2tlbiBlbmRwb2ludC5cclxuICAgICAgICAgICAgY29uc3QgeyB0b2tlbkVuZHBvaW50IH0gPSBhY3F1aXJlVG9rZW5BdXRob3JpdHk7XHJcbiAgICAgICAgICAgIC8vIEluaXRpYWxpemUgcmVxdWVzdCBwYXJhbWV0ZXJzLlxyXG4gICAgICAgICAgICBjb25zdCB0b2tlblJlcVBhcmFtcyA9IG5ldyBTZXJ2ZXJUb2tlblJlcXVlc3RQYXJhbWV0ZXJzKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jbGllbnRDb25maWcuYXV0aC5jbGllbnRJZCxcclxuICAgICAgICAgICAgICAgIHRva2VuUmVxdWVzdCxcclxuICAgICAgICAgICAgICAgIGNvZGVSZXNwb25zZSxcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0UmVkaXJlY3RVcmkoKSxcclxuICAgICAgICAgICAgICAgIHRoaXMuY3J5cHRvT2JqXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAvLyBVc2VyIGhlbHBlciB0byByZXRyaWV2ZSB0b2tlbiByZXNwb25zZS5cclxuICAgICAgICAgICAgLy8gTmVlZCB0byBhd2FpdCBmdW5jdGlvbiBjYWxsIGJlZm9yZSByZXR1cm4gdG8gY2F0Y2ggYW55IHRocm93biBlcnJvcnMuXHJcbiAgICAgICAgICAgIC8vIGlmIGVycm9ycyBhcmUgdGhyb3duIGFzeW5jaHJvbm91c2x5IGluIHJldHVybiBzdGF0ZW1lbnQsIHRoZXkgYXJlIGNhdWdodCBieSBjYWxsZXIgb2YgdGhpcyBmdW5jdGlvbiBpbnN0ZWFkLlxyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRUb2tlblJlc3BvbnNlKHRva2VuRW5kcG9pbnQsIHRva2VuUmVxUGFyYW1zLCB0b2tlblJlcXVlc3QsIGNvZGVSZXNwb25zZSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAvLyBSZXNldCBjYWNoZSBpdGVtcyBhbmQgc2V0IGFjY291bnQgdG8gbnVsbCBiZWZvcmUgcmUtdGhyb3dpbmcuXHJcbiAgICAgICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyLnJlc2V0VGVtcENhY2hlSXRlbXMoY29kZVJlc3BvbnNlICYmIGNvZGVSZXNwb25zZS51c2VyUmVxdWVzdFN0YXRlKTtcclxuICAgICAgICAgICAgdGhpcy5hY2NvdW50ID0gbnVsbDtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXRyaWV2ZXMgYSB0b2tlbiBmcm9tIGNhY2hlIGlmIGl0IGlzIHN0aWxsIHZhbGlkLCBvciB1c2VzIHRoZSBjYWNoZWQgcmVmcmVzaCB0b2tlbiB0byByZW5ld1xyXG4gICAgICogdGhlIGdpdmVuIHRva2VuIGFuZCByZXR1cm5zIHRoZSByZW5ld2VkIHRva2VuLiBXaWxsIHRocm93IGFuIGVycm9yIGlmIGxvZ2luIGlzIG5vdCBjb21wbGV0ZWQgKHVubGVzc1xyXG4gICAgICogaWQgdG9rZW5zIGFyZSBub3QgYmVpbmcgcmVuZXdlZCkuXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdCBcclxuICAgICAqL1xyXG4gICAgYXN5bmMgcmVuZXdUb2tlbihyZXF1ZXN0OiBUb2tlblJlbmV3UGFyYW1ldGVycyk6IFByb21pc2U8VG9rZW5SZXNwb25zZT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIENhbm5vdCByZW5ldyB0b2tlbiBpZiBubyByZXF1ZXN0IG9iamVjdCBpcyBnaXZlbi5cclxuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlRW1wdHlUb2tlblJlcXVlc3RFcnJvcigpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBHZXQgYWNjb3VudCBvYmplY3QgZm9yIHRoaXMgcmVxdWVzdC5cclxuICAgICAgICAgICAgY29uc3QgYWNjb3VudCA9IHJlcXVlc3QuYWNjb3VudCB8fCB0aGlzLmdldEFjY291bnQoKTtcclxuICAgICAgICAgICAgY29uc3QgcmVxdWVzdFNjb3BlcyA9IG5ldyBTY29wZVNldChyZXF1ZXN0LnNjb3BlcyB8fCBbXSwgdGhpcy5jbGllbnRDb25maWcuYXV0aC5jbGllbnRJZCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIC8vIElmIHRoaXMgaXMgYW4gaWQgdG9rZW4gcmVuZXdhbCwgYW5kIG5vIGFjY291bnQgaXMgcHJlc2VudCwgdGhyb3cgYW4gZXJyb3IuXHJcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0U2NvcGVzLmlzTG9naW5TY29wZVNldCgpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWFjY291bnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlVXNlckxvZ2luUmVxdWlyZWRFcnJvcigpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBJbml0aWFsaXplIGF1dGhvcml0eSBvciB1c2UgZGVmYXVsdCwgYW5kIHBlcmZvcm0gZGlzY292ZXJ5IGVuZHBvaW50IGNoZWNrLlxyXG4gICAgICAgICAgICBjb25zdCBhY3F1aXJlVG9rZW5BdXRob3JpdHkgPSByZXF1ZXN0LmF1dGhvcml0eSA/IEF1dGhvcml0eUZhY3RvcnkuY3JlYXRlSW5zdGFuY2UocmVxdWVzdC5hdXRob3JpdHksIHRoaXMubmV0d29ya0NsaWVudCkgOiB0aGlzLmRlZmF1bHRBdXRob3JpdHlJbnN0YW5jZTtcclxuICAgICAgICAgICAgaWYgKCFhY3F1aXJlVG9rZW5BdXRob3JpdHkuZGlzY292ZXJ5Q29tcGxldGUoKSkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBhd2FpdCBhY3F1aXJlVG9rZW5BdXRob3JpdHkucmVzb2x2ZUVuZHBvaW50c0FzeW5jKCk7XHJcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZUVuZHBvaW50RGlzY292ZXJ5SW5jb21wbGV0ZUVycm9yKGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBHZXQgY3VycmVudCBjYWNoZWQgdG9rZW5zXHJcbiAgICAgICAgICAgIGNvbnN0IGNhY2hlZFRva2VuSXRlbSA9IHRoaXMuZ2V0Q2FjaGVkVG9rZW5zKHJlcXVlc3RTY29wZXMsIGFjcXVpcmVUb2tlbkF1dGhvcml0eS5jYW5vbmljYWxBdXRob3JpdHksIHJlcXVlc3QucmVzb3VyY2UsIGFjY291bnQgJiYgYWNjb3VudC5ob21lQWNjb3VudElkZW50aWZpZXIpO1xyXG4gICAgICAgICAgICBjb25zdCBleHBpcmF0aW9uU2VjID0gTnVtYmVyKGNhY2hlZFRva2VuSXRlbS52YWx1ZS5leHBpcmVzT25TZWMpO1xyXG4gICAgICAgICAgICBjb25zdCBvZmZzZXRDdXJyZW50VGltZVNlYyA9IFRpbWVVdGlscy5ub3dTZWNvbmRzKCkgKyB0aGlzLmNsaWVudENvbmZpZy5zeXN0ZW1PcHRpb25zLnRva2VuUmVuZXdhbE9mZnNldFNlY29uZHM7XHJcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHJlZnJlc2ggaXMgZm9yY2VkLCBvciBpZiB0b2tlbnMgYXJlIGV4cGlyZWQuIElmIG5laXRoZXIgYXJlIHRydWUsIHJldHVybiBhIHRva2VuIHJlc3BvbnNlIHdpdGggdGhlIGZvdW5kIHRva2VuIGVudHJ5LlxyXG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QuZm9yY2VSZWZyZXNoICYmIGV4cGlyYXRpb25TZWMgJiYgZXhwaXJhdGlvblNlYyA+IG9mZnNldEN1cnJlbnRUaW1lU2VjKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZWRTY29wZXMgPSBTY29wZVNldC5mcm9tU3RyaW5nKGNhY2hlZFRva2VuSXRlbS5rZXkuc2NvcGVzLCB0aGlzLmNsaWVudENvbmZpZy5hdXRoLmNsaWVudElkLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRUb2tlblJlc3BvbnNlOiBUb2tlblJlc3BvbnNlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHVuaXF1ZUlkOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHRlbmFudElkOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHNjb3BlczogY2FjaGVkU2NvcGVzLmFzQXJyYXkoKSxcclxuICAgICAgICAgICAgICAgICAgICB0b2tlblR5cGU6IGNhY2hlZFRva2VuSXRlbS52YWx1ZS50b2tlblR5cGUsXHJcbiAgICAgICAgICAgICAgICAgICAgaWRUb2tlbjogXCJcIixcclxuICAgICAgICAgICAgICAgICAgICBpZFRva2VuQ2xhaW1zOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuOiBjYWNoZWRUb2tlbkl0ZW0udmFsdWUuYWNjZXNzVG9rZW4sXHJcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFRva2VuOiBjYWNoZWRUb2tlbkl0ZW0udmFsdWUucmVmcmVzaFRva2VuLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4cGlyZXNPbjogbmV3IERhdGUoZXhwaXJhdGlvblNlYyAqIDEwMDApLFxyXG4gICAgICAgICAgICAgICAgICAgIGFjY291bnQ6IGFjY291bnQsXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlclJlcXVlc3RTdGF0ZTogXCJcIlxyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBPbmx5IHBvcHVsYXRlIGlkIHRva2VuIGlmIGl0IGV4aXN0cyBpbiBjYWNoZSBpdGVtLlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFN0cmluZ1V0aWxzLmlzRW1wdHkoY2FjaGVkVG9rZW5JdGVtLnZhbHVlLmlkVG9rZW4pID8gZGVmYXVsdFRva2VuUmVzcG9uc2UgOiBcclxuICAgICAgICAgICAgICAgICAgICBSZXNwb25zZUhhbmRsZXIuc2V0UmVzcG9uc2VJZFRva2VuKGRlZmF1bHRUb2tlblJlc3BvbnNlLCBuZXcgSWRUb2tlbihjYWNoZWRUb2tlbkl0ZW0udmFsdWUuaWRUb2tlbiwgdGhpcy5jcnlwdG9PYmopKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIFJlbmV3IHRoZSB0b2tlbnMuXHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmF1dGhvcml0eSA9IGNhY2hlZFRva2VuSXRlbS5rZXkuYXV0aG9yaXR5O1xyXG4gICAgICAgICAgICAgICAgY29uc3QgeyB0b2tlbkVuZHBvaW50IH0gPSBhY3F1aXJlVG9rZW5BdXRob3JpdHk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gSW5pdGlhbGl6ZSByZXF1ZXN0IHBhcmFtZXRlcnMuXHJcbiAgICAgICAgICAgICAgICBjb25zdCB0b2tlblJlcVBhcmFtcyA9IG5ldyBTZXJ2ZXJUb2tlblJlcXVlc3RQYXJhbWV0ZXJzKFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xpZW50Q29uZmlnLmF1dGguY2xpZW50SWQsXHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCxcclxuICAgICAgICAgICAgICAgICAgICBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0UmVkaXJlY3RVcmkoKSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNyeXB0b09iaixcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZWRUb2tlbkl0ZW0udmFsdWUucmVmcmVzaFRva2VuXHJcbiAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIFVzZXIgaGVscGVyIHRvIHJldHJpZXZlIHRva2VuIHJlc3BvbnNlLlxyXG4gICAgICAgICAgICAgICAgLy8gTmVlZCB0byBhd2FpdCBmdW5jdGlvbiBjYWxsIGJlZm9yZSByZXR1cm4gdG8gY2F0Y2ggYW55IHRocm93biBlcnJvcnMuXHJcbiAgICAgICAgICAgICAgICAvLyBpZiBlcnJvcnMgYXJlIHRocm93biBhc3luY2hyb25vdXNseSBpbiByZXR1cm4gc3RhdGVtZW50LCB0aGV5IGFyZSBjYXVnaHQgYnkgY2FsbGVyIG9mIHRoaXMgZnVuY3Rpb24gaW5zdGVhZC5cclxuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmdldFRva2VuUmVzcG9uc2UodG9rZW5FbmRwb2ludCwgdG9rZW5SZXFQYXJhbXMsIHJlcXVlc3QpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAvLyBSZXNldCBjYWNoZSBpdGVtcyBhbmQgc2V0IGFjY291bnQgdG8gbnVsbCBiZWZvcmUgcmUtdGhyb3dpbmcuXHJcbiAgICAgICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyLnJlc2V0VGVtcENhY2hlSXRlbXMoKTtcclxuICAgICAgICAgICAgdGhpcy5hY2NvdW50ID0gbnVsbDtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gI3JlZ2lvbiBMb2dvdXRcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVzZSB0byBsb2cgb3V0IHRoZSBjdXJyZW50IHVzZXIsIGFuZCByZWRpcmVjdCB0aGUgdXNlciB0byB0aGUgcG9zdExvZ291dFJlZGlyZWN0VXJpLlxyXG4gICAgICogRGVmYXVsdCBiZWhhdmlvdXIgaXMgdG8gcmVkaXJlY3QgdGhlIHVzZXIgdG8gYHdpbmRvdy5sb2NhdGlvbi5ocmVmYC5cclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlVcmkgXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGxvZ291dChhdXRob3JpdHlVcmk/OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRBY2NvdW50ID0gdGhpcy5nZXRBY2NvdW50KCk7XHJcbiAgICAgICAgLy8gQ2hlY2sgZm9yIGhvbWVBY2NvdW50SWRlbnRpZmllci4gRG8gbm90IHNlbmQgYW55dGhpbmcgaWYgaXQgZG9lc24ndCBleGlzdC5cclxuICAgICAgICBjb25zdCBob21lQWNjb3VudElkZW50aWZpZXIgPSBjdXJyZW50QWNjb3VudCA/IGN1cnJlbnRBY2NvdW50LmhvbWVBY2NvdW50SWRlbnRpZmllciA6IFwiXCI7XHJcbiAgICAgICAgLy8gUmVtb3ZlIGFsbCBwZXJ0aW5lbnQgYWNjZXNzIHRva2Vucy5cclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlci5yZW1vdmVBbGxBY2Nlc3NUb2tlbnModGhpcy5jbGllbnRDb25maWcuYXV0aC5jbGllbnRJZCwgYXV0aG9yaXR5VXJpLCBcIlwiLCBob21lQWNjb3VudElkZW50aWZpZXIpO1xyXG4gICAgICAgIC8vIENsZWFyIHJlbWFpbmluZyBjYWNoZSBpdGVtcy5cclxuICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5jbGVhcigpO1xyXG4gICAgICAgIC8vIENsZWFyIGN1cnJlbnQgYWNjb3VudC5cclxuICAgICAgICB0aGlzLmFjY291bnQgPSBudWxsO1xyXG4gICAgICAgIC8vIEdldCBwb3N0TG9nb3V0UmVkaXJlY3RVcmkuXHJcbiAgICAgICAgbGV0IHBvc3RMb2dvdXRSZWRpcmVjdFVyaSA9IFwiXCI7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcG9zdExvZ291dFJlZGlyZWN0VXJpID0gYD8ke0FBRFNlcnZlclBhcmFtS2V5cy5QT1NUX0xPR09VVF9VUkl9PWAgKyBlbmNvZGVVUklDb21wb25lbnQodGhpcy5nZXRQb3N0TG9nb3V0UmVkaXJlY3RVcmkoKSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge31cclxuXHJcbiAgICAgICAgLy8gQWNxdWlyZSB0b2tlbiBhdXRob3JpdGllcy5cclxuICAgICAgICBjb25zdCBhY3F1aXJlVG9rZW5BdXRob3JpdHkgPSAoYXV0aG9yaXR5VXJpKSA/IEF1dGhvcml0eUZhY3RvcnkuY3JlYXRlSW5zdGFuY2UoYXV0aG9yaXR5VXJpLCB0aGlzLm5ldHdvcmtDbGllbnQpIDogdGhpcy5kZWZhdWx0QXV0aG9yaXR5SW5zdGFuY2U7XHJcbiAgICAgICAgaWYgKCFhY3F1aXJlVG9rZW5BdXRob3JpdHkuZGlzY292ZXJ5Q29tcGxldGUoKSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgYWNxdWlyZVRva2VuQXV0aG9yaXR5LnJlc29sdmVFbmRwb2ludHNBc3luYygpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlRW5kcG9pbnREaXNjb3ZlcnlJbmNvbXBsZXRlRXJyb3IoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENvbnN0cnVjdCBsb2dvdXQgVVJJLlxyXG4gICAgICAgIGNvbnN0IGxvZ291dFVyaSA9IGAke2FjcXVpcmVUb2tlbkF1dGhvcml0eS5lbmRTZXNzaW9uRW5kcG9pbnR9JHtwb3N0TG9nb3V0UmVkaXJlY3RVcml9YDtcclxuICAgICAgICByZXR1cm4gbG9nb3V0VXJpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vICNlbmRyZWdpb25cclxuXHJcbiAgICAvLyAjcmVnaW9uIFJlc3BvbnNlIEhhbmRsaW5nXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIHRoZSBoYXNoIGZyYWdtZW50IHJlc3BvbnNlIGZyb20gcHVibGljIGNsaWVudCBjb2RlIHJlcXVlc3QuIFJldHVybnMgYSBjb2RlIHJlc3BvbnNlIHVzZWQgYnlcclxuICAgICAqIHRoZSBjbGllbnQgdG8gZXhjaGFuZ2UgZm9yIGEgdG9rZW4gaW4gYWNxdWlyZVRva2VuLlxyXG4gICAgICogQHBhcmFtIGhhc2hGcmFnbWVudCBcclxuICAgICAqL1xyXG4gICAgcHVibGljIGhhbmRsZUZyYWdtZW50UmVzcG9uc2UoaGFzaEZyYWdtZW50OiBzdHJpbmcpOiBDb2RlUmVzcG9uc2Uge1xyXG4gICAgICAgIC8vIEhhbmRsZSByZXNwb25zZXMuXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2VIYW5kbGVyID0gbmV3IFJlc3BvbnNlSGFuZGxlcih0aGlzLmNsaWVudENvbmZpZy5hdXRoLmNsaWVudElkLCB0aGlzLmNhY2hlU3RvcmFnZSwgdGhpcy5jYWNoZU1hbmFnZXIsIHRoaXMuY3J5cHRvT2JqLCB0aGlzLmxvZ2dlcik7XHJcbiAgICAgICAgLy8gRGVzZXJpYWxpemUgaGFzaCBmcmFnbWVudCByZXNwb25zZSBwYXJhbWV0ZXJzLlxyXG4gICAgICAgIGNvbnN0IGhhc2hVcmxTdHJpbmcgPSBuZXcgVXJsU3RyaW5nKGhhc2hGcmFnbWVudCk7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyUGFyYW1zID0gaGFzaFVybFN0cmluZy5nZXREZXNlcmlhbGl6ZWRIYXNoPFNlcnZlckF1dGhvcml6YXRpb25Db2RlUmVzcG9uc2U+KCk7XHJcbiAgICAgICAgLy8gR2V0IGNvZGUgcmVzcG9uc2VcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2VIYW5kbGVyLmhhbmRsZVNlcnZlckNvZGVSZXNwb25zZShzZXJ2ZXJQYXJhbXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vICNlbmRyZWdpb25cclxuXHJcbiAgICAvLyAjcmVnaW9uIEhlbHBlcnNcclxuXHJcbiAgICAvKipcclxuICAgICAqIENsZWFycyBjYWNoZSBvZiBpdGVtcyByZWxhdGVkIHRvIGN1cnJlbnQgcmVxdWVzdC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNhbmNlbFJlcXVlc3QoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkU3RhdGUgPSB0aGlzLmNhY2hlU3RvcmFnZS5nZXRJdGVtKFRlbXBvcmFyeUNhY2hlS2V5cy5SRVFVRVNUX1NUQVRFKTtcclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlci5yZXNldFRlbXBDYWNoZUl0ZW1zKGNhY2hlZFN0YXRlIHx8IFwiXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgdG9rZW4gZXhjaGFuZ2UgcGFyYW1ldGVycyBmcm9tIHRoZSBjYWNoZS4gVGhyb3dzIGFuIGVycm9yIGlmIG5vdGhpbmcgaXMgZm91bmQuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0Q2FjaGVkUmVxdWVzdChzdGF0ZTogc3RyaW5nKTogVG9rZW5FeGNoYW5nZVBhcmFtZXRlcnMge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIEdldCB0b2tlbiByZXF1ZXN0IGZyb20gY2FjaGUgYW5kIHBhcnNlIGFzIFRva2VuRXhjaGFuZ2VQYXJhbWV0ZXJzLlxyXG4gICAgICAgICAgICBjb25zdCBlbmNvZGVkVG9rZW5SZXF1ZXN0ID0gdGhpcy5jYWNoZVN0b3JhZ2UuZ2V0SXRlbShUZW1wb3JhcnlDYWNoZUtleXMuUkVRVUVTVF9QQVJBTVMpO1xyXG4gICAgICAgICAgICBjb25zdCBwYXJzZWRSZXF1ZXN0ID0gSlNPTi5wYXJzZSh0aGlzLmNyeXB0b09iai5iYXNlNjREZWNvZGUoZW5jb2RlZFRva2VuUmVxdWVzdCkpIGFzIFRva2VuRXhjaGFuZ2VQYXJhbWV0ZXJzO1xyXG4gICAgICAgICAgICB0aGlzLmNhY2hlU3RvcmFnZS5yZW1vdmVJdGVtKFRlbXBvcmFyeUNhY2hlS2V5cy5SRVFVRVNUX1BBUkFNUyk7XHJcbiAgICAgICAgICAgIC8vIEdldCBjYWNoZWQgYXV0aG9yaXR5IGFuZCB1c2UgaWYgbm8gYXV0aG9yaXR5IGlzIGNhY2hlZCB3aXRoIHJlcXVlc3QuXHJcbiAgICAgICAgICAgIGlmIChTdHJpbmdVdGlscy5pc0VtcHR5KHBhcnNlZFJlcXVlc3QuYXV0aG9yaXR5KSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYXV0aG9yaXR5S2V5OiBzdHJpbmcgPSB0aGlzLmNhY2hlTWFuYWdlci5nZW5lcmF0ZUF1dGhvcml0eUtleShzdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZWRBdXRob3JpdHk6IHN0cmluZyA9IHRoaXMuY2FjaGVTdG9yYWdlLmdldEl0ZW0oYXV0aG9yaXR5S2V5KTtcclxuICAgICAgICAgICAgICAgIHBhcnNlZFJlcXVlc3QuYXV0aG9yaXR5ID0gY2FjaGVkQXV0aG9yaXR5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZWRSZXF1ZXN0O1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlVG9rZW5SZXF1ZXN0Q2FjaGVFcnJvcihlcnIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgYWxsIGNhY2hlZCB0b2tlbnMgYmFzZWQgb24gdGhlIGdpdmVuIGNyaXRlcmlhLlxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RTY29wZXMgXHJcbiAgICAgKiBAcGFyYW0gYXV0aG9yaXR5VXJpIFxyXG4gICAgICogQHBhcmFtIHJlc291cmNlSWQgXHJcbiAgICAgKiBAcGFyYW0gaG9tZUFjY291bnRJZGVudGlmaWVyIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGdldENhY2hlZFRva2VucyhyZXF1ZXN0U2NvcGVzOiBTY29wZVNldCwgYXV0aG9yaXR5VXJpOiBzdHJpbmcsIHJlc291cmNlSWQ6IHN0cmluZywgaG9tZUFjY291bnRJZGVudGlmaWVyOiBzdHJpbmcpOiBBY2Nlc3NUb2tlbkNhY2hlSXRlbSB7XHJcbiAgICAgICAgLy8gR2V0IGFsbCBhY2Nlc3MgdG9rZW5zIHdpdGggbWF0Y2hpbmcgYXV0aG9yaXR5LCByZXNvdXJjZSBpZCBhbmQgaG9tZSBhY2NvdW50IElEXHJcbiAgICAgICAgY29uc3QgdG9rZW5DYWNoZUl0ZW1zOiBBcnJheTxBY2Nlc3NUb2tlbkNhY2hlSXRlbT4gPSB0aGlzLmNhY2hlTWFuYWdlci5nZXRBbGxBY2Nlc3NUb2tlbnModGhpcy5jbGllbnRDb25maWcuYXV0aC5jbGllbnRJZCwgYXV0aG9yaXR5VXJpIHx8IFwiXCIsIHJlc291cmNlSWQgfHwgXCJcIiwgaG9tZUFjY291bnRJZGVudGlmaWVyIHx8IFwiXCIpO1xyXG4gICAgICAgIGlmICh0b2tlbkNhY2hlSXRlbXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IENsaWVudEF1dGhFcnJvci5jcmVhdGVOb1Rva2Vuc0ZvdW5kRXJyb3IocmVxdWVzdFNjb3Blcy5wcmludFNjb3BlcygpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEZpbHRlciBjYWNoZSBpdGVtcyBiYXNlZCBvbiBhdmFpbGFibGUgc2NvcGVzLlxyXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkQ2FjaGVJdGVtczogQXJyYXk8QWNjZXNzVG9rZW5DYWNoZUl0ZW0+ID0gdG9rZW5DYWNoZUl0ZW1zLmZpbHRlcihjYWNoZUl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjYWNoZWRTY29wZXMgPSBTY29wZVNldC5mcm9tU3RyaW5nKGNhY2hlSXRlbS5rZXkuc2NvcGVzLCB0aGlzLmNsaWVudENvbmZpZy5hdXRoLmNsaWVudElkLCB0cnVlKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNjb3Blcy5jb250YWluc1Njb3BlU2V0KHJlcXVlc3RTY29wZXMpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBJZiBjYWNoZSBpdGVtcyBjb250YWlucyB0b28gbWFueSBtYXRjaGluZyB0b2tlbnMsIHRocm93IGVycm9yLlxyXG4gICAgICAgIGlmIChmaWx0ZXJlZENhY2hlSXRlbXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRBdXRoRXJyb3IuY3JlYXRlTXVsdGlwbGVNYXRjaGluZ1Rva2Vuc0luQ2FjaGVFcnJvcihyZXF1ZXN0U2NvcGVzLnByaW50U2NvcGVzKCkpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoZmlsdGVyZWRDYWNoZUl0ZW1zLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICAvLyBSZXR1cm4gc2luZ2xlIGNhY2hlIGl0ZW0uXHJcbiAgICAgICAgICAgIHJldHVybiBmaWx0ZXJlZENhY2hlSXRlbXNbMF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIElmIGNhY2hlIGl0ZW1zIGFyZSBlbXB0eSwgdGhyb3cgZXJyb3IuXHJcbiAgICAgICAgdGhyb3cgQ2xpZW50QXV0aEVycm9yLmNyZWF0ZU5vVG9rZW5zRm91bmRFcnJvcihyZXF1ZXN0U2NvcGVzLnByaW50U2NvcGVzKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWFrZXMgYSByZXF1ZXN0IHRvIHRoZSB0b2tlbiBlbmRwb2ludCB3aXRoIHRoZSBnaXZlbiBwYXJhbWV0ZXJzIGFuZCBwYXJzZXMgdGhlIHJlc3BvbnNlLlxyXG4gICAgICogQHBhcmFtIHRva2VuRW5kcG9pbnQgXHJcbiAgICAgKiBAcGFyYW0gdG9rZW5SZXFQYXJhbXMgXHJcbiAgICAgKiBAcGFyYW0gdG9rZW5SZXF1ZXN0IFxyXG4gICAgICogQHBhcmFtIGNvZGVSZXNwb25zZSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBhc3luYyBnZXRUb2tlblJlc3BvbnNlKHRva2VuRW5kcG9pbnQ6IHN0cmluZywgdG9rZW5SZXFQYXJhbXM6IFNlcnZlclRva2VuUmVxdWVzdFBhcmFtZXRlcnMsIHRva2VuUmVxdWVzdDogVG9rZW5FeGNoYW5nZVBhcmFtZXRlcnMsIGNvZGVSZXNwb25zZT86IENvZGVSZXNwb25zZSk6IFByb21pc2U8VG9rZW5SZXNwb25zZT4ge1xyXG4gICAgICAgIC8vIFBlcmZvcm0gdG9rZW4gcmVxdWVzdC5cclxuICAgICAgICBjb25zdCBhY3F1aXJlZFRva2VuUmVzcG9uc2UgPSBhd2FpdCB0aGlzLm5ldHdvcmtDbGllbnQuc2VuZFBvc3RSZXF1ZXN0QXN5bmM8U2VydmVyQXV0aG9yaXphdGlvblRva2VuUmVzcG9uc2U+KFxyXG4gICAgICAgICAgICB0b2tlbkVuZHBvaW50LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBib2R5OiB0b2tlblJlcVBhcmFtcy5jcmVhdGVSZXF1ZXN0Qm9keSgpLFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczogdG9rZW5SZXFQYXJhbXMuY3JlYXRlUmVxdWVzdEhlYWRlcnMoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgLy8gQ3JlYXRlIHJlc3BvbnNlIGhhbmRsZXJcclxuICAgICAgICBjb25zdCByZXNwb25zZUhhbmRsZXIgPSBuZXcgUmVzcG9uc2VIYW5kbGVyKHRoaXMuY2xpZW50Q29uZmlnLmF1dGguY2xpZW50SWQsIHRoaXMuY2FjaGVTdG9yYWdlLCB0aGlzLmNhY2hlTWFuYWdlciwgdGhpcy5jcnlwdG9PYmosIHRoaXMubG9nZ2VyKTtcclxuICAgICAgICAvLyBWYWxpZGF0ZSByZXNwb25zZS4gVGhpcyBmdW5jdGlvbiB0aHJvd3MgYSBzZXJ2ZXIgZXJyb3IgaWYgYW4gZXJyb3IgaXMgcmV0dXJuZWQgYnkgdGhlIHNlcnZlci5cclxuICAgICAgICByZXNwb25zZUhhbmRsZXIudmFsaWRhdGVTZXJ2ZXJBdXRob3JpemF0aW9uVG9rZW5SZXNwb25zZShhY3F1aXJlZFRva2VuUmVzcG9uc2UpO1xyXG4gICAgICAgIC8vIFJldHVybiB0b2tlbiByZXNwb25zZSB3aXRoIGdpdmVuIHBhcmFtZXRlcnNcclxuICAgICAgICBjb25zdCB0b2tlblJlc3BvbnNlID0gcmVzcG9uc2VIYW5kbGVyLmNyZWF0ZVRva2VuUmVzcG9uc2UoYWNxdWlyZWRUb2tlblJlc3BvbnNlLCB0b2tlblJlcXVlc3QuYXV0aG9yaXR5LCB0b2tlblJlcXVlc3QucmVzb3VyY2UsIGNvZGVSZXNwb25zZSAmJiBjb2RlUmVzcG9uc2UudXNlclJlcXVlc3RTdGF0ZSk7XHJcbiAgICAgICAgLy8gU2V0IGN1cnJlbnQgYWNjb3VudCB0byByZWNlaXZlZCByZXNwb25zZSBhY2NvdW50LCBpZiBhbnkuXHJcbiAgICAgICAgdGhpcy5hY2NvdW50ID0gdG9rZW5SZXNwb25zZS5hY2NvdW50O1xyXG4gICAgICAgIHJldHVybiB0b2tlblJlc3BvbnNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vICNlbmRyZWdpb25cclxuXHJcbiAgICAvLyAjcmVnaW9uIEdldHRlcnMgYW5kIHNldHRlcnNcclxuXHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBVc2UgdG8gZ2V0IHRoZSByZWRpcmVjdCB1cmkgY29uZmlndXJlZCBpbiBNU0FMIG9yIG51bGwuXHJcbiAgICAgKiBFdmFsdWF0ZXMgcmVkaXJlY3RVcmkgaWYgaXRzIGEgZnVuY3Rpb24sIG90aGVyd2lzZSBzaW1wbHkgcmV0dXJucyBpdHMgdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSByZWRpcmVjdCBVUkxcclxuICAgICAqXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRSZWRpcmVjdFVyaSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmICh0aGlzLmNsaWVudENvbmZpZy5hdXRoLnJlZGlyZWN0VXJpKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5jbGllbnRDb25maWcuYXV0aC5yZWRpcmVjdFVyaSA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb25maWcuYXV0aC5yZWRpcmVjdFVyaSgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFTdHJpbmdVdGlscy5pc0VtcHR5KHRoaXMuY2xpZW50Q29uZmlnLmF1dGgucmVkaXJlY3RVcmkpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb25maWcuYXV0aC5yZWRpcmVjdFVyaTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gXHJcbiAgICAgICAgLy8gVGhpcyBzaG91bGQgbmV2ZXIgdGhyb3cgdW5sZXNzIHdpbmRvdy5sb2NhdGlvbi5ocmVmIGlzIHJldHVybmluZyBlbXB0eS5cclxuICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlUmVkaXJlY3RVcmlFbXB0eUVycm9yKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBVc2UgdG8gZ2V0IHRoZSBwb3N0IGxvZ291dCByZWRpcmVjdCB1cmkgY29uZmlndXJlZCBpbiBNU0FMIG9yIG51bGwuXHJcbiAgICAgKiBFdmFsdWF0ZXMgcG9zdExvZ291dHJlZGlyZWN0VXJpIGlmIGl0cyBhIGZ1bmN0aW9uLCBvdGhlcndpc2Ugc2ltcGx5IHJldHVybnMgaXRzIHZhbHVlLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IHBvc3QgbG9nb3V0IHJlZGlyZWN0IFVSTFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0UG9zdExvZ291dFJlZGlyZWN0VXJpKCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2xpZW50Q29uZmlnLmF1dGgucG9zdExvZ291dFJlZGlyZWN0VXJpKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5jbGllbnRDb25maWcuYXV0aC5wb3N0TG9nb3V0UmVkaXJlY3RVcmkgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50Q29uZmlnLmF1dGgucG9zdExvZ291dFJlZGlyZWN0VXJpKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIVN0cmluZ1V0aWxzLmlzRW1wdHkodGhpcy5jbGllbnRDb25maWcuYXV0aC5wb3N0TG9nb3V0UmVkaXJlY3RVcmkpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb25maWcuYXV0aC5wb3N0TG9nb3V0UmVkaXJlY3RVcmk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IFxyXG4gICAgICAgIC8vIFRoaXMgc2hvdWxkIG5ldmVyIHRocm93IHVubGVzcyB3aW5kb3cubG9jYXRpb24uaHJlZiBpcyByZXR1cm5pbmcgZW1wdHkuXHJcbiAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZVBvc3RMb2dvdXRSZWRpcmVjdFVyaUVtcHR5RXJyb3IoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyAjZW5kcmVnaW9uXHJcbn1cclxuIiwiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcblxyXG4vKipcclxuICogQXV0aFJlc3BvbnNlIGJhc2UgdHlwZSByZXR1cm5lZCBieSBNU0FMIGxpYnJhcnkgb24gc3VjY2Vzc1xyXG4gKiAtIHVzZXJSZXF1ZXN0U3RhdGU6IFVzZXIgZ2l2ZW4gc3RhdGVcclxuICovXHJcbmV4cG9ydCB0eXBlIEF1dGhSZXNwb25zZSA9IHtcclxuICAgIHVzZXJSZXF1ZXN0U3RhdGU6IHN0cmluZztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBCdWlsZHMgYSByZXNwb25zZSB0aGF0IG9ubHkgc2V0cyBzdGF0ZVxyXG4gKiBAcGFyYW0gcmVzcG9uc2VTdGF0ZSBcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBidWlsZFJlc3BvbnNlU3RhdGVPbmx5KHJlc3BvbnNlU3RhdGU6IHN0cmluZykgOiBBdXRoUmVzcG9uc2Uge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB1c2VyUmVxdWVzdFN0YXRlOiByZXNwb25zZVN0YXRlXHJcbiAgICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const BrowserConstants = {\r\n    // Local storage constant string\r\n    CACHE_LOCATION_LOCAL: \"localStorage\",\r\n    // Session storage constant string\r\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\r\n    // Interaction status key (only used for browsers)\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    // Interaction in progress cache value\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    // Default popup window width\r\n    POPUP_WIDTH: 483,\r\n    // Default popup window height\r\n    POPUP_HEIGHT: 600,\r\n    // Default popup monitor poll interval in milliseconds\r\n    POPUP_POLL_INTERVAL_MS: 50\r\n};\r\n\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nexport enum HTTP_REQUEST_TYPE {\r\n    GET = \"GET\",\r\n    POST = \"POST\"\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, NetworkRequestOptions } from \"@azure/msal-common\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nexport class FetchClient implements INetworkModule {\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\r\n        const response = await fetch(url, {\r\n            method: HTTP_REQUEST_TYPE.GET,\r\n            headers: this.getFetchHeaders(options)\r\n        });\r\n        return await response.json() as T;\r\n    }\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\r\n        const reqBody = (options && options.body) || \"\";\r\n        const response = await fetch(url, {\r\n            method: HTTP_REQUEST_TYPE.POST,\r\n            headers: this.getFetchHeaders(options),\r\n            body: reqBody\r\n        });\r\n        return await response.json() as T;\r\n    }\r\n\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders \r\n     */\r\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        options.headers.forEach((value, key) => {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object detected.\"\r\n    },\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    popupWindowTimeoutError: {\r\n        code: \"popup_window_timeout\",\r\n        desc: \"Popup window token acquisition operation failed due to timeout.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when no window object can be found.\r\n     */\r\n    static createNoWindowObjectError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail \r\n     */\r\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\r\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail \r\n     */\r\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\r\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method \r\n     */\r\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\r\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    static createEmptyNavigationUriError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue \r\n     */\r\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    static createInteractionInProgressError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail \r\n     */\r\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\r\n        let errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail \r\n     */\r\n    static createEmptyWindowCreatedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    static createUserCancelledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\r\n            BrowserAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n     * @param urlNavigate \r\n     */\r\n    static createPopupWindowTimeoutError(urlNavigate: string): BrowserAuthError {\r\n        const errorMessage = `URL navigated to is ${urlNavigate}, ${BrowserAuthErrorMessage.popupWindowTimeoutError.desc}`;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowTimeoutError.code,\r\n            errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck \r\n     */\r\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, \r\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, NetworkRequestOptions } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nexport class XhrClient implements INetworkModule {\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\r\n    }\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<T> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\r\n    }\r\n\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url \r\n     * @param method \r\n     * @param options \r\n     */\r\n    private sendRequestAsync<T>(url: string, method: string, options?: NetworkRequestOptions): Promise<T> {\r\n        return new Promise<T>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            this.setXhrHeaders(xhr, options);\r\n            xhr.onload = (): void => {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(xhr.responseText);\r\n                }\r\n                try {\r\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\r\n                    resolve(jsonResponse);\r\n                } catch (e) {\r\n                    reject(xhr.responseText);\r\n                }\r\n            };\r\n\r\n            xhr.onerror = (): void => {\r\n                reject(xhr.status);\r\n            };\r\n\r\n            if (method === \"POST\" && options.body) {\r\n                xhr.send(options.body);\r\n            } else if (method === \"GET\") {\r\n                xhr.send();\r\n            } else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr \r\n     * @param options \r\n     */\r\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\r\n        if (options && options.headers) {\r\n            options.headers.forEach((value, key) => {\r\n                xhr.setRequestHeader(key, value);\r\n            });\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule } from \"@azure/msal-common\";\r\nimport { FetchClient } from \"../network/FetchClient\";\r\nimport { XhrClient } from \"../network/XhrClient\";\r\n\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nexport class BrowserUtils {\r\n\r\n    // #region Window Navigation and URL management\r\n\r\n    /**\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n     */\r\n    static navigateWindow(urlNavigate: string, noHistory?: boolean): void {\r\n        if (noHistory) {\r\n            window.location.replace(urlNavigate);\r\n        } else {\r\n            window.location.assign(urlNavigate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    static clearHash(): void {\r\n        window.location.hash = \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    static isInIframe(): boolean {\r\n        return window.parent !== window;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    static getDefaultRedirectUri(): string {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    }\r\n\r\n    /**\r\n     * Returns best compatible network client object. \r\n     */\r\n    static getBrowserNetworkClient(): INetworkModule {\r\n        if (window.fetch) {\r\n            return new FetchClient();\r\n        } else {\r\n            return new XhrClient();\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthOptions, SystemOptions, LoggerOptions, INetworkModule, LogLevel } from \"@azure/msal-common\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\n\r\n// Default timeout for popup windows in milliseconds\r\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\n\r\nexport type BrowserAuthOptions = AuthOptions & {\r\n    navigateToLoginRequestUrl?: boolean;\r\n};\r\n\r\n/**\r\n * Use this to configure the below cache configuration options:\r\n *\r\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\r\n * - storeAuthStateInCookie   - If set, MSAL store's the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\r\n */\r\nexport type CacheOptions = {\r\n    cacheLocation?: string;\r\n    storeAuthStateInCookie?: boolean;\r\n};\r\n\r\n/**\r\n * Library Specific Options\r\n *\r\n * - logger                       - Used to initialize the Logger object; TODO: Expand on logger details or link to the documentation on logger\r\n * - loadFrameTimeout             - maximum time the library should wait for a frame to load\r\n * - windowHashTimeout            - sets the wait time for hidden iFrame navigation\r\n * - tokenRenewalOffsetSeconds    - sets the window of offset needed to renew the token before expiry\r\n * - telemetry                    - Telemetry options for library network requests\r\n */\r\nexport type BrowserSystemOptions = SystemOptions & {\r\n    loggerOptions?: LoggerOptions;\r\n    networkClient?: INetworkModule;\r\n    windowHashTimeout?: number;\r\n};\r\n\r\n/**\r\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\r\n *\r\n * This object allows you to configure important elements of MSAL functionality:\r\n * - auth: this is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\r\n * - cache: this is where you configure cache location and whether to store cache in cookies\r\n * - system: this is where you can configure the network client, logger, token renewal offset, and telemetry\r\n */\r\nexport type Configuration = {\r\n    auth?: BrowserAuthOptions,\r\n    cache?: CacheOptions,\r\n    system?: BrowserSystemOptions\r\n};\r\n\r\n// Default auth options for browser\r\nconst DEFAULT_AUTH_OPTIONS: BrowserAuthOptions = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    redirectUri: () => BrowserUtils.getDefaultRedirectUri(),\r\n    postLogoutRedirectUri: () => BrowserUtils.getDefaultRedirectUri(),\r\n    navigateToLoginRequestUrl: true\r\n};\r\n\r\n// Default cache options for browser\r\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\r\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\r\n    storeAuthStateInCookie: false\r\n};\r\n\r\n// Default logger options for browser\r\nconst DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n    loggerCallback: (level: LogLevel, message: string, containsPii: boolean): void => {\r\n        if (containsPii) {\r\n            return;\r\n        }\r\n        switch (level) {\r\n            case LogLevel.Error:\r\n                console.error(message);\r\n                return;\r\n            case LogLevel.Info:\r\n                console.info(message);\r\n                return;\r\n            case LogLevel.Verbose:\r\n                console.debug(message);\r\n                return;\r\n            case LogLevel.Warning:\r\n                console.warn(message);\r\n                return;\r\n        }\r\n    },\r\n    piiLoggingEnabled: false\r\n};\r\n\r\n// Default system options for browser\r\nconst DEFAULT_SYSTEM_OPTIONS: BrowserSystemOptions = {\r\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n    networkClient: BrowserUtils.getBrowserNetworkClient(),\r\n    windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS\r\n};\r\n\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TCacheOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\nexport function buildConfiguration({ auth, cache = {}, system = {}}: Configuration): Configuration {\r\n    const overlayedConfig: Configuration = {\r\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...auth },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...cache },\r\n        system: { ...DEFAULT_SYSTEM_OPTIONS, ...system }\r\n    };\r\n    return overlayedConfig;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthError } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserConfigurationAuthErrorMessage = {\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserConfigurationAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation \r\n     */\r\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when callback object is invalid.\r\n     * @param callbackObject \r\n     */\r\n    static createInvalidCallbackObjectError(callbackObject: object): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code,\r\n            `${BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc} Given value for callback function: ${callbackObject}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \r\n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ICacheStorage, Constants, PersistentCacheKeys, TemporaryCacheKeys } from \"@azure/msal-common\";\r\nimport { CacheOptions } from \"../app/Configuration\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\n\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage. \r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for \r\n * parameters such as state and nonce, generally.\r\n */\r\nexport class BrowserStorage implements ICacheStorage {\r\n\r\n    // Cache configuration, either set by user or default values.\r\n    private cacheConfig: CacheOptions;\r\n    // Window storage object (either local or sessionStorage)\r\n    private windowStorage: Storage;\r\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\r\n    private clientId: string;\r\n\r\n    constructor(clientId: string, cacheConfig: CacheOptions) {\r\n        // Validate cache location\r\n        this.validateWindowStorage(cacheConfig.cacheLocation);\r\n\r\n        this.cacheConfig = cacheConfig;\r\n        this.windowStorage = window[this.cacheConfig.cacheLocation];\r\n        this.clientId = clientId;\r\n\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        this.migrateCacheEntries();\r\n    }\r\n\r\n    /**\r\n     * Validates the the given cache location string is an expected value:\r\n     * - localStorage\r\n     * - sessionStorage (default)\r\n     * Also validates if given cacheLocation is supported on the browser.\r\n     * @param cacheLocation \r\n     */\r\n    private validateWindowStorage(cacheLocation: string): void {\r\n        if (typeof window === \"undefined\" || !window) {\r\n            throw BrowserAuthError.createNoWindowObjectError();\r\n        }\r\n\r\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n\r\n        const storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntries(): void {\r\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\r\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\r\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\r\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\r\n\r\n        const idTokenValue = this.getItem(idTokenKey);\r\n        const clientInfoValue = this.getItem(clientInfoKey);\r\n        const errorValue = this.getItem(errorKey);\r\n        const errorDescValue = this.getItem(errorDescKey);\r\n\r\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n\r\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\r\n    }\r\n\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntry(newKey: string, value: string): void {\r\n        if (value) {\r\n            this.setItem(newKey, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    private generateCacheKey(key: string): string {\r\n        try {\r\n            // Defined schemas do not need the key migrated\r\n            this.validateObjectKey(key);\r\n            return key;\r\n        } catch (e) {\r\n            if (key.startsWith(`${Constants.CACHE_PREFIX}`) || key.startsWith(PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses key as JSON object, JSON.parse() will throw an error.\r\n     * @param key \r\n     */\r\n    private validateObjectKey(key: string): void {\r\n        JSON.parse(key);\r\n    }\r\n\r\n    /**\r\n     * Sets the cache item with the key and value given. \r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setItem(key: string, value: string): void {\r\n        const msalKey = this.generateCacheKey(key);\r\n        this.windowStorage.setItem(msalKey, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.setItemCookie(msalKey, value);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n     * @param key \r\n     */\r\n    getItem(key: string): string {\r\n        const msalKey = this.generateCacheKey(key);\r\n        const itemCookie = this.getItemCookie(msalKey);\r\n        if (this.cacheConfig.storeAuthStateInCookie && itemCookie) {\r\n            return itemCookie;\r\n        }\r\n        return this.windowStorage.getItem(msalKey);\r\n    }\r\n    \r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key \r\n     */\r\n    removeItem(key: string): void {\r\n        const msalKey = this.generateCacheKey(key);\r\n        this.windowStorage.removeItem(msalKey);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.clearItemCookie(msalKey);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key \r\n     */\r\n    containsKey(key: string): boolean {\r\n        const msalKey = this.generateCacheKey(key);\r\n        return this.windowStorage.hasOwnProperty(msalKey) || this.windowStorage.hasOwnProperty(key);\r\n    }\r\n    \r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys(): string[] {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    clear(): void {\r\n        let key: string;\r\n        for (key in this.windowStorage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if (this.windowStorage.hasOwnProperty(key) && (key.indexOf(Constants.CACHE_PREFIX) !== -1) && (key.indexOf(this.clientId) !== -1)) {\r\n                this.removeItem(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\r\n        let cookieStr = `${cookieName}=${cookieValue};path=/;`;\r\n        if (expires) {\r\n            const expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n\r\n        document.cookie = cookieStr;\r\n    }\r\n\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    getItemCookie(cookieName: string): string {\r\n        const name = `${cookieName}=`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            let cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return cookie.substring(name.length, cookie.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    clearItemCookie(cookieName: string): void {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    }\r\n\r\n    /**\r\n     * Clear all msal cookies\r\n     */\r\n    clearMsalCookie(state?: string): void {\r\n        const nonceKey = state ? `${TemporaryCacheKeys.NONCE_IDTOKEN}|${state}` : TemporaryCacheKeys.NONCE_IDTOKEN;\r\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n    }\r\n\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    getCookieExpirationTime(cookieLifeDays: number): string {\r\n        const today = new Date();\r\n        const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nexport class MathUtils {\r\n\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    static decimalToHex(num: number): string {\r\n        let hex: string = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { MathUtils } from \"../utils/MathUtils\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\nexport class GuidGenerator {\r\n\r\n    // browser crypto object used to generate random values\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    generateGuid(): string {\r\n        try {\r\n            const buffer: Uint8Array = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            const hex: string = \"0123456789abcdef\";\r\n            let r: number = 0;\r\n            let guidResponse: string = \"\";\r\n            for (let i: number = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class BrowserStringUtils {\r\n\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr \r\n     */\r\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\r\n        let nChr;\r\n        let nArrLen = 0;\r\n        const nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        const aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;      \r\n    }\r\n\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes \r\n     */\r\n    static utf8ArrToString (aBytes: Uint8Array): string {\r\n        let sView = \"\";\r\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n        return sView;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Encode {\r\n    \r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input \r\n     */\r\n    urlEncode(input: string): string {\r\n        return this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr \r\n     */\r\n    urlEncodeArr(inputArr: Uint8Array): string {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input \r\n     */\r\n    encode(input: string): string {\r\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(encodeURIComponent(input));\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    }\r\n\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes \r\n     */\r\n    private base64EncArr(aBytes: Uint8Array): string {  \r\n        const eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        let sB64Enc = \"\";\r\n      \r\n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(\r\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 12 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 6 & 63), \r\n                    this.uint6ToB64(nUint24 & 63)\r\n                );\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6 \r\n     */\r\n    private uint6ToB64 (nUint6: number): number {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Decode {\r\n\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input \r\n     */\r\n    decode(input: string): string {\r\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n\r\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\r\n    }\r\n\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String \r\n     * @param nBlockSize \r\n     */\r\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\r\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        const nInLen = sB64Enc.length;\r\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        const aBytes = new Uint8Array(nOutLen);\r\n\r\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum \r\n     */\r\n    private b64ToUint6(charNum: number): number {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ? \r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { PkceCodes } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n// Charset to generate values from\r\nconst CV_CHARSET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\";\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nexport class PkceGenerator {\r\n\r\n    private base64Encode: Base64Encode;\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    async generateCodes(): Promise<PkceCodes> {\r\n        const codeVerifier = this.generateCodeVerifier();\r\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\r\n        return {\r\n            verifier: codeVerifier,\r\n            challenge: codeChallenge\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    private generateCodeVerifier(): string {\r\n        try {\r\n            // Generate random values as utf-8\r\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // verifier as string\r\n            const pkceCodeVerifierString = this.bufferToCVString(buffer);\r\n            // encode verifier as base64\r\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncode(pkceCodeVerifierString);\r\n            return pkceCodeVerifierB64;\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\r\n        try {\r\n            // hashed verifier\r\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\r\n            // encode hash as base64\r\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a character string based on input array.\r\n     * @param buffer \r\n     */\r\n    private bufferToCVString(buffer: Uint8Array): string {\r\n        const charArr = [];\r\n        for (let i = 0; i < buffer.byteLength; i += 1) {\r\n            const index = buffer[i] % CV_CHARSET.length;\r\n            charArr.push(CV_CHARSET[index]);\r\n        }\r\n        return charArr.join(\"\");\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\n// SHA-256 hashing algorithm\r\nconst HASH_ALG = \"SHA-256\";\r\n\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nexport class BrowserCrypto {\r\n\r\n    constructor() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString \r\n     */\r\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\r\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n\r\n        return this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data);\r\n    }\r\n\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer \r\n     */\r\n    getRandomValues(dataBuffer: Uint8Array): void {\r\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    }\r\n\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    private hasIECrypto(): boolean {\r\n        return !!window[\"msCrypto\"];\r\n    }\r\n\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    private hasBrowserCrypto(): boolean {\r\n        return !!window.crypto;\r\n    }\r\n\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    private hasCryptoAPI(): boolean {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return window.crypto.subtle.digest(algorithm, data);\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return new Promise((resolve, reject) => {\r\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n            digestOperation.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ICrypto, PkceCodes } from \"@azure/msal-common\";\r\nimport { GuidGenerator } from \"./GuidGenerator\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { Base64Decode } from \"../encode/Base64Decode\";\r\nimport { PkceGenerator } from \"./PkceGenerator\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nexport class CryptoOps implements ICrypto {\r\n\r\n    private browserCrypto: BrowserCrypto;\r\n    private guidGenerator: GuidGenerator;\r\n    private b64Encode: Base64Encode;\r\n    private b64Decode: Base64Decode;\r\n    private pkceGenerator: PkceGenerator;\r\n\r\n    constructor() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n    }\r\n\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid(): string {\r\n        return this.guidGenerator.generateGuid();\r\n    }\r\n\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input \r\n     */\r\n    base64Encode(input: string): string {\r\n        return this.b64Encode.encode(input);\r\n    }    \r\n    \r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input \r\n     */\r\n    base64Decode(input: string): string {\r\n        return this.b64Decode.decode(input);\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    async generatePkceCodes(): Promise<PkceCodes> {\r\n        return this.pkceGenerator.generateCodes();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthorizationCodeModule, TokenResponse } from \"@azure/msal-common\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\n\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nexport abstract class InteractionHandler {\r\n\r\n    protected authModule: AuthorizationCodeModule;\r\n    protected browserStorage: BrowserStorage;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeModule, storageImpl: BrowserStorage) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n    }\r\n\r\n    /**\r\n     * Function to enable user interaction.\r\n     * @param requestUrl \r\n     */\r\n    abstract showUI(requestUrl: string): Window;\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash \r\n     */\r\n    abstract async handleCodeResponse(locationHash: string): Promise<TokenResponse>;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils, TemporaryCacheKeys, TokenResponse } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\n\r\nexport class RedirectHandler extends InteractionHandler {\r\n\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate \r\n     */\r\n    showUI(requestUrl: string): Window {\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(TemporaryCacheKeys.ORIGIN_URI, window.location.href);\r\n            this.browserStorage.setItem(BrowserConstants.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            const isIframedApp = BrowserUtils.isInIframe();\r\n            if (isIframedApp) {\r\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n            }\r\n            // Navigate window to request URL\r\n            BrowserUtils.navigateWindow(requestUrl);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Return this window handle. Not used for redirect, but needed for API definition.\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash \r\n     */\r\n    async handleCodeResponse(locationHash: string): Promise<TokenResponse> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n        // Handle code response.\r\n        const codeResponse = this.authModule.handleFragmentResponse(locationHash);\r\n        // Hash was processed successfully - remove from cache\r\n        this.browserStorage.removeItem(TemporaryCacheKeys.URL_HASH);\r\n        // Acquire token with retrieved code.\r\n        return this.authModule.acquireToken(codeResponse);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { UrlString, StringUtils, Constants, TokenResponse, CodeResponse, AuthorizationCodeModule } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\n\r\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nexport class PopupHandler extends InteractionHandler {\r\n\r\n    private currentWindow: Window;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeModule, storageImpl: BrowserStorage) {\r\n        super(authCodeModule, storageImpl);\r\n\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    showUI(requestUrl: string): Window {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(BrowserConstants.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(locationHash: string): Promise<TokenResponse> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Handle code response.\r\n        const codeResponse = this.authModule.handleFragmentResponse(locationHash);\r\n\r\n        // Acquire token with retrieved code.\r\n        return this.authModule.acquireToken(codeResponse);\r\n    }\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeFlow(locationHash: string): Promise<CodeResponse> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Handle code response.\r\n        return this.authModule.handleFragmentResponse(locationHash);\r\n    }\r\n\r\n    /**\r\n     * Monitors a window until it loads a url with a hash\r\n     * @param contentWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     * @param urlNavigate - url that was navigated to\r\n     */\r\n    monitorWindowForHash(contentWindow: Window, timeout: number, urlNavigate: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const maxTicks = timeout / BrowserConstants.POPUP_POLL_INTERVAL_MS;\r\n            let ticks = 0;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (contentWindow.closed) {\r\n                    // Window is closed\r\n                    this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n\r\n                let href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n\r\n                // Only run clock when we are on same domain\r\n                ticks++;\r\n\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    const contentHash = contentWindow.location.hash;\r\n                    this.cleanPopup(contentWindow);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                } else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    this.cleanPopup(contentWindow);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createPopupWindowTimeoutError(urlNavigate));\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POPUP_POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number): Window {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            const winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            const top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n            // open the window\r\n            const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left);\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.authModule.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e: Event): void {\r\n        this.authModule.cancelRequest();\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n        this.currentWindow.close();\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        delete e[\"returnValue\"];\r\n    }\r\n\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    private cleanPopup(popupWindow?: Window): void {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { Account, AuthorizationCodeModule, AuthenticationParameters, INetworkModule, TokenResponse, CodeResponse, UrlString, TemporaryCacheKeys, TokenRenewParameters, StringUtils } from \"@azure/msal-common\";\r\nimport { Configuration, buildConfiguration } from \"./Configuration\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\nimport { CryptoOps } from \"../crypto/CryptoOps\";\r\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\r\nimport { PopupHandler } from \"../interaction_handler/PopupHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { AuthCallback } from \"../types/AuthCallback\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport {ServerAuthorizationCodeResponse} from \"../../../msal-common/src/server/ServerAuthorizationCodeResponse\";\r\n\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nexport class PublicClientApplication {\r\n\r\n    // Input configuration by developer/user\r\n    private config: Configuration;\r\n\r\n    // auth functions imported from @azure/msal-common module\r\n    private authModule: AuthorizationCodeModule;\r\n\r\n    // callback for error/token response\r\n    private authCallback: AuthCallback = null;\r\n\r\n    // Crypto interface implementation\r\n    private browserCrypto: CryptoOps;\r\n\r\n    // Storage interface implementation\r\n    private browserStorage: BrowserStorage;\r\n\r\n    // Network interface implementation\r\n    private networkClient: INetworkModule;\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(configuration: Configuration) {\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration);\r\n\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = new CryptoOps();\r\n\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\r\n\r\n        // Create auth module.\r\n        this.authModule = new AuthorizationCodeModule({\r\n            auth: this.config.auth,\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                telemetry: this.config.system.telemetry\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage\r\n        });\r\n    }\r\n\r\n    // #region Redirect Flow\r\n\r\n    /**\r\n     * Set the callback functions for the redirect flow to send back the success or error object, and process\r\n     * any redirect-related data.\r\n     * IMPORTANT: Please do not use this function when using the popup APIs, as it may break the response handling\r\n     * in the main window.\r\n     *\r\n     * @param {@link (AuthCallback:type)} authCallback - Callback which contains\r\n     * an AuthError object, containing error data from either the server\r\n     * or the library, depending on the origin of the error, or the AuthResponse object\r\n     * containing data from the server (returned with a null or non-blocking error).\r\n     */\r\n    async handleRedirectCallback(authCallback: AuthCallback): Promise<void> {\r\n        // Check whether callback object was passed.\r\n        if (!authCallback) {\r\n            throw BrowserConfigurationAuthError.createInvalidCallbackObjectError(authCallback);\r\n        }\r\n\r\n        // Set the callback object.\r\n        this.authCallback = authCallback;\r\n\r\n        // Check if we need to navigate, otherwise handle hash\r\n        try {\r\n            await this.handleRedirectResponse();\r\n        } catch (err) {\r\n            this.authCallback(err);\r\n        }\r\n    }\r\n\r\n    async handleRedirectCodeFlowCallback(authCallback: AuthCallback): Promise<void> {\r\n        // Check whether callback object was passed.\r\n        if (!authCallback) {\r\n            throw BrowserConfigurationAuthError.createInvalidCallbackObjectError(authCallback);\r\n        }\r\n\r\n        // Set the callback object.\r\n        this.authCallback = authCallback;\r\n\r\n        // Check if we need to navigate, otherwise handle hash\r\n        try {\r\n            await this.handleRedirectCodeFlowResponse();\r\n        } catch (err) {\r\n            this.authCallback(err);\r\n        }\r\n    }\r\n\r\n    private async handleRedirectCodeFlowResponse(): Promise<void> {\r\n        // Get current location hash from window or cache.\r\n        const { location: { hash } } = window;\r\n        const cachedHash = this.browserStorage.getItem(TemporaryCacheKeys.URL_HASH);\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n        if (this.config.auth.navigateToLoginRequestUrl && isResponseHash && !BrowserUtils.isInIframe()) {\r\n            // Returned from authority using redirect - need to perform navigation before processing response\r\n            this.browserStorage.setItem(TemporaryCacheKeys.URL_HASH, hash);\r\n            const loginRequestUrl = this.browserStorage.getItem(TemporaryCacheKeys.ORIGIN_URI);\r\n            if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\r\n                // Redirect to home page if login request url is null (real null or the string null)\r\n                this.authModule.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                BrowserUtils.navigateWindow(\"/\", true);\r\n            } else {\r\n                BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!isResponseHash) {\r\n            // Loaded page with no valid hash - pass in the value retrieved from cache, or null/empty string\r\n            return this.handleHashCodeFlow(cachedHash);\r\n        }\r\n\r\n        if (!this.config.auth.navigateToLoginRequestUrl) {\r\n            // We don't need to navigate - check for hash and prepare to process\r\n            BrowserUtils.clearHash();\r\n            return this.handleHashCodeFlow(hash);\r\n        }\r\n    }\r\n\r\n    private async handleHashCodeFlow(responseHash: string): Promise<void> {\r\n        if (!StringUtils.isEmpty(responseHash)) {\r\n            // Hash contains known properties - handle and return in callback\r\n            const hashUrlString = new UrlString(responseHash);\r\n            const serverParams = hashUrlString.getDeserializedHash<ServerAuthorizationCodeResponse>();\r\n            // Create response object\r\n            const response: CodeResponse = {\r\n                code: serverParams.code,\r\n                userRequestState: serverParams.state\r\n            };\r\n            this.authCallback(null, response);\r\n        } else {\r\n            // There is no hash - assume we are in clean state and clear any current request data.\r\n            this.cleanRequest();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     */\r\n    private async handleRedirectResponse(): Promise<void> {\r\n        // Get current location hash from window or cache.\r\n        const { location: { hash } } = window;\r\n        const cachedHash = this.browserStorage.getItem(TemporaryCacheKeys.URL_HASH);\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n        if (this.config.auth.navigateToLoginRequestUrl && isResponseHash && !BrowserUtils.isInIframe()) {\r\n            // Returned from authority using redirect - need to perform navigation before processing response\r\n            this.browserStorage.setItem(TemporaryCacheKeys.URL_HASH, hash);\r\n            const loginRequestUrl = this.browserStorage.getItem(TemporaryCacheKeys.ORIGIN_URI);\r\n            if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\r\n                // Redirect to home page if login request url is null (real null or the string null)\r\n                this.authModule.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                BrowserUtils.navigateWindow(\"/\", true);\r\n            } else {\r\n                BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!isResponseHash) {\r\n            // Loaded page with no valid hash - pass in the value retrieved from cache, or null/empty string\r\n            return this.handleHash(cachedHash);\r\n        }\r\n\r\n        if (!this.config.auth.navigateToLoginRequestUrl) {\r\n            // We don't need to navigate - check for hash and prepare to process\r\n            BrowserUtils.clearHash();\r\n            return this.handleHash(hash);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if hash exists and handles in window. Otherwise, cancel any current requests and continue.\r\n     * @param responseHash\r\n     * @param interactionHandler\r\n     */\r\n    private async handleHash(responseHash: string): Promise<void> {\r\n        const interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\r\n        if (!StringUtils.isEmpty(responseHash)) {\r\n            // Hash contains known properties - handle and return in callback\r\n            const tokenResponse = await interactionHandler.handleCodeResponse(responseHash);\r\n            this.authCallback(null, tokenResponse);\r\n        } else {\r\n            // There is no hash - assume we are in clean state and clear any current request data.\r\n            this.cleanRequest();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     */\r\n    loginRedirect(request: AuthenticationParameters): void {\r\n        // Check if callback has been set. If not, handleRedirectCallbacks wasn't called correctly.\r\n        if (!this.authCallback) {\r\n            throw BrowserConfigurationAuthError.createRedirectCallbacksNotSetError();\r\n        }\r\n\r\n        // Check if interaction is in progress. Throw error in callback and return if true.\r\n        if (this.interactionInProgress()) {\r\n            this.authCallback(BrowserAuthError.createInteractionInProgressError());\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\r\n\r\n            // Create login url, which will by default append the client id scope to the call.\r\n            this.authModule.createLoginUrl(request).then((navigateUrl) => {\r\n                // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n                interactionHandler.showUI(navigateUrl);\r\n            });\r\n        } catch (e) {\r\n            this.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    acquireTokenRedirect(request: AuthenticationParameters): void {\r\n        // Check if callback has been set. If not, handleRedirectCallbacks wasn't called correctly.\r\n        if (!this.authCallback) {\r\n            throw BrowserConfigurationAuthError.createRedirectCallbacksNotSetError();\r\n        }\r\n\r\n        // Check if interaction is in progress. Throw error in callback and return if true.\r\n        if (this.interactionInProgress()) {\r\n            this.authCallback(BrowserAuthError.createInteractionInProgressError());\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\r\n\r\n            // Create acquire token url.\r\n            this.authModule.createAcquireTokenUrl(request).then((navigateUrl) => {\r\n                // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n                interactionHandler.showUI(navigateUrl);\r\n            });\r\n        } catch (e) {\r\n            this.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Popup Flow\r\n\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async loginPopup(request: AuthenticationParameters): Promise<TokenResponse> {\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n\r\n        // Create login url, which will by default append the client id scope to the call.\r\n        const navigateUrl = await this.authModule.createLoginUrl(request);\r\n\r\n        // Acquire token with popup\r\n        return this.popupTokenHelper(navigateUrl);\r\n    }\r\n\r\n    async loginPopupCodeFlow(request: AuthenticationParameters): Promise<CodeResponse> {\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n\r\n        // Create login url, which will by default append the client id scope to the call.\r\n        const navigateUrl = await this.authModule.createLoginUrl(request);\r\n\r\n        // Acquire token with popup\r\n        return this.popupTokenHelperCodeFlow(navigateUrl);\r\n    }\r\n\r\n    private async popupTokenHelperCodeFlow(navigateUrl: string): Promise<CodeResponse> {\r\n        try {\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new PopupHandler(this.authModule, this.browserStorage);\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupWindow = interactionHandler.showUI(navigateUrl);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const hash = await interactionHandler.monitorWindowForHash(popupWindow, this.config.system.windowHashTimeout, navigateUrl);\r\n            // Handle response from hash string.\r\n            const codeResponse = await interactionHandler.handleCodeFlow(hash);\r\n            this.authCallback(null, codeResponse);\r\n            return codeResponse;\r\n        } catch (e) {\r\n            this.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenPopup(request: AuthenticationParameters): Promise<TokenResponse> {\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n\r\n        // Create acquire token url.\r\n        const navigateUrl = await this.authModule.createAcquireTokenUrl(request);\r\n\r\n        // Acquire token with popup\r\n        return this.popupTokenHelper(navigateUrl);\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code with a popup from given url, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     */\r\n    private async popupTokenHelper(navigateUrl: string): Promise<TokenResponse> {\r\n        try {\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new PopupHandler(this.authModule, this.browserStorage);\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupWindow = interactionHandler.showUI(navigateUrl);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const hash = await interactionHandler.monitorWindowForHash(popupWindow, this.config.system.windowHashTimeout, navigateUrl);\r\n            // Handle response from hash string.\r\n            return await interactionHandler.handleCodeResponse(hash);\r\n        } catch (e) {\r\n            this.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Silent Flow\r\n\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    async acquireTokenSilent(tokenRequest: TokenRenewParameters): Promise<TokenResponse> {\r\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n        return this.authModule.renewToken(tokenRequest);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Logout\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     */\r\n    logout(): void {\r\n        // create logout string and navigate user window to logout. Auth module will clear cache.\r\n        this.authModule.logout().then(logoutUri => {\r\n            BrowserUtils.navigateWindow(logoutUri);\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Getters and setters\r\n\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    public getRedirectUri(): string {\r\n        return this.authModule.getRedirectUri();\r\n    }\r\n\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    public getPostLogoutRedirectUri(): string {\r\n        return this.authModule.getPostLogoutRedirectUri();\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    public getAccount(): Account {\r\n        return this.authModule.getAccount();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helpers\r\n\r\n    /**\r\n     * Helper to check whether interaction is in progress\r\n     */\r\n    private interactionInProgress(): boolean {\r\n        // Check whether value in cache is present and equal to expected value\r\n        return this.browserStorage.getItem(BrowserConstants.INTERACTION_STATUS_KEY) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\r\n    }\r\n\r\n    /**\r\n     * Helper to remove interaction status and remove tempoarary request data.\r\n     */\r\n    private cleanRequest(): void {\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n        this.authModule.cancelRequest();\r\n    }\r\n\r\n    // #endregion\r\n}\r\n"],"names":["extendStatics","__extends","__assign","__awaiter","__generator","DEFAULT_AUTH_OPTIONS","DEFAULT_SYSTEM_OPTIONS"],"mappings":"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"}